<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>AI on Jasmine❀Hiker</title>
    <link>//localhost:1313/tags/ai/</link>
    <description>Recent content in AI on Jasmine❀Hiker</description>
    <generator>Hugo</generator>
    <language>en</language>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Sat, 19 Apr 2025 21:16:56 +0800</lastBuildDate>
    <atom:link href="//localhost:1313/tags/ai/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Sais_third_medicine_think</title>
      <link>//localhost:1313/posts/sais_third_medicine_think/</link>
      <pubDate>Sat, 19 Apr 2025 21:16:56 +0800</pubDate>
      <guid>//localhost:1313/posts/sais_third_medicine_think/</guid>
      <description>&lt;h1 id=&#34;第三届世界科学智能大赛参赛想法&#34;&gt;第三届世界科学智能大赛参赛想法&lt;/h1&gt;&#xA;&lt;h2 id=&#34;赛题&#34;&gt;赛题&lt;/h2&gt;&#xA;&lt;p&gt;赛题是比较挑战性，刚开始看赛题的时候还有点懵懵的。由于我之前所了解的RNA预测算法都是根据RNA的一级结构去预测RNA的二级结构，这个比赛的赛题是用RNA的二级结构预测一级结构，我个人认为是非常有挑战性。&lt;/p&gt;&#xA;&lt;h2 id=&#34;感想&#34;&gt;感想&lt;/h2&gt;&#xA;&lt;h3 id=&#34;task1&#34;&gt;task1&lt;/h3&gt;&#xA;&lt;p&gt;在完成Task1的时候，感觉跟着基础教程走很快就能完成。具体也没有深究具体的代码和原理，后面慢慢研究代码和赛题，逐渐明白了赛题的挑战性。如果是我自己使用AI去设计完成一个baseline估计要学习研究人工智能相关的很多知识，非常感谢AI青训营的指导和帮助。&lt;/p&gt;&#xA;&lt;h3 id=&#34;task2&#34;&gt;task2&lt;/h3&gt;&#xA;&lt;p&gt;完成Task2的时候花费了，遇到了蛮多问题的，对于baseline的理解和竞赛流程可以非常地认知和理解，但是距离深入理解和认知可能还有挺长的一段路要走。要去系统学习了机器学习和深度学习的原理，神经网络算法相关的知识，在交流会上也认识到了很多大佬，加入青训营收获了很多。&lt;/p&gt;&#xA;&lt;h2 id=&#34;问题&#34;&gt;问题&lt;/h2&gt;&#xA;&lt;h3 id=&#34;镜像问题&#34;&gt;镜像问题&lt;/h3&gt;&#xA;&lt;p&gt;Task1的时候还可以使用aliyun云镜像服务进行构建，但是到了做Task2的时候，就不能使用aliyun云镜像服务进行构建。&lt;/p&gt;&#xA;&lt;p&gt;无奈只能尝试本地构建，根据云镜像服务的说明使用Linux主机进行docker的构建，首先将代码仓库用如下命令拉下来:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git clone https://codeup.aliyun.com/67fc70cbfb34110a021fb833/sais_medicine.git&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然后进入到sais_medicine目录下使用docker构建的命令进行镜像的构建:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo docker build -t sais_medicine:v5 .&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;查看镜像的id，以便后续打标签推送&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo docker images&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;输出如下结果：&#xA;!()[/images/sais_third_medicine/Pasted_image 20250419224241.png]&#xA;如果docker运行没有问题就可以进行打标签操作了，按照云镜像服务的说明，打标签：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo docker tag 8e232b63ce72 crpi-mesc8odxqa2miyzr.cn-hangzhou.personal.cr.aliyuncs.com/sais_thrid_jashacker/sais_medicine:v5&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;推送到云镜像服务上：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; sudo docker pull crpi-mesc8odxqa2miyzr.cn-hangzhou.personal.cr.aliyuncs.com/sais_thrid_jashacker/sais_medicine&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;torch-cluster&#34;&gt;torch-cluster&lt;/h3&gt;&#xA;&lt;p&gt;进阶算法使用到了python的torch-cluster，python的torch-cluster安装花费了挺多时间的，经常安装不成功或者安装成功了版本不符合调用失败。&lt;/p&gt;&#xA;&lt;p&gt;针对安装不成功或者安装成功了版本不符合调用失败这个问题，根据pypi官网&lt;a href=&#34;https://pypi.org/project/torch-cluster/&#34;&gt;https://pypi.org/project/torch-cluster/&lt;/a&gt;的说明进行安装可以了，使用如下命令进行安装：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pip install torch-cluster -f https://data.pyg.org/whl/torch-2.1.0+&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;CUDA&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;.html&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;可以根据torch的版本和系统cuda版本进行修改，比如，torch-2.0.0，cuda-1.1.8的环境使用如下命令进行安装：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pip install torch-cluster -f https://data.pyg.org/whl/torch-2.0.0+cu118.html&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;如果输入正确无误安装应该很快就可以完成。&lt;/p&gt;&#xA;&lt;h3 id=&#34;提交&#34;&gt;提交&lt;/h3&gt;&#xA;&lt;p&gt;提交的时候和Task1不太一样，由于使用了新算法，新模型之前的run.py进行加载模型时容易出现错误。&lt;/p&gt;&#xA;&lt;p&gt;修改run.py使其符合新算法，能够成功加载新算法生成的模型，同时也要修改DockerFile的内容使其成功安装python的torch-cluster。&lt;/p&gt;&#xA;&lt;h2 id=&#34;总结&#34;&gt;总结&lt;/h2&gt;&#xA;&lt;p&gt;这次AI青训营给我带来了很多收获，感受到训练小宠物的快乐，同时也感受到AI的魅力。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
