<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Jasmine❀Hiker</title>
    <link>//localhost:1313/</link>
    <description>Recent content on Jasmine❀Hiker</description>
    <generator>Hugo</generator>
    <language>en</language>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Sat, 19 Apr 2025 21:16:56 +0800</lastBuildDate>
    <atom:link href="//localhost:1313/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Sais_third_medicine_think</title>
      <link>//localhost:1313/posts/sais_third_medicine_think/</link>
      <pubDate>Sat, 19 Apr 2025 21:16:56 +0800</pubDate>
      <guid>//localhost:1313/posts/sais_third_medicine_think/</guid>
      <description>&lt;h1 id=&#34;第三届世界科学智能大赛参赛想法&#34;&gt;第三届世界科学智能大赛参赛想法&lt;/h1&gt;&#xA;&lt;h2 id=&#34;赛题&#34;&gt;赛题&lt;/h2&gt;&#xA;&lt;p&gt;赛题是比较挑战性，刚开始看赛题的时候还有点懵懵的。由于我之前所了解的RNA预测算法都是根据RNA的一级结构去预测RNA的二级结构，这个比赛的赛题是用RNA的二级结构预测一级结构，我个人认为是非常有挑战性。&lt;/p&gt;&#xA;&lt;h2 id=&#34;感想&#34;&gt;感想&lt;/h2&gt;&#xA;&lt;h3 id=&#34;task1&#34;&gt;task1&lt;/h3&gt;&#xA;&lt;p&gt;在完成Task1的时候，感觉跟着基础教程走很快就能完成。具体也没有深究具体的代码和原理，后面慢慢研究代码和赛题，逐渐明白了赛题的挑战性。如果是我自己使用AI去设计完成一个baseline估计要学习研究人工智能相关的很多知识，非常感谢AI青训营的指导和帮助。&lt;/p&gt;&#xA;&lt;h3 id=&#34;task2&#34;&gt;task2&lt;/h3&gt;&#xA;&lt;p&gt;完成Task2的时候花费了，遇到了蛮多问题的，对于baseline的理解和竞赛流程可以非常地认知和理解，但是距离深入理解和认知可能还有挺长的一段路要走。要去系统学习了机器学习和深度学习的原理，神经网络算法相关的知识，在交流会上也认识到了很多大佬，加入青训营收获了很多。&lt;/p&gt;&#xA;&lt;h2 id=&#34;问题&#34;&gt;问题&lt;/h2&gt;&#xA;&lt;h3 id=&#34;镜像问题&#34;&gt;镜像问题&lt;/h3&gt;&#xA;&lt;p&gt;Task1的时候还可以使用aliyun云镜像服务进行构建，但是到了做Task2的时候，就不能使用aliyun云镜像服务进行构建。&lt;/p&gt;&#xA;&lt;p&gt;无奈只能尝试本地构建，根据云镜像服务的说明使用Linux主机进行docker的构建，首先将代码仓库用如下命令拉下来:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git clone https://codeup.aliyun.com/67fc70cbfb34110a021fb833/sais_medicine.git&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然后进入到sais_medicine目录下使用docker构建的命令进行镜像的构建:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo docker build -t sais_medicine:v5 .&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;查看镜像的id，以便后续打标签推送&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo docker images&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;输出如下结果：&#xA;&lt;img src=&#34;//localhost:1313/images/sais_third_medicine/Pasted_image_20250419224241.png&#34;&gt;&#xA;如果docker运行没有问题就可以进行打标签操作了，按照云镜像服务的说明，打标签：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo docker tag 8e232b63ce72 crpi-mesc8odxqa2miyzr.cn-hangzhou.personal.cr.aliyuncs.com/sais_thrid_jashacker/sais_medicine:v5&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;推送到云镜像服务上：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; sudo docker pull crpi-mesc8odxqa2miyzr.cn-hangzhou.personal.cr.aliyuncs.com/sais_thrid_jashacker/sais_medicine&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;torch-cluster&#34;&gt;torch-cluster&lt;/h3&gt;&#xA;&lt;p&gt;进阶算法使用到了python的torch-cluster，python的torch-cluster安装花费了挺多时间的，经常安装不成功或者安装成功了版本不符合调用失败。&lt;/p&gt;&#xA;&lt;p&gt;针对安装不成功或者安装成功了版本不符合调用失败这个问题，根据pypi官网&lt;a href=&#34;https://pypi.org/project/torch-cluster/&#34;&gt;https://pypi.org/project/torch-cluster/&lt;/a&gt;的说明进行安装可以了，使用如下命令进行安装：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pip install torch-cluster -f https://data.pyg.org/whl/torch-2.1.0+&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;CUDA&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;.html&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;可以根据torch的版本和系统cuda版本进行修改，比如，torch-2.0.0，cuda-1.1.8的环境使用如下命令进行安装：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pip install torch-cluster -f https://data.pyg.org/whl/torch-2.0.0+cu118.html&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;如果输入正确无误安装应该很快就可以完成。&lt;/p&gt;&#xA;&lt;h3 id=&#34;提交&#34;&gt;提交&lt;/h3&gt;&#xA;&lt;p&gt;提交的时候和Task1不太一样，由于使用了新算法，新模型之前的run.py进行加载模型时容易出现错误。&lt;/p&gt;&#xA;&lt;p&gt;修改run.py使其符合新算法，能够成功加载新算法生成的模型，同时也要修改DockerFile的内容使其成功安装python的torch-cluster。&lt;/p&gt;&#xA;&lt;h2 id=&#34;总结&#34;&gt;总结&lt;/h2&gt;&#xA;&lt;p&gt;这次AI青训营给我带来了很多收获，感受到训练小宠物的快乐，同时也感受到AI的魅力。&lt;/p&gt;</description>
    </item>
    <item>
      <title>OtterCTF 2018 内存取证复现</title>
      <link>//localhost:1313/posts/otterctf_2018_memory_forensic_writeup/</link>
      <pubDate>Tue, 04 Oct 2022 23:18:37 +0800</pubDate>
      <guid>//localhost:1313/posts/otterctf_2018_memory_forensic_writeup/</guid>
      <description>&lt;h1 id=&#34;otterctf-2018-memory-forensic-reappearance&#34;&gt;OtterCTF 2018 Memory Forensic Reappearance&lt;/h1&gt;&#xA;&lt;p&gt;想学习并练习下电子取证技术，经过网络上的一番搜索发现OtterCTF的取证题目非常有意思，这次尝试练习下内存取证的题目顺便学习下内存取证的相关内容和技能点。内存取证主要使用的工具是Volatility，githu上面有相关项目。Volatility有两个版本分别是用python2和python3进行构建的，目前主要的组件还是以python2为主。&#xA;Volatility项目地址：&lt;a href=&#34;https://github.com/volatilityfoundation/volatility&#34;&gt;https://github.com/volatilityfoundation/volatility&lt;/a&gt;&#xA;Volatility3项目地址：&lt;a href=&#34;https://github.com/volatilityfoundation/volatility3&#34;&gt;https://github.com/volatilityfoundation/volatility3&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;环境配置：Kali Linux 2022&#xA;工具配置：volatility + mimikatz&lt;/p&gt;&#xA;&lt;h2 id=&#34;info&#34;&gt;Info&lt;/h2&gt;&#xA;&lt;p&gt;题目附件就一个镜像，先查看下镜像的指纹数据：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;5b3d8a9f9c96581a821c19b71dd6aa80dd299fc674b818f443f3a6fb5495a872  OtterCTF.vmem&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;使用vol简单查看下镜像信息数据，查看数据的指令：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vol.py -f OtterCTF.vmem imageinfo&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;strong&gt;说明&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;vol.py&lt;/code&gt; volatility程序&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;-f OtterCTF.vmem&lt;/code&gt;  加载&lt;code&gt;OtterCTF.vmem&lt;/code&gt;内存镜像文件&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;imageinfo&lt;/code&gt; 查看内存镜像的基本信息&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;得到如下信息：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img alt=&#34;image-20221002204848160&#34; src=&#34;//localhost:1313/images/OtterCTF_2018_Memory_Forensic_writeup/image-20221002204848160.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;可以看到大致的镜像系统是Win7系统&lt;/p&gt;&#xA;&lt;h2 id=&#34;what-the-password&#34;&gt;What the password?&lt;/h2&gt;&#xA;&lt;p&gt;查看题目描述：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;you got a sample of rick&amp;#39;s PC&amp;#39;s memory. can you get his user password?&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;要得到用户名的密码，先获取到hash数据，使用获取hash的指令：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vol.py -f OtterCTF.vmem --profile&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;Win7SP1x64 hashdump  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;--profile=Win7SP1x64&lt;/code&gt; 设置配置为&lt;code&gt;Win7SP1x64&lt;/code&gt;配置&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;hashdump&lt;/code&gt; 从内存中dump出密码的hash信息&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;得到hash信息：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img alt=&#34;image-20221002212051508&#34; src=&#34;//localhost:1313/images/OtterCTF_2018_Memory_Forensic_writeup/image-20221002212051508.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;对于这种hash信息可以使用mimikatz插件，或者使用hashcat也可以，这里使用mimikatz进行获取&lt;/p&gt;&#xA;&lt;p&gt;使用如下指令使用mimikatz插件进行获取：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vol.py -f OtterCTF.vmem --profile&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;Win7SP1x64 mimikatz&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;得到如下信息：&lt;/p&gt;</description>
    </item>
    <item>
      <title>攻防世界 RE 日常练习 002</title>
      <link>//localhost:1313/posts/xctf-reverse_daliy_002/</link>
      <pubDate>Sun, 04 Sep 2022 11:30:27 +0800</pubDate>
      <guid>//localhost:1313/posts/xctf-reverse_daliy_002/</guid>
      <description>&lt;h1 id=&#34;攻防世界-re-日常练习-002&#34;&gt;攻防世界 RE 日常练习 002&lt;/h1&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;由于攻防世界界面改版，题目划分与之前的题目划分出现了差异，变成了难度划分形式，和之前的不太一样。为了之前形式一致，故更改为日常练习&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;新版攻防世界界面：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img alt=&#34;image-20220903161040700&#34; src=&#34;//localhost:1313/images/XCTF-REVERSE_Daliy_002/image-20220903161040700.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;本次把攻防世界难度为1的题目补了下，找下CTF题目的手感。不过攻防世界难度1的题目，难度真的很不一致。&lt;/p&gt;&#xA;&lt;h2 id=&#34;xxxorrr&#34;&gt;xxxorrr&lt;/h2&gt;&#xA;&lt;p&gt;这道题目应该是攻防世界的一道新题目，难度应该是比较低的。&lt;/p&gt;&#xA;&lt;p&gt;首先使用die查看下程序信息：&lt;img alt=&#34;image-20220903163539118&#34; src=&#34;//localhost:1313/images/XCTF-REVERSE_Daliy_002/image-20220903163539118.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;amd64架构的程序，无壳，使用ida pro直接看：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img alt=&#34;image-20220903163849241&#34; src=&#34;//localhost:1313/images/XCTF-REVERSE_Daliy_002/image-20220903163849241.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;进入到主程序可以发现：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img alt=&#34;image-20220903163921702&#34; src=&#34;//localhost:1313/images/XCTF-REVERSE_Daliy_002/image-20220903163921702.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;程序非常简单，仅仅只是进行了异或操作。觉得这个程序就是简单的异或操作。寻找关键的数据：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img alt=&#34;image-20220903164142513&#34; src=&#34;//localhost:1313/images/XCTF-REVERSE_Daliy_002/image-20220903164142513.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;以为这样就结束了，使用脚本跑，结果跑不出来flag，于是只能继续分析程序代码，主程序前面有一个程序函数执行，可能有进行操作：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img alt=&#34;image-20220903164827415&#34; src=&#34;//localhost:1313/images/XCTF-REVERSE_Daliy_002/image-20220903164827415.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;跟进这个函数发现返回了一个可能是系统函数的一个函数&lt;/p&gt;&#xA;&lt;p&gt;&lt;img alt=&#34;image-20220903165048716&#34; src=&#34;//localhost:1313/images/XCTF-REVERSE_Daliy_002/image-20220903165048716.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;使用搜索引擎查找这个函数得到这个函数的功能描述：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img alt=&#34;image-20220903165237194&#34; src=&#34;//localhost:1313/images/XCTF-REVERSE_Daliy_002/image-20220903165237194.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;说明这个函数会注册一个函数在主函数结束的时候进行调用，跟进注册的函数：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img alt=&#34;image-20220903165937553&#34; src=&#34;//localhost:1313/images/XCTF-REVERSE_Daliy_002/image-20220903165937553.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;发现一个比较有意思的函数，应该就是进行判断的关键函数，中间进行了比较。&lt;/p&gt;&#xA;&lt;p&gt;由于对s1变量的操作存在有一定的怀疑，于是查找s1变量的交叉引用来查看信息找到一个交叉引用，这个交叉引用对s1进行操作&lt;/p&gt;&#xA;&lt;p&gt;&lt;img alt=&#34;image-20220903170211040&#34; src=&#34;//localhost:1313/images/XCTF-REVERSE_Daliy_002/image-20220903170211040.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;继续跟进交叉引用，发现这个函数在init函数内部进行调用&lt;/p&gt;&#xA;&lt;p&gt;&lt;img alt=&#34;image-20220903170302861&#34; src=&#34;//localhost:1313/images/XCTF-REVERSE_Daliy_002/image-20220903170302861.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;因此，s1变量进行了两次操作，根据原理编写exp：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;s1 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;[&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;0x71&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x61&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x73&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x78&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x63&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x79&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x74&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x67&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x73&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x61&lt;/span&gt;, &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;0x73&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x78&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x63&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x76&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x72&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x65&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x66&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x67&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x68&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x6E&lt;/span&gt;, &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;0x72&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x66&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x67&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x68&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x6E&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x6A&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x65&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x64&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x66&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x67&lt;/span&gt;, &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;0x62&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x68&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x6E&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;s2 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;0x56&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x4E&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x57&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x58&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x51&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x51&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x09&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x46&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x17&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x46&lt;/span&gt;, &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;0x54&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x5A&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x59&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x59&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x1F&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x48&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x32&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x5B&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x6B&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x7C&lt;/span&gt;, &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;0x75&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x6E&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x7E&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x6E&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x2F&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x77&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x4F&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x7A&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x71&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x43&lt;/span&gt;, &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;0x2B&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x26&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x89&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0xFE&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;print(len(s1))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;print(len(s2))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;flag &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; []&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; range(&lt;span style=&#34;color:#ae81ff&#34;&gt;34&lt;/span&gt;):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    flag&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(s1[i]&lt;span style=&#34;color:#f92672&#34;&gt;^&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;65&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;^&lt;/span&gt;s2[i])&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;print(bytes(flag))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;运行得到flag：&lt;code&gt;flag{c0n5truct0r5_functi0n_in_41f}&lt;/code&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;happyctf&#34;&gt;happyctf&lt;/h2&gt;&#xA;&lt;p&gt;题目给到了一个exe文件和一个pdb符号文件。使用die查看文件架构和文件信息：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img alt=&#34;image-20220903171041190&#34; src=&#34;//localhost:1313/images/XCTF-REVERSE_Daliy_002/image-20220903171041190.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;发现是一个PE32的命令行程序，无壳，使用ida直接看：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img alt=&#34;image-20220903171221296&#34; src=&#34;//localhost:1313/images/XCTF-REVERSE_Daliy_002/image-20220903171221296.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;加载程序的时候，也要加载pdb查看：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img alt=&#34;image-20220903171509446&#34; src=&#34;//localhost:1313/images/XCTF-REVERSE_Daliy_002/image-20220903171509446.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;看样子应该是一个C++的程序，很多程序名都已经被粉碎了，所在位置应该就是主函数的所在位置，直接F5来查看程序的伪代码：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img alt=&#34;image-20220903171807207&#34; src=&#34;//localhost:1313/images/XCTF-REVERSE_Daliy_002/image-20220903171807207.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;寻找到关键信息来进行突围，进行简单的代码审计发现：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img alt=&#34;image-20220903172024279&#34; src=&#34;//localhost:1313/images/XCTF-REVERSE_Daliy_002/image-20220903172024279.png&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>2022 网鼎杯 青龙组 Writeup</title>
      <link>//localhost:1313/posts/2022_wdb_ql-writeup/</link>
      <pubDate>Wed, 31 Aug 2022 17:28:44 +0800</pubDate>
      <guid>//localhost:1313/posts/2022_wdb_ql-writeup/</guid>
      <description>&lt;h1 id=&#34;2022-网鼎杯-青龙组-writeup&#34;&gt;2022 网鼎杯 青龙组 Writeup&lt;/h1&gt;&#xA;&lt;p&gt;今年网鼎杯的逆向题目是相对来说比较简单的，在比赛的时候做出了两道逆向题目。&lt;/p&gt;&#xA;&lt;p&gt;第二道逆向apk的题目找到文章了，但是去看Crypto的题目了，也就没有认真去钻逆向的那道题目。&lt;/p&gt;&#xA;&lt;p&gt;Crypto题目由于自身的数学敏感度不够没能解出，还需要继续提高&lt;/p&gt;&#xA;&lt;h2 id=&#34;解出&#34;&gt;解出&lt;/h2&gt;&#xA;&lt;h3 id=&#34;fakeshell&#34;&gt;fakeshell&lt;/h3&gt;&#xA;&lt;p&gt;题目给到了一个exe文件，使用die查看该文件：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img alt=&#34;image-20220828123956402&#34; src=&#34;//localhost:1313/images/2022_WDB_QL-writeup/image-20220828123956402.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;发现是一个upx压缩壳加密的程序，尝试使用upx脱壳：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img alt=&#34;image-20220828133038392&#34; src=&#34;//localhost:1313/images/2022_WDB_QL-writeup/image-20220828133038392.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;发现壳可能被修改过，需要手动脱壳。先尝试运行下程序，寻找下可能存在的锚点字符串信息：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img alt=&#34;image-20220828140533175&#34; src=&#34;//localhost:1313/images/2022_WDB_QL-writeup/image-20220828140533175.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;找到两个锚点字符串，一个是&lt;code&gt;&amp;lt;&amp;lt;Input your flag:&lt;/code&gt;，另一个是&lt;code&gt;Wrong.&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;使用x64dbg进行手动脱壳，进行入口点的测试找到一个关键跳转地址0x1400276CB&lt;/p&gt;&#xA;&lt;p&gt;&lt;img alt=&#34;image-20220828140317972&#34; src=&#34;//localhost:1313/images/2022_WDB_QL-writeup/image-20220828140317972.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;这是一个长跳转指令，运行到这个指令的时候程序已经完成解密。可以对程序的内存引用进行查看：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img alt=&#34;image-20220828140739058&#34; src=&#34;//localhost:1313/images/2022_WDB_QL-writeup/image-20220828140739058.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;发现程序的内存引用中已经出现了锚点字符串，说明此时的程序已经完成了解密。然后跟进到锚点字符串所在的函数位置：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img alt=&#34;image-20220828140905779&#34; src=&#34;//localhost:1313/images/2022_WDB_QL-writeup/image-20220828140905779.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;这个位置应该是主函数空间，在这个主函数空间中对函数开头位置下断点，然后让程序运行到断点位置&lt;/p&gt;&#xA;&lt;p&gt;&lt;img alt=&#34;image-20220828141834266&#34; src=&#34;//localhost:1313/images/2022_WDB_QL-writeup/image-20220828141834266.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;然后使用x64dbg的Scylla插件进行dump内存：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img alt=&#34;image-20220828142149592&#34; src=&#34;//localhost:1313/images/2022_WDB_QL-writeup/image-20220828142149592.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;从当前位置进行dump即可，得到一个dump的程序。&lt;/p&gt;&#xA;&lt;p&gt;现在完成手动脱壳，进入到下一步，进行ida pro的静态分析：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img alt=&#34;image-20220828142350437&#34; src=&#34;//localhost:1313/images/2022_WDB_QL-writeup/image-20220828142350437.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;使用F5插件来查看程序反编译的代码进行分析&lt;/p&gt;&#xA;&lt;p&gt;&lt;img alt=&#34;image-20220828142457029&#34; src=&#34;//localhost:1313/images/2022_WDB_QL-writeup/image-20220828142457029.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;输入的数据存储到v4变量中，对v4变量处理的函数有两个，对这两个函数依次进行审计。&lt;/p&gt;&#xA;&lt;p&gt;首先分析第一个函数，这个函数要一直跟进跟进到和参数有关的位置&lt;/p&gt;&#xA;&lt;p&gt;&lt;img alt=&#34;image-20220828142835318&#34; src=&#34;//localhost:1313/images/2022_WDB_QL-writeup/image-20220828142835318.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;第一个函数中，存在一个判断和一个异或运算。&lt;/p&gt;&#xA;&lt;p&gt;判断是对输入的数据进行了处理，猜测应该是进行长度判断，判断长度是否是20位。&lt;/p&gt;&#xA;&lt;p&gt;异或操作是单纯对于输入数据的运行对于程序运行流程没有太多影响&lt;/p&gt;&#xA;&lt;p&gt;分析第二个函数，和第一个函数的跟进方法类似&lt;/p&gt;&#xA;&lt;p&gt;&lt;img alt=&#34;image-20220828144648807&#34; src=&#34;//localhost:1313/images/2022_WDB_QL-writeup/image-20220828144648807.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;第二个函数同样也有一个异或操作和一个特殊的函数，跟进这个函数查看：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img alt=&#34;image-20220828145157336&#34; src=&#34;//localhost:1313/images/2022_WDB_QL-writeup/image-20220828145157336.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;发现判断的位置有密文，跟进密文查看：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img alt=&#34;image-20220828145310441&#34; src=&#34;//localhost:1313/images/2022_WDB_QL-writeup/image-20220828145310441.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;使用&lt;code&gt;shift&lt;/code&gt;+ &lt;code&gt;E&lt;/code&gt;将数据提取出来，可以得到：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;unsigned&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;char&lt;/span&gt; ida_chars[] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0x4B&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x48&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x79&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x13&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x45&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0x30&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x5C&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x49&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x5A&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x79&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0x13&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x70&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x6D&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x78&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x13&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0x6F&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x48&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x5D&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x64&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x64&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;};&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;显然是以4字节，小端序存储的&lt;/p&gt;</description>
    </item>
    <item>
      <title>攻防世界进阶区日常训练001</title>
      <link>//localhost:1313/posts/xctf-reverse-advanced_daliy_001/</link>
      <pubDate>Sat, 23 Apr 2022 15:14:39 +0800</pubDate>
      <guid>//localhost:1313/posts/xctf-reverse-advanced_daliy_001/</guid>
      <description>&lt;h1 id=&#34;攻防世界-re-进阶区-日常练习-001&#34;&gt;攻防世界 RE 进阶区 日常练习 001&lt;/h1&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;ISCC比赛临近，CTF比赛题目也要开始继续训练起来&#xA;前段时间，由于准备升学相关的事宜，没有进行比赛的训练&#xA;手感相对而言，有些生疏&#xA;简单从攻防世界平台找几道逆向的题目进行简单的练习下&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;这几道题目主要都是使用IDA pro的远程调试功能，使用虚拟机搭配IDA进行远程调试&lt;/p&gt;&#xA;&lt;h2 id=&#34;re2-cpp-is-awesome&#34;&gt;re2-cpp-is-awesome&lt;/h2&gt;&#xA;&lt;p&gt;先查看一些文件的简单信息&#xA;&lt;img src=&#34;//localhost:1313/images/XCTF-REVERSE-DAILY/Pasted_image_20220420210740.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;ELF文件，GCC编译，无壳&lt;/p&gt;&#xA;&lt;p&gt;IDA看下：&#xA;C++编译的程序文件，看的心烦意乱基本上找不到关键的函数，和关键的位置。&lt;/p&gt;&#xA;&lt;p&gt;尝试使用下IDA pro的动调寻找一下f关键位置(IDA pro的动态消失配置可以自己网络检索，有很多相关的内容)&lt;/p&gt;&#xA;&lt;p&gt;先断在第一个跳转位置，即&lt;code&gt;jz short loc_400BD7&lt;/code&gt; 位置上&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/XCTF-REVERSE-DAILY/Pasted_image_20220420213518.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;进行几次调试，发现都直接退出，没有进行跳转&#xA;也就是 &lt;code&gt;cmp [rbp+var_64], 2&lt;/code&gt; 的比较值没有改变ZF标志位&#xA;对上面汇编代码进行审计：&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-x86asm&#34; data-lang=&#34;x86asm&#34;&gt;main proc near                       &#xA;var_70= qword ptr -70h&#xA;var_64= dword ptr -64h&#xA;var_60= qword ptr -60h&#xA;var_50= byte ptr -50h&#xA;var_21= byte ptr -21h&#xA;var_20= qword ptr -20h&#xA;var_14= dword ptr -14h&#xA;&#xA;push    rbp&#xA;mov     rbp, rsp&#xA;push    rbx&#xA;sub     rsp, 68h&#xA;mov     [rbp+var_64], edi&#xA;mov     [rbp+var_70], rsi&#xA;cmp     [rbp+var_64], 2&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;指令&lt;code&gt;cmp [rbp+var_64], 2&lt;/code&gt;是一个条件判断，根据这个语句寻找下变量&lt;/p&gt;</description>
    </item>
    <item>
      <title>Link</title>
      <link>//localhost:1313/link/</link>
      <pubDate>Sat, 29 Jan 2022 16:47:31 +0800</pubDate>
      <guid>//localhost:1313/link/</guid>
      <description>&lt;h1 id=&#34;友情连接&#34;&gt;友情连接&lt;/h1&gt;&#xA;&lt;p&gt;经常会用到的一些连接和一些可爱的小伙伴们，嘤嘤嘤~&lt;/p&gt;&#xA;&lt;h2 id=&#34;小伙伴们&#34;&gt;小伙伴们&lt;/h2&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://shhc.tech/&#34;&gt;生化环材 (shhc.tech)&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://violet-233.github.io/&#34;&gt;violet-233の博客&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://wdraemv.github.io/&#34;&gt;风不及你甜 - 迷迷糊糊才是真 (wdraemv.github.io)&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://sp4zcmd.github.io/&#34;&gt;sp4z&amp;rsquo;s Blog (sp4zcmd.github.io)&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://almondcloud.github.io/&#34;&gt;misc大佬&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h2 id=&#34;学习网站&#34;&gt;学习网站&lt;/h2&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.bilibili.com/&#34;&gt;哔哩哔哩 (゜-゜)つロ 干杯~-bilibili&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/&#34;&gt;GitHub&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/blockquote&gt;</description>
    </item>
    <item>
      <title>编码-编写你的快乐</title>
      <link>//localhost:1313/posts/encode/</link>
      <pubDate>Sat, 29 Jan 2022 11:36:02 +0800</pubDate>
      <guid>//localhost:1313/posts/encode/</guid>
      <description>&lt;h1 id=&#34;编码&#34;&gt;编码&lt;/h1&gt;&#xA;&lt;p&gt;编码是将信息从一种形式转换位另一种形式的过程。它用预先规定的方法将文字、数字或其他对象编成数码，或者将信息、数据转换成规定的电脉冲信号。编码被广泛应用于电子计算机、电视、遥控和通信等方面。解码是编码的逆过程。&lt;/p&gt;&#xA;&lt;p&gt;编码和解码是个相当广泛的话题，涉及计算机对信息处理的根本方式。编码的目的不是为了让别人看到后解不出来，而是代表信息的另一种表达方式。将原始信息转化为编码信息进行传输，可以解决一些特殊字符、不可见字符的传输问题。接收者将编码信息再转化成原始信息，转化的过程称之为解码。&lt;/p&gt;&#xA;&lt;h2 id=&#34;历史&#34;&gt;历史&lt;/h2&gt;&#xA;&lt;p&gt;编码的演变源于人对计算机需求的改变。&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;编码的萌芽——控制码&lt;/li&gt;&#xA;&lt;li&gt;ASCII码的出现&lt;/li&gt;&#xA;&lt;li&gt;ASCII码的发展——扩展字符集&lt;/li&gt;&#xA;&lt;li&gt;编码的中国化——GBK家族&lt;/li&gt;&#xA;&lt;li&gt;编码的国家化——百家争鸣的编码时代&lt;/li&gt;&#xA;&lt;li&gt;编码的国际化——Unicode编码&lt;/li&gt;&#xA;&lt;li&gt;编码的互联网化——UTF家族&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;从本质上讲，编码/解码是在做将一种形式的数据翻译为另一种形式的数据的工作。&lt;/p&gt;&#xA;&lt;h2 id=&#34;编码类型&#34;&gt;编码类型&lt;/h2&gt;&#xA;&lt;h3 id=&#34;ascii码&#34;&gt;ASCII码&lt;/h3&gt;&#xA;&lt;p&gt;ASCII码是最常见的编码类型。ASCII ((American Standard Code for Information Interchange): 美国信息交换标准代码）是基于拉丁字母的一套电脑编码系统，主要用于显示现代英语和其他西欧语言。它是最通用的信息交换标准，并等同于国际标准ISO/IEC 646。ASCII第一次以规范标准的类型发表是在1967年，最后一次更新则是在1986年，到目前为止共定义了128个字符。&lt;/p&gt;&#xA;&lt;p&gt;ASCII码现在也经常出现在计算编码运输过程中，进行编码，而且在很多编程语言中也经常有用到。&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;Bin(二进制)&lt;/th&gt;&#xA;          &lt;th&gt;Oct(八进制)&lt;/th&gt;&#xA;          &lt;th&gt;Dec(十进制)&lt;/th&gt;&#xA;          &lt;th&gt;Hex(十六进制)&lt;/th&gt;&#xA;          &lt;th&gt;缩写/字符&lt;/th&gt;&#xA;          &lt;th&gt;解释&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0000 0000&lt;/td&gt;&#xA;          &lt;td&gt;00&lt;/td&gt;&#xA;          &lt;td&gt;0&lt;/td&gt;&#xA;          &lt;td&gt;0x00&lt;/td&gt;&#xA;          &lt;td&gt;NUL(null)&lt;/td&gt;&#xA;          &lt;td&gt;空字符&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0000 0001&lt;/td&gt;&#xA;          &lt;td&gt;01&lt;/td&gt;&#xA;          &lt;td&gt;1&lt;/td&gt;&#xA;          &lt;td&gt;0x01&lt;/td&gt;&#xA;          &lt;td&gt;SOH(start of headline)&lt;/td&gt;&#xA;          &lt;td&gt;标题开始&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0000 0010&lt;/td&gt;&#xA;          &lt;td&gt;02&lt;/td&gt;&#xA;          &lt;td&gt;2&lt;/td&gt;&#xA;          &lt;td&gt;0x02&lt;/td&gt;&#xA;          &lt;td&gt;STX (start of text)&lt;/td&gt;&#xA;          &lt;td&gt;正文开始&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0000 0011&lt;/td&gt;&#xA;          &lt;td&gt;03&lt;/td&gt;&#xA;          &lt;td&gt;3&lt;/td&gt;&#xA;          &lt;td&gt;0x03&lt;/td&gt;&#xA;          &lt;td&gt;ETX (end of text)&lt;/td&gt;&#xA;          &lt;td&gt;正文结束&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0000 0100&lt;/td&gt;&#xA;          &lt;td&gt;04&lt;/td&gt;&#xA;          &lt;td&gt;4&lt;/td&gt;&#xA;          &lt;td&gt;0x04&lt;/td&gt;&#xA;          &lt;td&gt;EOT (end of transmission)&lt;/td&gt;&#xA;          &lt;td&gt;传输结束&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0000 0101&lt;/td&gt;&#xA;          &lt;td&gt;05&lt;/td&gt;&#xA;          &lt;td&gt;5&lt;/td&gt;&#xA;          &lt;td&gt;0x05&lt;/td&gt;&#xA;          &lt;td&gt;ENQ (enquiry)&lt;/td&gt;&#xA;          &lt;td&gt;请求&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0000 0110&lt;/td&gt;&#xA;          &lt;td&gt;06&lt;/td&gt;&#xA;          &lt;td&gt;6&lt;/td&gt;&#xA;          &lt;td&gt;0x06&lt;/td&gt;&#xA;          &lt;td&gt;ACK (acknowledge)&lt;/td&gt;&#xA;          &lt;td&gt;收到通知&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0000 0111&lt;/td&gt;&#xA;          &lt;td&gt;07&lt;/td&gt;&#xA;          &lt;td&gt;7&lt;/td&gt;&#xA;          &lt;td&gt;0x07&lt;/td&gt;&#xA;          &lt;td&gt;BEL (bell)&lt;/td&gt;&#xA;          &lt;td&gt;响铃&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0000 1000&lt;/td&gt;&#xA;          &lt;td&gt;010&lt;/td&gt;&#xA;          &lt;td&gt;8&lt;/td&gt;&#xA;          &lt;td&gt;0x08&lt;/td&gt;&#xA;          &lt;td&gt;BS (backspace)&lt;/td&gt;&#xA;          &lt;td&gt;退格&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0000 1001&lt;/td&gt;&#xA;          &lt;td&gt;011&lt;/td&gt;&#xA;          &lt;td&gt;9&lt;/td&gt;&#xA;          &lt;td&gt;0x09&lt;/td&gt;&#xA;          &lt;td&gt;HT (horizontal tab)&lt;/td&gt;&#xA;          &lt;td&gt;水平制表符&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0000 1010&lt;/td&gt;&#xA;          &lt;td&gt;012&lt;/td&gt;&#xA;          &lt;td&gt;10&lt;/td&gt;&#xA;          &lt;td&gt;0x0A&lt;/td&gt;&#xA;          &lt;td&gt;LF (NL line feed, new line)&lt;/td&gt;&#xA;          &lt;td&gt;换行键&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0000 1011&lt;/td&gt;&#xA;          &lt;td&gt;013&lt;/td&gt;&#xA;          &lt;td&gt;11&lt;/td&gt;&#xA;          &lt;td&gt;0x0B&lt;/td&gt;&#xA;          &lt;td&gt;VT (vertical tab)&lt;/td&gt;&#xA;          &lt;td&gt;垂直制表符&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0000 1100&lt;/td&gt;&#xA;          &lt;td&gt;014&lt;/td&gt;&#xA;          &lt;td&gt;12&lt;/td&gt;&#xA;          &lt;td&gt;0x0C&lt;/td&gt;&#xA;          &lt;td&gt;FF (NP form feed, new page)&lt;/td&gt;&#xA;          &lt;td&gt;换页键&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0000 1101&lt;/td&gt;&#xA;          &lt;td&gt;015&lt;/td&gt;&#xA;          &lt;td&gt;13&lt;/td&gt;&#xA;          &lt;td&gt;0x0D&lt;/td&gt;&#xA;          &lt;td&gt;CR (carriage return)&lt;/td&gt;&#xA;          &lt;td&gt;回车键&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0000 1110&lt;/td&gt;&#xA;          &lt;td&gt;016&lt;/td&gt;&#xA;          &lt;td&gt;14&lt;/td&gt;&#xA;          &lt;td&gt;0x0E&lt;/td&gt;&#xA;          &lt;td&gt;SO (shift out)&lt;/td&gt;&#xA;          &lt;td&gt;不用切换&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0000 1111&lt;/td&gt;&#xA;          &lt;td&gt;017&lt;/td&gt;&#xA;          &lt;td&gt;15&lt;/td&gt;&#xA;          &lt;td&gt;0x0F&lt;/td&gt;&#xA;          &lt;td&gt;SI (shift in)&lt;/td&gt;&#xA;          &lt;td&gt;启用切换&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0001 0000&lt;/td&gt;&#xA;          &lt;td&gt;020&lt;/td&gt;&#xA;          &lt;td&gt;16&lt;/td&gt;&#xA;          &lt;td&gt;0x10&lt;/td&gt;&#xA;          &lt;td&gt;DLE (data link escape)&lt;/td&gt;&#xA;          &lt;td&gt;数据链路转义&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0001 0001&lt;/td&gt;&#xA;          &lt;td&gt;021&lt;/td&gt;&#xA;          &lt;td&gt;17&lt;/td&gt;&#xA;          &lt;td&gt;0x11&lt;/td&gt;&#xA;          &lt;td&gt;DC1 (device control 1)&lt;/td&gt;&#xA;          &lt;td&gt;设备控制1&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0001 0010&lt;/td&gt;&#xA;          &lt;td&gt;022&lt;/td&gt;&#xA;          &lt;td&gt;18&lt;/td&gt;&#xA;          &lt;td&gt;0x12&lt;/td&gt;&#xA;          &lt;td&gt;DC2 (device control 2)&lt;/td&gt;&#xA;          &lt;td&gt;设备控制2&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0001 0011&lt;/td&gt;&#xA;          &lt;td&gt;023&lt;/td&gt;&#xA;          &lt;td&gt;19&lt;/td&gt;&#xA;          &lt;td&gt;0x13&lt;/td&gt;&#xA;          &lt;td&gt;DC3 (device control 3)&lt;/td&gt;&#xA;          &lt;td&gt;设备控制3&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0001 0100&lt;/td&gt;&#xA;          &lt;td&gt;024&lt;/td&gt;&#xA;          &lt;td&gt;20&lt;/td&gt;&#xA;          &lt;td&gt;0x14&lt;/td&gt;&#xA;          &lt;td&gt;DC4 (device control 4)&lt;/td&gt;&#xA;          &lt;td&gt;设备控制4&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0001 0101&lt;/td&gt;&#xA;          &lt;td&gt;025&lt;/td&gt;&#xA;          &lt;td&gt;21&lt;/td&gt;&#xA;          &lt;td&gt;0x15&lt;/td&gt;&#xA;          &lt;td&gt;NAK (negative acknowledge)&lt;/td&gt;&#xA;          &lt;td&gt;拒绝接收&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0001 0110&lt;/td&gt;&#xA;          &lt;td&gt;026&lt;/td&gt;&#xA;          &lt;td&gt;22&lt;/td&gt;&#xA;          &lt;td&gt;0x16&lt;/td&gt;&#xA;          &lt;td&gt;SYN (synchronous idle)&lt;/td&gt;&#xA;          &lt;td&gt;同步空闲&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0001 0111&lt;/td&gt;&#xA;          &lt;td&gt;027&lt;/td&gt;&#xA;          &lt;td&gt;23&lt;/td&gt;&#xA;          &lt;td&gt;0x17&lt;/td&gt;&#xA;          &lt;td&gt;ETB (end of trans. block)&lt;/td&gt;&#xA;          &lt;td&gt;结束传输块&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0001 1000&lt;/td&gt;&#xA;          &lt;td&gt;030&lt;/td&gt;&#xA;          &lt;td&gt;24&lt;/td&gt;&#xA;          &lt;td&gt;0x18&lt;/td&gt;&#xA;          &lt;td&gt;CAN (cancel)&lt;/td&gt;&#xA;          &lt;td&gt;取消&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0001 1001&lt;/td&gt;&#xA;          &lt;td&gt;031&lt;/td&gt;&#xA;          &lt;td&gt;25&lt;/td&gt;&#xA;          &lt;td&gt;0x19&lt;/td&gt;&#xA;          &lt;td&gt;EM (end of medium)&lt;/td&gt;&#xA;          &lt;td&gt;媒介结束&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0001 1010&lt;/td&gt;&#xA;          &lt;td&gt;032&lt;/td&gt;&#xA;          &lt;td&gt;26&lt;/td&gt;&#xA;          &lt;td&gt;0x1A&lt;/td&gt;&#xA;          &lt;td&gt;SUB (substitute)&lt;/td&gt;&#xA;          &lt;td&gt;代替&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0001 1011&lt;/td&gt;&#xA;          &lt;td&gt;033&lt;/td&gt;&#xA;          &lt;td&gt;27&lt;/td&gt;&#xA;          &lt;td&gt;0x1B&lt;/td&gt;&#xA;          &lt;td&gt;ESC (escape)&lt;/td&gt;&#xA;          &lt;td&gt;换码(溢出)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0001 1100&lt;/td&gt;&#xA;          &lt;td&gt;034&lt;/td&gt;&#xA;          &lt;td&gt;28&lt;/td&gt;&#xA;          &lt;td&gt;0x1C&lt;/td&gt;&#xA;          &lt;td&gt;FS (file separator)&lt;/td&gt;&#xA;          &lt;td&gt;文件分隔符&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0001 1101&lt;/td&gt;&#xA;          &lt;td&gt;035&lt;/td&gt;&#xA;          &lt;td&gt;29&lt;/td&gt;&#xA;          &lt;td&gt;0x1D&lt;/td&gt;&#xA;          &lt;td&gt;GS (group separator)&lt;/td&gt;&#xA;          &lt;td&gt;分组符&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0001 1110&lt;/td&gt;&#xA;          &lt;td&gt;036&lt;/td&gt;&#xA;          &lt;td&gt;30&lt;/td&gt;&#xA;          &lt;td&gt;0x1E&lt;/td&gt;&#xA;          &lt;td&gt;RS (record separator)&lt;/td&gt;&#xA;          &lt;td&gt;记录分隔符&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0001 1111&lt;/td&gt;&#xA;          &lt;td&gt;037&lt;/td&gt;&#xA;          &lt;td&gt;31&lt;/td&gt;&#xA;          &lt;td&gt;0x1F&lt;/td&gt;&#xA;          &lt;td&gt;US (unit separator)&lt;/td&gt;&#xA;          &lt;td&gt;单元分隔符&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0010 0000&lt;/td&gt;&#xA;          &lt;td&gt;040&lt;/td&gt;&#xA;          &lt;td&gt;32&lt;/td&gt;&#xA;          &lt;td&gt;0x20&lt;/td&gt;&#xA;          &lt;td&gt;(space)&lt;/td&gt;&#xA;          &lt;td&gt;空格&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0010 0001&lt;/td&gt;&#xA;          &lt;td&gt;041&lt;/td&gt;&#xA;          &lt;td&gt;33&lt;/td&gt;&#xA;          &lt;td&gt;0x21&lt;/td&gt;&#xA;          &lt;td&gt;!&lt;/td&gt;&#xA;          &lt;td&gt;叹号&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0010 0010&lt;/td&gt;&#xA;          &lt;td&gt;042&lt;/td&gt;&#xA;          &lt;td&gt;34&lt;/td&gt;&#xA;          &lt;td&gt;0x22&lt;/td&gt;&#xA;          &lt;td&gt;&amp;quot;&lt;/td&gt;&#xA;          &lt;td&gt;双引号&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0010 0011&lt;/td&gt;&#xA;          &lt;td&gt;043&lt;/td&gt;&#xA;          &lt;td&gt;35&lt;/td&gt;&#xA;          &lt;td&gt;0x23&lt;/td&gt;&#xA;          &lt;td&gt;#&lt;/td&gt;&#xA;          &lt;td&gt;井号&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0010 0100&lt;/td&gt;&#xA;          &lt;td&gt;044&lt;/td&gt;&#xA;          &lt;td&gt;36&lt;/td&gt;&#xA;          &lt;td&gt;0x24&lt;/td&gt;&#xA;          &lt;td&gt;$&lt;/td&gt;&#xA;          &lt;td&gt;美元符&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0010 0101&lt;/td&gt;&#xA;          &lt;td&gt;045&lt;/td&gt;&#xA;          &lt;td&gt;37&lt;/td&gt;&#xA;          &lt;td&gt;0x25&lt;/td&gt;&#xA;          &lt;td&gt;%&lt;/td&gt;&#xA;          &lt;td&gt;百分号&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0010 0110&lt;/td&gt;&#xA;          &lt;td&gt;046&lt;/td&gt;&#xA;          &lt;td&gt;38&lt;/td&gt;&#xA;          &lt;td&gt;0x26&lt;/td&gt;&#xA;          &lt;td&gt;&amp;amp;&lt;/td&gt;&#xA;          &lt;td&gt;和号&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0010 0111&lt;/td&gt;&#xA;          &lt;td&gt;047&lt;/td&gt;&#xA;          &lt;td&gt;39&lt;/td&gt;&#xA;          &lt;td&gt;0x27&lt;/td&gt;&#xA;          &lt;td&gt;&#39;&lt;/td&gt;&#xA;          &lt;td&gt;闭单引号&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0010 1000&lt;/td&gt;&#xA;          &lt;td&gt;050&lt;/td&gt;&#xA;          &lt;td&gt;40&lt;/td&gt;&#xA;          &lt;td&gt;0x28&lt;/td&gt;&#xA;          &lt;td&gt;(&lt;/td&gt;&#xA;          &lt;td&gt;开括号&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0010 1001&lt;/td&gt;&#xA;          &lt;td&gt;051&lt;/td&gt;&#xA;          &lt;td&gt;41&lt;/td&gt;&#xA;          &lt;td&gt;0x29&lt;/td&gt;&#xA;          &lt;td&gt;)&lt;/td&gt;&#xA;          &lt;td&gt;闭括号&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0010 1010&lt;/td&gt;&#xA;          &lt;td&gt;052&lt;/td&gt;&#xA;          &lt;td&gt;42&lt;/td&gt;&#xA;          &lt;td&gt;0x2A&lt;/td&gt;&#xA;          &lt;td&gt;*&lt;/td&gt;&#xA;          &lt;td&gt;星号&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0010 1011&lt;/td&gt;&#xA;          &lt;td&gt;053&lt;/td&gt;&#xA;          &lt;td&gt;43&lt;/td&gt;&#xA;          &lt;td&gt;0x2B&lt;/td&gt;&#xA;          &lt;td&gt;+&lt;/td&gt;&#xA;          &lt;td&gt;加号&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0010 1100&lt;/td&gt;&#xA;          &lt;td&gt;054&lt;/td&gt;&#xA;          &lt;td&gt;44&lt;/td&gt;&#xA;          &lt;td&gt;0x2C&lt;/td&gt;&#xA;          &lt;td&gt;,&lt;/td&gt;&#xA;          &lt;td&gt;逗号&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0010 1101&lt;/td&gt;&#xA;          &lt;td&gt;055&lt;/td&gt;&#xA;          &lt;td&gt;45&lt;/td&gt;&#xA;          &lt;td&gt;0x2D&lt;/td&gt;&#xA;          &lt;td&gt;-&lt;/td&gt;&#xA;          &lt;td&gt;减号/破折号&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0010 1110&lt;/td&gt;&#xA;          &lt;td&gt;056&lt;/td&gt;&#xA;          &lt;td&gt;46&lt;/td&gt;&#xA;          &lt;td&gt;0x2E&lt;/td&gt;&#xA;          &lt;td&gt;.&lt;/td&gt;&#xA;          &lt;td&gt;句号&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0010 1111&lt;/td&gt;&#xA;          &lt;td&gt;057&lt;/td&gt;&#xA;          &lt;td&gt;47&lt;/td&gt;&#xA;          &lt;td&gt;0x2F&lt;/td&gt;&#xA;          &lt;td&gt;/&lt;/td&gt;&#xA;          &lt;td&gt;斜杠&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0011 0000&lt;/td&gt;&#xA;          &lt;td&gt;060&lt;/td&gt;&#xA;          &lt;td&gt;48&lt;/td&gt;&#xA;          &lt;td&gt;0x30&lt;/td&gt;&#xA;          &lt;td&gt;0&lt;/td&gt;&#xA;          &lt;td&gt;字符0&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0011 0001&lt;/td&gt;&#xA;          &lt;td&gt;061&lt;/td&gt;&#xA;          &lt;td&gt;49&lt;/td&gt;&#xA;          &lt;td&gt;0x31&lt;/td&gt;&#xA;          &lt;td&gt;1&lt;/td&gt;&#xA;          &lt;td&gt;字符1&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0011 0010&lt;/td&gt;&#xA;          &lt;td&gt;062&lt;/td&gt;&#xA;          &lt;td&gt;50&lt;/td&gt;&#xA;          &lt;td&gt;0x32&lt;/td&gt;&#xA;          &lt;td&gt;2&lt;/td&gt;&#xA;          &lt;td&gt;字符2&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0011 0011&lt;/td&gt;&#xA;          &lt;td&gt;063&lt;/td&gt;&#xA;          &lt;td&gt;51&lt;/td&gt;&#xA;          &lt;td&gt;0x33&lt;/td&gt;&#xA;          &lt;td&gt;3&lt;/td&gt;&#xA;          &lt;td&gt;字符3&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0011 0100&lt;/td&gt;&#xA;          &lt;td&gt;064&lt;/td&gt;&#xA;          &lt;td&gt;52&lt;/td&gt;&#xA;          &lt;td&gt;0x34&lt;/td&gt;&#xA;          &lt;td&gt;4&lt;/td&gt;&#xA;          &lt;td&gt;字符4&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0011 0101&lt;/td&gt;&#xA;          &lt;td&gt;065&lt;/td&gt;&#xA;          &lt;td&gt;53&lt;/td&gt;&#xA;          &lt;td&gt;0x35&lt;/td&gt;&#xA;          &lt;td&gt;5&lt;/td&gt;&#xA;          &lt;td&gt;字符5&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0011 0110&lt;/td&gt;&#xA;          &lt;td&gt;066&lt;/td&gt;&#xA;          &lt;td&gt;54&lt;/td&gt;&#xA;          &lt;td&gt;0x36&lt;/td&gt;&#xA;          &lt;td&gt;6&lt;/td&gt;&#xA;          &lt;td&gt;字符6&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0011 0111&lt;/td&gt;&#xA;          &lt;td&gt;067&lt;/td&gt;&#xA;          &lt;td&gt;55&lt;/td&gt;&#xA;          &lt;td&gt;0x37&lt;/td&gt;&#xA;          &lt;td&gt;7&lt;/td&gt;&#xA;          &lt;td&gt;字符7&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0011 1000&lt;/td&gt;&#xA;          &lt;td&gt;070&lt;/td&gt;&#xA;          &lt;td&gt;56&lt;/td&gt;&#xA;          &lt;td&gt;0x38&lt;/td&gt;&#xA;          &lt;td&gt;8&lt;/td&gt;&#xA;          &lt;td&gt;字符8&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0011 1001&lt;/td&gt;&#xA;          &lt;td&gt;071&lt;/td&gt;&#xA;          &lt;td&gt;57&lt;/td&gt;&#xA;          &lt;td&gt;0x39&lt;/td&gt;&#xA;          &lt;td&gt;9&lt;/td&gt;&#xA;          &lt;td&gt;字符9&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0011 1010&lt;/td&gt;&#xA;          &lt;td&gt;072&lt;/td&gt;&#xA;          &lt;td&gt;58&lt;/td&gt;&#xA;          &lt;td&gt;0x3A&lt;/td&gt;&#xA;          &lt;td&gt;:&lt;/td&gt;&#xA;          &lt;td&gt;冒号&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0011 1011&lt;/td&gt;&#xA;          &lt;td&gt;073&lt;/td&gt;&#xA;          &lt;td&gt;59&lt;/td&gt;&#xA;          &lt;td&gt;0x3B&lt;/td&gt;&#xA;          &lt;td&gt;;&lt;/td&gt;&#xA;          &lt;td&gt;分号&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0011 1100&lt;/td&gt;&#xA;          &lt;td&gt;074&lt;/td&gt;&#xA;          &lt;td&gt;60&lt;/td&gt;&#xA;          &lt;td&gt;0x3C&lt;/td&gt;&#xA;          &lt;td&gt;&amp;lt;&lt;/td&gt;&#xA;          &lt;td&gt;小于&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0011 1101&lt;/td&gt;&#xA;          &lt;td&gt;075&lt;/td&gt;&#xA;          &lt;td&gt;61&lt;/td&gt;&#xA;          &lt;td&gt;0x3D&lt;/td&gt;&#xA;          &lt;td&gt;=&lt;/td&gt;&#xA;          &lt;td&gt;等号&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0011 1110&lt;/td&gt;&#xA;          &lt;td&gt;076&lt;/td&gt;&#xA;          &lt;td&gt;62&lt;/td&gt;&#xA;          &lt;td&gt;0x3E&lt;/td&gt;&#xA;          &lt;td&gt;&amp;gt;&lt;/td&gt;&#xA;          &lt;td&gt;大于&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0011 1111&lt;/td&gt;&#xA;          &lt;td&gt;077&lt;/td&gt;&#xA;          &lt;td&gt;63&lt;/td&gt;&#xA;          &lt;td&gt;0x3F&lt;/td&gt;&#xA;          &lt;td&gt;?&lt;/td&gt;&#xA;          &lt;td&gt;问号&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0100 0000&lt;/td&gt;&#xA;          &lt;td&gt;0100&lt;/td&gt;&#xA;          &lt;td&gt;64&lt;/td&gt;&#xA;          &lt;td&gt;0x40&lt;/td&gt;&#xA;          &lt;td&gt;@&lt;/td&gt;&#xA;          &lt;td&gt;电子邮件符号&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0100 0001&lt;/td&gt;&#xA;          &lt;td&gt;0101&lt;/td&gt;&#xA;          &lt;td&gt;65&lt;/td&gt;&#xA;          &lt;td&gt;0x41&lt;/td&gt;&#xA;          &lt;td&gt;A&lt;/td&gt;&#xA;          &lt;td&gt;大写字母A&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0100 0010&lt;/td&gt;&#xA;          &lt;td&gt;0102&lt;/td&gt;&#xA;          &lt;td&gt;66&lt;/td&gt;&#xA;          &lt;td&gt;0x42&lt;/td&gt;&#xA;          &lt;td&gt;B&lt;/td&gt;&#xA;          &lt;td&gt;大写字母B&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0100 0011&lt;/td&gt;&#xA;          &lt;td&gt;0103&lt;/td&gt;&#xA;          &lt;td&gt;67&lt;/td&gt;&#xA;          &lt;td&gt;0x43&lt;/td&gt;&#xA;          &lt;td&gt;C&lt;/td&gt;&#xA;          &lt;td&gt;大写字母C&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0100 0100&lt;/td&gt;&#xA;          &lt;td&gt;0104&lt;/td&gt;&#xA;          &lt;td&gt;68&lt;/td&gt;&#xA;          &lt;td&gt;0x44&lt;/td&gt;&#xA;          &lt;td&gt;D&lt;/td&gt;&#xA;          &lt;td&gt;大写字母D&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0100 0101&lt;/td&gt;&#xA;          &lt;td&gt;0105&lt;/td&gt;&#xA;          &lt;td&gt;69&lt;/td&gt;&#xA;          &lt;td&gt;0x45&lt;/td&gt;&#xA;          &lt;td&gt;E&lt;/td&gt;&#xA;          &lt;td&gt;大写字母E&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0100 0110&lt;/td&gt;&#xA;          &lt;td&gt;0106&lt;/td&gt;&#xA;          &lt;td&gt;70&lt;/td&gt;&#xA;          &lt;td&gt;0x46&lt;/td&gt;&#xA;          &lt;td&gt;F&lt;/td&gt;&#xA;          &lt;td&gt;大写字母F&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0100 0111&lt;/td&gt;&#xA;          &lt;td&gt;0107&lt;/td&gt;&#xA;          &lt;td&gt;71&lt;/td&gt;&#xA;          &lt;td&gt;0x47&lt;/td&gt;&#xA;          &lt;td&gt;G&lt;/td&gt;&#xA;          &lt;td&gt;大写字母G&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0100 1000&lt;/td&gt;&#xA;          &lt;td&gt;0110&lt;/td&gt;&#xA;          &lt;td&gt;72&lt;/td&gt;&#xA;          &lt;td&gt;0x48&lt;/td&gt;&#xA;          &lt;td&gt;H&lt;/td&gt;&#xA;          &lt;td&gt;大写字母H&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0100 1001&lt;/td&gt;&#xA;          &lt;td&gt;0111&lt;/td&gt;&#xA;          &lt;td&gt;73&lt;/td&gt;&#xA;          &lt;td&gt;0x49&lt;/td&gt;&#xA;          &lt;td&gt;I&lt;/td&gt;&#xA;          &lt;td&gt;大写字母I&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;01001010&lt;/td&gt;&#xA;          &lt;td&gt;0112&lt;/td&gt;&#xA;          &lt;td&gt;74&lt;/td&gt;&#xA;          &lt;td&gt;0x4A&lt;/td&gt;&#xA;          &lt;td&gt;J&lt;/td&gt;&#xA;          &lt;td&gt;大写字母J&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0100 1011&lt;/td&gt;&#xA;          &lt;td&gt;0113&lt;/td&gt;&#xA;          &lt;td&gt;75&lt;/td&gt;&#xA;          &lt;td&gt;0x4B&lt;/td&gt;&#xA;          &lt;td&gt;K&lt;/td&gt;&#xA;          &lt;td&gt;大写字母K&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0100 1100&lt;/td&gt;&#xA;          &lt;td&gt;0114&lt;/td&gt;&#xA;          &lt;td&gt;76&lt;/td&gt;&#xA;          &lt;td&gt;0x4C&lt;/td&gt;&#xA;          &lt;td&gt;L&lt;/td&gt;&#xA;          &lt;td&gt;大写字母L&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0100 1101&lt;/td&gt;&#xA;          &lt;td&gt;0115&lt;/td&gt;&#xA;          &lt;td&gt;77&lt;/td&gt;&#xA;          &lt;td&gt;0x4D&lt;/td&gt;&#xA;          &lt;td&gt;M&lt;/td&gt;&#xA;          &lt;td&gt;大写字母M&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0100 1110&lt;/td&gt;&#xA;          &lt;td&gt;0116&lt;/td&gt;&#xA;          &lt;td&gt;78&lt;/td&gt;&#xA;          &lt;td&gt;0x4E&lt;/td&gt;&#xA;          &lt;td&gt;N&lt;/td&gt;&#xA;          &lt;td&gt;大写字母N&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0100 1111&lt;/td&gt;&#xA;          &lt;td&gt;0117&lt;/td&gt;&#xA;          &lt;td&gt;79&lt;/td&gt;&#xA;          &lt;td&gt;0x4F&lt;/td&gt;&#xA;          &lt;td&gt;O&lt;/td&gt;&#xA;          &lt;td&gt;大写字母O&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0101 0000&lt;/td&gt;&#xA;          &lt;td&gt;0120&lt;/td&gt;&#xA;          &lt;td&gt;80&lt;/td&gt;&#xA;          &lt;td&gt;0x50&lt;/td&gt;&#xA;          &lt;td&gt;P&lt;/td&gt;&#xA;          &lt;td&gt;大写字母P&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0101 0001&lt;/td&gt;&#xA;          &lt;td&gt;0121&lt;/td&gt;&#xA;          &lt;td&gt;81&lt;/td&gt;&#xA;          &lt;td&gt;0x51&lt;/td&gt;&#xA;          &lt;td&gt;Q&lt;/td&gt;&#xA;          &lt;td&gt;大写字母Q&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0101 0010&lt;/td&gt;&#xA;          &lt;td&gt;0122&lt;/td&gt;&#xA;          &lt;td&gt;82&lt;/td&gt;&#xA;          &lt;td&gt;0x52&lt;/td&gt;&#xA;          &lt;td&gt;R&lt;/td&gt;&#xA;          &lt;td&gt;大写字母R&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0101 0011&lt;/td&gt;&#xA;          &lt;td&gt;0123&lt;/td&gt;&#xA;          &lt;td&gt;83&lt;/td&gt;&#xA;          &lt;td&gt;0x53&lt;/td&gt;&#xA;          &lt;td&gt;S&lt;/td&gt;&#xA;          &lt;td&gt;大写字母S&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0101 0100&lt;/td&gt;&#xA;          &lt;td&gt;0124&lt;/td&gt;&#xA;          &lt;td&gt;84&lt;/td&gt;&#xA;          &lt;td&gt;0x54&lt;/td&gt;&#xA;          &lt;td&gt;T&lt;/td&gt;&#xA;          &lt;td&gt;大写字母T&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0101 0101&lt;/td&gt;&#xA;          &lt;td&gt;0125&lt;/td&gt;&#xA;          &lt;td&gt;85&lt;/td&gt;&#xA;          &lt;td&gt;0x55&lt;/td&gt;&#xA;          &lt;td&gt;U&lt;/td&gt;&#xA;          &lt;td&gt;大写字母U&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0101 0110&lt;/td&gt;&#xA;          &lt;td&gt;0126&lt;/td&gt;&#xA;          &lt;td&gt;86&lt;/td&gt;&#xA;          &lt;td&gt;0x56&lt;/td&gt;&#xA;          &lt;td&gt;V&lt;/td&gt;&#xA;          &lt;td&gt;大写字母V&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0101 0111&lt;/td&gt;&#xA;          &lt;td&gt;0127&lt;/td&gt;&#xA;          &lt;td&gt;87&lt;/td&gt;&#xA;          &lt;td&gt;0x57&lt;/td&gt;&#xA;          &lt;td&gt;W&lt;/td&gt;&#xA;          &lt;td&gt;大写字母W&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0101 1000&lt;/td&gt;&#xA;          &lt;td&gt;0130&lt;/td&gt;&#xA;          &lt;td&gt;88&lt;/td&gt;&#xA;          &lt;td&gt;0x58&lt;/td&gt;&#xA;          &lt;td&gt;X&lt;/td&gt;&#xA;          &lt;td&gt;大写字母X&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0101 1001&lt;/td&gt;&#xA;          &lt;td&gt;0131&lt;/td&gt;&#xA;          &lt;td&gt;89&lt;/td&gt;&#xA;          &lt;td&gt;0x59&lt;/td&gt;&#xA;          &lt;td&gt;Y&lt;/td&gt;&#xA;          &lt;td&gt;大写字母Y&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0101 1010&lt;/td&gt;&#xA;          &lt;td&gt;0132&lt;/td&gt;&#xA;          &lt;td&gt;90&lt;/td&gt;&#xA;          &lt;td&gt;0x5A&lt;/td&gt;&#xA;          &lt;td&gt;Z&lt;/td&gt;&#xA;          &lt;td&gt;大写字母Z&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0101 1011&lt;/td&gt;&#xA;          &lt;td&gt;0133&lt;/td&gt;&#xA;          &lt;td&gt;91&lt;/td&gt;&#xA;          &lt;td&gt;0x5B&lt;/td&gt;&#xA;          &lt;td&gt;[&lt;/td&gt;&#xA;          &lt;td&gt;开方括号&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0101 1100&lt;/td&gt;&#xA;          &lt;td&gt;0134&lt;/td&gt;&#xA;          &lt;td&gt;92&lt;/td&gt;&#xA;          &lt;td&gt;0x5C&lt;/td&gt;&#xA;          &lt;td&gt;\&lt;/td&gt;&#xA;          &lt;td&gt;反斜杠&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0101 1101&lt;/td&gt;&#xA;          &lt;td&gt;0135&lt;/td&gt;&#xA;          &lt;td&gt;93&lt;/td&gt;&#xA;          &lt;td&gt;0x5D&lt;/td&gt;&#xA;          &lt;td&gt;]&lt;/td&gt;&#xA;          &lt;td&gt;闭方括号&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0101 1110&lt;/td&gt;&#xA;          &lt;td&gt;0136&lt;/td&gt;&#xA;          &lt;td&gt;94&lt;/td&gt;&#xA;          &lt;td&gt;0x5E&lt;/td&gt;&#xA;          &lt;td&gt;^&lt;/td&gt;&#xA;          &lt;td&gt;脱字符&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0101 1111&lt;/td&gt;&#xA;          &lt;td&gt;0137&lt;/td&gt;&#xA;          &lt;td&gt;95&lt;/td&gt;&#xA;          &lt;td&gt;0x5F&lt;/td&gt;&#xA;          &lt;td&gt;_&lt;/td&gt;&#xA;          &lt;td&gt;下划线&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0110 0000&lt;/td&gt;&#xA;          &lt;td&gt;0140&lt;/td&gt;&#xA;          &lt;td&gt;96&lt;/td&gt;&#xA;          &lt;td&gt;0x60&lt;/td&gt;&#xA;          &lt;td&gt;`&lt;/td&gt;&#xA;          &lt;td&gt;开单引号&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0110 0001&lt;/td&gt;&#xA;          &lt;td&gt;0141&lt;/td&gt;&#xA;          &lt;td&gt;97&lt;/td&gt;&#xA;          &lt;td&gt;0x61&lt;/td&gt;&#xA;          &lt;td&gt;a&lt;/td&gt;&#xA;          &lt;td&gt;小写字母a&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0110 0010&lt;/td&gt;&#xA;          &lt;td&gt;0142&lt;/td&gt;&#xA;          &lt;td&gt;98&lt;/td&gt;&#xA;          &lt;td&gt;0x62&lt;/td&gt;&#xA;          &lt;td&gt;b&lt;/td&gt;&#xA;          &lt;td&gt;小写字母b&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0110 0011&lt;/td&gt;&#xA;          &lt;td&gt;0143&lt;/td&gt;&#xA;          &lt;td&gt;99&lt;/td&gt;&#xA;          &lt;td&gt;0x63&lt;/td&gt;&#xA;          &lt;td&gt;c&lt;/td&gt;&#xA;          &lt;td&gt;小写字母c&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0110 0100&lt;/td&gt;&#xA;          &lt;td&gt;0144&lt;/td&gt;&#xA;          &lt;td&gt;100&lt;/td&gt;&#xA;          &lt;td&gt;0x64&lt;/td&gt;&#xA;          &lt;td&gt;d&lt;/td&gt;&#xA;          &lt;td&gt;小写字母d&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0110 0101&lt;/td&gt;&#xA;          &lt;td&gt;0145&lt;/td&gt;&#xA;          &lt;td&gt;101&lt;/td&gt;&#xA;          &lt;td&gt;0x65&lt;/td&gt;&#xA;          &lt;td&gt;e&lt;/td&gt;&#xA;          &lt;td&gt;小写字母e&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0110 0110&lt;/td&gt;&#xA;          &lt;td&gt;0146&lt;/td&gt;&#xA;          &lt;td&gt;102&lt;/td&gt;&#xA;          &lt;td&gt;0x66&lt;/td&gt;&#xA;          &lt;td&gt;f&lt;/td&gt;&#xA;          &lt;td&gt;小写字母f&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0110 0111&lt;/td&gt;&#xA;          &lt;td&gt;0147&lt;/td&gt;&#xA;          &lt;td&gt;103&lt;/td&gt;&#xA;          &lt;td&gt;0x67&lt;/td&gt;&#xA;          &lt;td&gt;g&lt;/td&gt;&#xA;          &lt;td&gt;小写字母g&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0110 1000&lt;/td&gt;&#xA;          &lt;td&gt;0150&lt;/td&gt;&#xA;          &lt;td&gt;104&lt;/td&gt;&#xA;          &lt;td&gt;0x68&lt;/td&gt;&#xA;          &lt;td&gt;h&lt;/td&gt;&#xA;          &lt;td&gt;小写字母h&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0110 1001&lt;/td&gt;&#xA;          &lt;td&gt;0151&lt;/td&gt;&#xA;          &lt;td&gt;105&lt;/td&gt;&#xA;          &lt;td&gt;0x69&lt;/td&gt;&#xA;          &lt;td&gt;i&lt;/td&gt;&#xA;          &lt;td&gt;小写字母i&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0110 1010&lt;/td&gt;&#xA;          &lt;td&gt;0152&lt;/td&gt;&#xA;          &lt;td&gt;106&lt;/td&gt;&#xA;          &lt;td&gt;0x6A&lt;/td&gt;&#xA;          &lt;td&gt;j&lt;/td&gt;&#xA;          &lt;td&gt;小写字母j&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0110 1011&lt;/td&gt;&#xA;          &lt;td&gt;0153&lt;/td&gt;&#xA;          &lt;td&gt;107&lt;/td&gt;&#xA;          &lt;td&gt;0x6B&lt;/td&gt;&#xA;          &lt;td&gt;k&lt;/td&gt;&#xA;          &lt;td&gt;小写字母k&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0110 1100&lt;/td&gt;&#xA;          &lt;td&gt;0154&lt;/td&gt;&#xA;          &lt;td&gt;108&lt;/td&gt;&#xA;          &lt;td&gt;0x6C&lt;/td&gt;&#xA;          &lt;td&gt;l&lt;/td&gt;&#xA;          &lt;td&gt;小写字母l&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0110 1101&lt;/td&gt;&#xA;          &lt;td&gt;0155&lt;/td&gt;&#xA;          &lt;td&gt;109&lt;/td&gt;&#xA;          &lt;td&gt;0x6D&lt;/td&gt;&#xA;          &lt;td&gt;m&lt;/td&gt;&#xA;          &lt;td&gt;小写字母m&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0110 1110&lt;/td&gt;&#xA;          &lt;td&gt;0156&lt;/td&gt;&#xA;          &lt;td&gt;110&lt;/td&gt;&#xA;          &lt;td&gt;0x6E&lt;/td&gt;&#xA;          &lt;td&gt;n&lt;/td&gt;&#xA;          &lt;td&gt;小写字母n&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0110 1111&lt;/td&gt;&#xA;          &lt;td&gt;0157&lt;/td&gt;&#xA;          &lt;td&gt;111&lt;/td&gt;&#xA;          &lt;td&gt;0x6F&lt;/td&gt;&#xA;          &lt;td&gt;o&lt;/td&gt;&#xA;          &lt;td&gt;小写字母o&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0111 0000&lt;/td&gt;&#xA;          &lt;td&gt;0160&lt;/td&gt;&#xA;          &lt;td&gt;112&lt;/td&gt;&#xA;          &lt;td&gt;0x70&lt;/td&gt;&#xA;          &lt;td&gt;p&lt;/td&gt;&#xA;          &lt;td&gt;小写字母p&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0111 0001&lt;/td&gt;&#xA;          &lt;td&gt;0161&lt;/td&gt;&#xA;          &lt;td&gt;113&lt;/td&gt;&#xA;          &lt;td&gt;0x71&lt;/td&gt;&#xA;          &lt;td&gt;q&lt;/td&gt;&#xA;          &lt;td&gt;小写字母q&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0111 0010&lt;/td&gt;&#xA;          &lt;td&gt;0162&lt;/td&gt;&#xA;          &lt;td&gt;114&lt;/td&gt;&#xA;          &lt;td&gt;0x72&lt;/td&gt;&#xA;          &lt;td&gt;r&lt;/td&gt;&#xA;          &lt;td&gt;小写字母r&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0111 0011&lt;/td&gt;&#xA;          &lt;td&gt;0163&lt;/td&gt;&#xA;          &lt;td&gt;115&lt;/td&gt;&#xA;          &lt;td&gt;0x73&lt;/td&gt;&#xA;          &lt;td&gt;s&lt;/td&gt;&#xA;          &lt;td&gt;小写字母s&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0111 0100&lt;/td&gt;&#xA;          &lt;td&gt;0164&lt;/td&gt;&#xA;          &lt;td&gt;116&lt;/td&gt;&#xA;          &lt;td&gt;0x74&lt;/td&gt;&#xA;          &lt;td&gt;t&lt;/td&gt;&#xA;          &lt;td&gt;小写字母t&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0111 0101&lt;/td&gt;&#xA;          &lt;td&gt;0165&lt;/td&gt;&#xA;          &lt;td&gt;117&lt;/td&gt;&#xA;          &lt;td&gt;0x75&lt;/td&gt;&#xA;          &lt;td&gt;u&lt;/td&gt;&#xA;          &lt;td&gt;小写字母u&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0111 0110&lt;/td&gt;&#xA;          &lt;td&gt;0166&lt;/td&gt;&#xA;          &lt;td&gt;118&lt;/td&gt;&#xA;          &lt;td&gt;0x76&lt;/td&gt;&#xA;          &lt;td&gt;v&lt;/td&gt;&#xA;          &lt;td&gt;小写字母v&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0111 0111&lt;/td&gt;&#xA;          &lt;td&gt;0167&lt;/td&gt;&#xA;          &lt;td&gt;119&lt;/td&gt;&#xA;          &lt;td&gt;0x77&lt;/td&gt;&#xA;          &lt;td&gt;w&lt;/td&gt;&#xA;          &lt;td&gt;小写字母w&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0111 1000&lt;/td&gt;&#xA;          &lt;td&gt;0170&lt;/td&gt;&#xA;          &lt;td&gt;120&lt;/td&gt;&#xA;          &lt;td&gt;0x78&lt;/td&gt;&#xA;          &lt;td&gt;x&lt;/td&gt;&#xA;          &lt;td&gt;小写字母x&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0111 1001&lt;/td&gt;&#xA;          &lt;td&gt;0171&lt;/td&gt;&#xA;          &lt;td&gt;121&lt;/td&gt;&#xA;          &lt;td&gt;0x79&lt;/td&gt;&#xA;          &lt;td&gt;y&lt;/td&gt;&#xA;          &lt;td&gt;小写字母y&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0111 1010&lt;/td&gt;&#xA;          &lt;td&gt;0172&lt;/td&gt;&#xA;          &lt;td&gt;122&lt;/td&gt;&#xA;          &lt;td&gt;0x7A&lt;/td&gt;&#xA;          &lt;td&gt;z&lt;/td&gt;&#xA;          &lt;td&gt;小写字母z&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0111 1011&lt;/td&gt;&#xA;          &lt;td&gt;0173&lt;/td&gt;&#xA;          &lt;td&gt;123&lt;/td&gt;&#xA;          &lt;td&gt;0x7B&lt;/td&gt;&#xA;          &lt;td&gt;{&lt;/td&gt;&#xA;          &lt;td&gt;开花括号&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0111 1100&lt;/td&gt;&#xA;          &lt;td&gt;0174&lt;/td&gt;&#xA;          &lt;td&gt;124&lt;/td&gt;&#xA;          &lt;td&gt;0x7C&lt;/td&gt;&#xA;          &lt;td&gt;|&lt;/td&gt;&#xA;          &lt;td&gt;垂线&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0111 1101&lt;/td&gt;&#xA;          &lt;td&gt;0175&lt;/td&gt;&#xA;          &lt;td&gt;125&lt;/td&gt;&#xA;          &lt;td&gt;0x7D&lt;/td&gt;&#xA;          &lt;td&gt;}&lt;/td&gt;&#xA;          &lt;td&gt;闭花括号&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0111 1110&lt;/td&gt;&#xA;          &lt;td&gt;0176&lt;/td&gt;&#xA;          &lt;td&gt;126&lt;/td&gt;&#xA;          &lt;td&gt;0x7E&lt;/td&gt;&#xA;          &lt;td&gt;~&lt;/td&gt;&#xA;          &lt;td&gt;波浪号&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0111 1111&lt;/td&gt;&#xA;          &lt;td&gt;0177&lt;/td&gt;&#xA;          &lt;td&gt;127&lt;/td&gt;&#xA;          &lt;td&gt;0x7F&lt;/td&gt;&#xA;          &lt;td&gt;DEL (delete)&lt;/td&gt;&#xA;          &lt;td&gt;删除&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h3 id=&#34;hex编码&#34;&gt;hex编码&lt;/h3&gt;&#xA;&lt;p&gt;hex是最常用的编码方式之一，这一点非常容易理解，就是将信息转化为十六进制。要进行各类编码的转化，或者是要将信息在计算机存储中最为本质的一面表现出来的时候，都可以使用hex编码方式。Hex编码就是把一个8位的字节数据用两个十六进制数展示出来，编码时，将8位二进制码重新分组成两个4位的字节，其中一个字节的低4位是原字节的高四位，另一个字节的低4位是原数据的低4位，高4位都补0，然后输出这两个字节对应十六进制数字作为编码。Hex编码后的长度是源数据的2倍。&lt;/p&gt;</description>
    </item>
    <item>
      <title>现代密码-看尽如今的满目繁华</title>
      <link>//localhost:1313/posts/modern_crypto/</link>
      <pubDate>Sat, 29 Jan 2022 11:31:41 +0800</pubDate>
      <guid>//localhost:1313/posts/modern_crypto/</guid>
      <description>&lt;h1 id=&#34;现代密码&#34;&gt;现代密码&lt;/h1&gt;&#xA;&lt;p&gt;现代密码根据密钥的方式可以分为对称密码和非对称密码，这两类密码是现代密码的支柱，现代密码又可以根据加密的方式分为流密码和分组密码。流密码，分组密码在CTF中通常是以对称密码的方式进行而RSA、ECC、格密码通常是以非对称密码的方式进行。&lt;/p&gt;&#xA;&lt;h2 id=&#34;流密码&#34;&gt;流密码&lt;/h2&gt;&#xA;&lt;p&gt;流密码一般逐字节或者逐比特处理信息。一般来说&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;流密码的密钥长度会与明文的长度相同。&lt;/li&gt;&#xA;&lt;li&gt;流密码的密钥派生自一个较短的密钥，派生算法通常为一个伪随机数生成算法。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;需要注意的是，流加密目前来说都是对称加密。&lt;/p&gt;&#xA;&lt;p&gt;伪随机数生成算法生成的序列的随机性越强，明文中的统计特征被覆盖的更好。&lt;/p&gt;&#xA;&lt;p&gt;流密码加解密非常简单，在已知明文的情况下，可以非常容易地获取密钥流。&lt;/p&gt;&#xA;&lt;p&gt;流密码的关键在于设计好的伪随机数生成器。一般来说，伪随机数生成器的基本构造模块为反馈移位寄存器。当然，也有一些特殊设计的流密码，比如 RC4。^1^&lt;/p&gt;&#xA;&lt;h2 id=&#34;分组密码&#34;&gt;分组密码&lt;/h2&gt;&#xA;&lt;p&gt;分组密码又叫块加密。所谓块加密就是每次加密一块明文，常见的加密算法有&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;IDEA 加密&lt;/li&gt;&#xA;&lt;li&gt;DES 加密&lt;/li&gt;&#xA;&lt;li&gt;AES 加密&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;块加密也是对称加密。&lt;/p&gt;&#xA;&lt;p&gt;其实，我们也可以把块加密理解一种特殊的替代密码，但是其每次替代的是一大块。而正是由于一大块，明文空间巨大，而且对于不同的密钥，我们无法做一个表进行对应相应的密文，因此必须得有 &lt;strong&gt;复杂&lt;/strong&gt; 的加解密算法来加解密明密文。&lt;/p&gt;&#xA;&lt;p&gt;而与此同时，明文往往可能很长也可能很短，因此在块加密时往往需要两个辅助&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;padding，即 padding 到指定分组长度&lt;/li&gt;&#xA;&lt;li&gt;分组加密模式，即明文分组加密的方式。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;基本策略&#34;&gt;基本策略&lt;/h3&gt;&#xA;&lt;p&gt;在分组密码设计时，充分使用了Shannon提出的两大策略：混淆和扩散两大策略&lt;/p&gt;&#xA;&lt;p&gt;混淆，Confusion，将密文与密钥之间的统计关系变得尽可能复杂，使得攻击者即使获取了密文的一些统计特性，也无法推测密钥。&lt;/p&gt;&#xA;&lt;p&gt;扩散，Diffusion，使得明文中的每一位影响密文中的许多位。&lt;/p&gt;&#xA;&lt;h2 id=&#34;非对称密码&#34;&gt;非对称密码&lt;/h2&gt;&#xA;&lt;p&gt;在非对称密码中，加密者与解密者所使用的密钥并不一样，典型的有 RSA 加密，背包加密，椭圆曲线加密。&lt;/p&gt;&#xA;&lt;p&gt;非对称密码通常也被称为公钥密码&lt;/p&gt;&#xA;&lt;p&gt;Diffie和Hellman在1976年的论文《密码学的新方向》中提出了全新的密码思想，即一个密码体制中的加密密钥和解密密钥是保密的，且由公开的加密密钥难以推测出保密的解密密钥。这种密码体制称为公开密钥密码体制，也称为公钥密码体制。&lt;/p&gt;&#xA;&lt;p&gt;公钥密码体制的算法很多，所有的公钥密码算法都是基于某个困难的数学问题而产生的，其中，最受CTF青睐的就是RSA了。&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;目前现代密码在CTF比赛出现比较频繁，现在CTF中主要考察的就是现代密码学的知识应用，和数学公式的理解。进行相应的密码学题目的求解。&lt;/p&gt;&#xA;&lt;h2 id=&#34;参考&#34;&gt;参考&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://ctfwiki.ycdxsb.cn/crypto/streamcipher/intro-zh/&#34;&gt;Introduction - CTF Wiki (ycdxsb.cn)&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;</description>
    </item>
    <item>
      <title>古典密码-探寻曾经的故事</title>
      <link>//localhost:1313/posts/classic_crypto/</link>
      <pubDate>Sat, 29 Jan 2022 11:28:09 +0800</pubDate>
      <guid>//localhost:1313/posts/classic_crypto/</guid>
      <description>&lt;h1 id=&#34;古典密码&#34;&gt;古典密码&lt;/h1&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;密码和编码最大的区别就是密码多了一个很关键的信息：密钥。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;密码(Cryptology)是一种用来混淆的技术,它希望将正常的、可识别的信息转变为无法识别的信息。密码学是一个即古老又新兴的学科,密码学一词源自希腊文“krypto&amp;rsquo;s”及“logos”两字,直译即为“隐藏”及“讯息”之意。&lt;/p&gt;&#xA;&lt;p&gt;密码学是一门拥有几千年历史的学科。密码学的发展大概经历了三个阶段:古典密码阶段、近代密码阶段、现代密码阶段。下面我们一起了解古典密码阶段。&lt;/p&gt;&#xA;&lt;p&gt;古典密码阶段是指从密码的产生到发展成为近代密码之间的这段时期密码的发展历史。&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;值得一提的是，在古典密码学中，设计者主要考虑消息的保密性，使得只有相关密钥的人才可以解密密文获得消息的内容，对于消息的完整性和不可否认性则并没有进行太多的考虑。(1)&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h2 id=&#34;历史&#34;&gt;历史&lt;/h2&gt;&#xA;&lt;p&gt;古代中国:从古到今,军队历来是使用密码最频繁的地方,因为保护己方秘密并洞悉敌方秘密是克敌制胜的重要条件。正如中国古代军事著作《孙子兵法》中所说:知己知彼,百战不殆;不知彼而知己,一胜一负;不知彼不知己,每战必败。中国古代有着丰富的军事实践和发达的军事理论,其中不乏巧妙、规范和系统的保密通信和身份认证方法。&lt;/p&gt;&#xA;&lt;p&gt;中国古代兵书《六韬》中的阴符和阴书:《六韬》又称《太公六韬》或《太公兵法》,据说是由西周的开国功臣太公望(又名吕尚或姜子牙,约公元前1128—公元前1015)所著。书中以周文王和周武王与太公问答的形式阐述军事理论,其中《龙韬•阴符》篇和《龙韬•阴书》篇,讲述了君主如何在战争中与在外的将领进行保密通信。&lt;/p&gt;&#xA;&lt;p&gt;以下是关于“阴符”使用方法对话的译文。&lt;/p&gt;&#xA;&lt;p&gt;武王问太公说:领兵深入敌国境内,军队突然遇到紧急情况,战事或有利,或失利。我要与各军远近相通,内外相应,保持密切的联系,以便及时应对战场上军队的需求,应该怎么办呢?&lt;/p&gt;&#xA;&lt;p&gt;太公回答说:国君与主将之间用阴符秘密联络。阴符共有八种:一种长一尺,表示大获全胜,摧毁敌人;一种长九寸,表示攻破敌军,杀敌主将;一种长八寸,表示守城的敌人已投降,我军已占领该城;一种长七寸,表示敌军已败退,远传捷报;一种长六寸,表示我军将誓死坚守城邑;一种长五寸,表示请拨运军粮,增派援军;一种长四寸,表示军队战败,主将阵亡;一种长三寸,表示战事失利,全军伤亡惨重。如奉命传递阴符的使者延误传递,则处死;如阴符的秘密被泄露,则无论无意泄密者或有意传告者也处死。只有国君和主将知道这八种阴符的秘密。这就是不会泄露朝廷与军队之间相互联系内容的秘密通信语言。敌人再聪明也不能识破它。&lt;/p&gt;&#xA;&lt;p&gt;以下是关于“阴书”使用方法对话的译文。&lt;/p&gt;&#xA;&lt;p&gt;武王问太公说:领兵深入敌国境内,君主和将帅各率一军,要使两支军队配合作战,实施变化无穷的作战方法,谋取敌人意想不到的胜利。但需要联络的事情很多,使用阴符难以说明,而两军之间又距离遥远,言语不能通达,应该怎么办呢?&lt;/p&gt;&#xA;&lt;p&gt;太公回答说:如果有军机大事需要联络,应该用书信而不用符。君主通过书信向主将指示,主将则通过书信向君主请示。书信都要拆分成三部分,并分派三人发出,每人拿一部分。只有这三部分合在一起才能读懂信的内容。这就是所谓的阴书(机密信),敌人再聪明,也看不懂这种书信。&lt;/p&gt;&#xA;&lt;p&gt;中国宋代兵书《武经总要》是北宋仁宗时期官修的一部兵书,成书于1040年—1044年,作者是天章阁待制曾公亮和工部侍郎丁度。该书前集第15卷中有“符契”、“信牌”和“字验”三节,专门讲述军队中秘密通信和身份验证的方法。&lt;/p&gt;&#xA;&lt;p&gt;“符契”是《六韬》中“阴符”方法的改进。其中的“符”是皇帝派人向军队调兵的凭证,共有5种符,各种符的组合表示调用兵力的多少,每符分左右两段,右段留京师,左段由各路军队的主将收掌。使者将带着皇帝的命令和由枢密院封印的相应的右符,前往军队调兵;主将听完使者宣读皇帝的命令后,须启封使者带来的右符,并与所藏的左符验合,才能接受命令;然后用本将军的印重封右符,交由使者带回京师。&lt;/p&gt;&#xA;&lt;p&gt;“契”是主将派人向镇守各方的下属调兵的凭证,共有三种契,每契都是鱼形,可分为上下两段。上段留主将收掌,下段交各处下属收掌,使用方法类似于上述的符。&lt;/p&gt;&#xA;&lt;p&gt;“信牌”是两军阵前交战时,派人传送紧急命令的信物和文件。北宋初期使用的信物是一分两半的铜钱,后来改用木牌,上面可以写字。&lt;/p&gt;&#xA;&lt;p&gt;“字验”则是秘密传送军情的一套方法。先约定40种不同的军情,然后用一首含有40个不同字的诗,令其中每一个字对应一种军情。传送军情时,写一封普通的书信或文件,在其中的关键字旁加印记。军使在送信途中,不怕被敌方截获并破解信中内容。将军们收到信后,找出其中加印记的关键字,然后根据约定的40字诗来查出该字所告知的情况,还可以在这些字上再加印记,以表示对有关情况的处理,并令军使带回。&lt;/p&gt;&#xA;&lt;p&gt;我们看到,宋代的“字验”方法与近代以来军队、外交官和间谍们常用的借助密码字典进行秘密通信和联络的原理相同。&lt;/p&gt;&#xA;&lt;p&gt;古代中国的君王常以虎符作为调用军队的凭证。如在春秋战国时期,就有魏信陵君使如姬窃取魏王的虎符,并以此夺取大将晋鄙的兵权,然后率兵大破秦军,以解赵国之围的故事。虎符一般由铜、银等金属制成,背面刻有铭文,以示级别、身份、调用军队的对象和范围等;虎符分为两半,一半放在朝廷,另一半由在外的将帅保管。朝廷派来的使者,需携虎符验合,才可调兵遣将。&lt;/p&gt;&#xA;&lt;p&gt;顺便解释“符”字:其本义是指古代朝廷下命令的凭证;部首的“竹”表明最早的“符”是用竹子做的;“符”通常做成两部分,使用时一分为二,验证时合二为一;只有同一符的两部分才能完美地合在一起;这就是常用词“符合”的来历。近代间谍史上,常有人把纸币钞票一撕为二,作为接头联络的工具,其原理同“符”。现代密码学中,运用公钥—私钥体系进行身份认证的方法也与“符”相通。&lt;/p&gt;&#xA;&lt;p&gt;我国明末清初著名的军事理论家揭暄(1613—1695)所著的《兵经百言》用100个字条系统阐述了中国古代的军事理论。其中的“传”字诀则是古代军队通信方法的总结,其解释如下:&lt;/p&gt;&#xA;&lt;p&gt;军队分开行动后,如相互之间不能通信,就要打败仗;如果能通信但不保密,则也要被敌人暗算。所以除了用锣鼓、旌旗、骑马送信、燃火、烽烟等联系外,两军相遇,还要对暗号(口令)。当军队分开有千里之远时,宜用机密信(素书)进行通信。机密信分为三种:改变字的通常书写或阅读方式(“不成字”,如传统密码学的文字替换或移位方法);隐写术(“无形文”,用含有某种化学物质的液体来书写,收信者用特殊方法使文字显现出来,如矾书);不是把书信写在常用的纸上(“非纸简”),而是写在特殊的、不引人注意的载体上(如服饰,甚至人体上等)。这些通信方式连送信的使者都不知道信中的内容,但收信人却可以接收到信息。&lt;/p&gt;&#xA;&lt;p&gt;古埃及:公元前2000年人类文明刚刚形成,大约就在那个时候古埃及就拥有了密码。贵族克努姆霍特普二世的墓碑上记载了在阿梅连希第二法老王朝供职期间它所建立的功勋。上面的象形文字与我们已知的埃及象形文字有所不同,那是由一位擅长书写的人对普通象形文字经过处理之后刻录的,但是具体的方法尚未可知。民众们推测这可能是庄严和权威的象征。&lt;/p&gt;&#xA;&lt;p&gt;古印度:印度公元前三百年写成的《经济论》旨在描述当时密探充斥全国时特务机关的官员用密写的方式给密探下达任务。&lt;/p&gt;&#xA;&lt;p&gt;古希腊:大约在公元前700年,古希腊军队用一种叫做Scytale的圆木棍来进行保密通信。其使用方法是:把长带子状羊皮纸缠绕在圆木棍上,然后在上面写字;解下羊皮纸后,上面只有杂乱无章的字符,只有再次以同样的方式缠绕到同样粗细的棍子上,才能看出所写的内容。&lt;/p&gt;&#xA;&lt;p&gt;这种Scytale圆木棍也许是人类最早使用的文字加密解密工具,据说主要是古希腊城邦中的斯巴达人(Sparta)在使用它,所以又被叫做“斯巴达棒”。&lt;/p&gt;&#xA;&lt;p&gt;斯巴达棒的加密原理属于密码学中的“换位法”(Transition)加密,因为它通过改变文本中字母的阅读顺序来达到加密的目的。(2)&lt;/p&gt;&#xA;&lt;h2 id=&#34;类型&#34;&gt;类型&lt;/h2&gt;&#xA;&lt;p&gt;古典密码在形式上可分成移位密码和替代密码两类，其中替代密码又可分为单表替代密码和多表替代。&lt;/p&gt;&#xA;&lt;h3 id=&#34;移位密码&#34;&gt;移位密码&lt;/h3&gt;&#xA;&lt;h4 id=&#34;曲路密码&#34;&gt;曲路密码&lt;/h4&gt;&#xA;&lt;p&gt;曲路密码是一种置换密码，其中密钥是从明文创建的块中读取密文时要遵循的路径,该密钥需双方事先约定好（曲路路径）。&lt;/p&gt;&#xA;&lt;p&gt;下面给出一个例子：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;明文：The quick brown fox jumps over the lazy dog&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;填入填入 5 行 7 列表（事先约定填充的行列数）&lt;/p&gt;&#xA;&lt;p&gt;&lt;img alt=&#34;image-20210719200647994&#34; src=&#34;//localhost:1313/images/Classic_Crypto/image-20210719200647994.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;加密的回路线（事先约定填充的行列数）&lt;/p&gt;&#xA;&lt;p&gt;&lt;img alt=&#34;image-20210719200710292&#34; src=&#34;//localhost:1313/images/Classic_Crypto/image-20210719200710292.png&#34;&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;密文：gesfc inpho dtmwu qoury zejre hbxva lookT&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;云影密码&#34;&gt;云影密码&lt;/h4&gt;&#xA;&lt;p&gt;该密码又称为01248，使用 0，1，2，4，8 四个数字，其中 0 用来表示间隔，其他数字以加法可以表示出 如：28=10，124=7，18=9，再用 1-&amp;gt;26 表示 A-&amp;gt;Z。&lt;/p&gt;</description>
    </item>
    <item>
      <title>2021 绿城杯 Crypto_writeup</title>
      <link>//localhost:1313/posts/2021-greencitycup-crypto_writeup/</link>
      <pubDate>Sat, 29 Jan 2022 10:57:34 +0800</pubDate>
      <guid>//localhost:1313/posts/2021-greencitycup-crypto_writeup/</guid>
      <description>&lt;h1 id=&#34;2021-绿城杯-crypto-writeup&#34;&gt;2021 绿城杯 Crypto Writeup&lt;/h1&gt;&#xA;&lt;p&gt;河南郑州的绿城杯，也是第一届绿城杯比赛。使用的比赛平台是安恒的比赛平台。比赛过程中出现了卡顿的问题。绿城杯的整体题目难度还是比较友好的，至少密码学方向是相对比较简单的一部分内容。&lt;/p&gt;&#xA;&lt;p&gt;密码学题目有三道题目，一道古典密码学题目，两道RSA题目。本人太菜，仅仅做出了前两道题目。&lt;/p&gt;&#xA;&lt;h2 id=&#34;0x0-warmup加密算法&#34;&gt;0x0 [warmup]加密算法&lt;/h2&gt;&#xA;&lt;p&gt;直接看看题目的源码&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; Crypto.Util.number &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; flag &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; flag&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;assert&lt;/span&gt; flag[:&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;flag{&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;str1 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;encode&lt;/span&gt;(plain_text, a, b, m):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;cipher_text &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; plain_text:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; str1:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;addr &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; str1&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;find(i)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;cipher_text &lt;span style=&#34;color:#f92672&#34;&gt;+=&lt;/span&gt; str1[(a&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;addr&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;b) &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; m]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;cipher_text &lt;span style=&#34;color:#f92672&#34;&gt;+=&lt;/span&gt; i&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;print(cipher_text)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;encode(flag,&lt;span style=&#34;color:#ae81ff&#34;&gt;37&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;23&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;52&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# cipher_text = &amp;#39;aoxL{XaaHKP_tHgwpc_hN_ToXnnht}&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;代码看样子是非常简单的，可以找到加密的关键代码：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;encode&lt;/span&gt;(plain_text, a, b, m):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;cipher_text &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; plain_text:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; str1:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;addr &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; str1&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;find(i)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;cipher_text &lt;span style=&#34;color:#f92672&#34;&gt;+=&lt;/span&gt; str1[(a&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;addr&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;b) &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; m]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;cipher_text &lt;span style=&#34;color:#f92672&#34;&gt;+=&lt;/span&gt; i&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;print(cipher_text)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;对加密函数进行审计可以发现有一个比较明显的数学运算：&lt;/p&gt;</description>
    </item>
    <item>
      <title>2021 鹤城杯 Crypto_Writeup</title>
      <link>//localhost:1313/posts/2021-cranecitycup-crypto_writeup/</link>
      <pubDate>Sat, 29 Jan 2022 10:57:12 +0800</pubDate>
      <guid>//localhost:1313/posts/2021-cranecitycup-crypto_writeup/</guid>
      <description>&lt;h1 id=&#34;2021-鹤城杯-crypto-writeup&#34;&gt;2021-鹤城杯-Crypto Writeup&lt;/h1&gt;&#xA;&lt;p&gt;鹤城杯的密码学题目，难度相对较低。但是也挺有意思的，可以学习点小知识。&lt;/p&gt;&#xA;&lt;h2 id=&#34;0x0-easy_crypto&#34;&gt;0x0 easy_Crypto&lt;/h2&gt;&#xA;&lt;p&gt;签到题&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;公正公正公正诚信文明公正民主公正法治法治诚信民主自由敬业公正友善公正平等平等法治民主平等平等和谐敬业自由诚信平等和谐平等公正法治法治平等平等爱国和谐公正平等敬业公正敬业自由敬业平等自由法治和谐平等文明自由诚信自由平等富强公正敬业平等民主公正诚信和谐公正文明公正爱国自由诚信自由平等文明公正诚信富强自由法治法治平等平等自由平等富强法治诚信和谐&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;社会主义核心价值观编码，直接解编码就可&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;flag{IlUqU9O5guX6YiITsRNPiQmbhNRjGuTP}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;0x1-a_crypto&#34;&gt;0x1 A_Crypto&lt;/h2&gt;&#xA;&lt;p&gt;传统密码学题目，应该是个套娃密码&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;4O595954494Q32515046324757595N534R52415653334357474R4N575955544R4O5N4Q46434S4O59474253464Q5N444R4Q51334557524O5N4S424944473542554O595N44534O324R49565746515532464O49345649564O464R4R494543504N35&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;使用&lt;code&gt;python&lt;/code&gt;的&lt;code&gt;ciphey&lt;/code&gt;库进行求解就好&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;python3 -m ciphey -t &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;4O595954494Q32515046324757595N534R52415653334357474R4N575955544R4O5N4Q46434S4O59474253464Q5N444R4Q51334557524O5N4S424944473542554O595N44534O324R49565746515532464O49345649564O464R4R494543504N35&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;大约2s左右就能抛出flag了&lt;/p&gt;&#xA;&lt;p&gt;&lt;img alt=&#34;image-20211008200334880&#34; src=&#34;//localhost:1313/images/2021-%E9%B9%A4%E5%9F%8E%E6%9D%AF-Crypto_Writeup/image-20211008200334880.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;直接求解出传统密码学套娃题目的flag：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;flag{W0w_y0u_c4n_rea11y_enc0d1ng!}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;0x2-babyrsa&#34;&gt;0x2 babyrsa&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; Crypto.Util.number &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; getPrime, bytes_to_long&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; secret &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; flag&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;p &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; getPrime(&lt;span style=&#34;color:#ae81ff&#34;&gt;1024&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;q &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; getPrime(&lt;span style=&#34;color:#ae81ff&#34;&gt;1024&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;n &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; p &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; q&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;e &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;65537&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;hint1 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; p &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;724&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;hint2 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; q &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;**&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;265&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ct &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pow(bytes_to_long(flag), e, n)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;print(hint1)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;print(hint2)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;print(n)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;print(ct)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;听大佬们说这是一道原题，我也不清楚是在哪里的原题，好像需要简单变化就能得到flag&lt;/p&gt;&#xA;&lt;p&gt;分析一下题目，题目泄露了p的高位数据，但是只泄露了300位，还不能使用coppersmith攻击，需要至少576位才能使用coppersmith攻击。但是题目给到了另一个因子，因此可以尝试使用另一个因子进行构造来求解。&lt;/p&gt;&#xA;&lt;p&gt;另一个因子该怎么使用呢？看来需要简单的数学推导了 XD&#xA;$$&#xA;q\ \text{mod}\ 2^{265} \equiv q_0 \&#xA;q = q_0 + 2^{265} \times k \&#xA;n = q_0\cdot p + 2^{265} \cdot k \cdot p \&#xA;n \cdot q_0^{-1} = p + 2^{265} \cdot k \cdot p \cdot q_0^{-1} \&#xA;p_0 \equiv n \cdot q_0^{-1}\ \text{mod}\ 2^{265}&#xA;$$&#xA;根据推导过程可以获取到p的低位p0，然后就可以使用coppersmith攻击进行快乐求解了。求解后可以得到p，然后根据p的数值来获得q的数值。现在得到这两个数值就可以进行RSA的正常求解啦！&lt;/p&gt;</description>
    </item>
    <item>
      <title>2021_美团_MT CTF_Writeup</title>
      <link>//localhost:1313/posts/2021_meituan_mt-ctf_writeup/</link>
      <pubDate>Sat, 29 Jan 2022 10:56:47 +0800</pubDate>
      <guid>//localhost:1313/posts/2021_meituan_mt-ctf_writeup/</guid>
      <description>&lt;h1 id=&#34;2021-美团网络安全-mt-ctf-writup&#34;&gt;2021 美团网络安全 MT-CTF writup&lt;/h1&gt;&#xA;&lt;p&gt;本菜鸡比较菜，有些安详，仅仅只搞出了两道题目。两道简单的密码学题目：&lt;/p&gt;&#xA;&lt;h2 id=&#34;symbol&#34;&gt;Symbol&lt;/h2&gt;&#xA;&lt;p&gt;非常奇怪的题目：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img alt=&#34;Symbols&#34; src=&#34;//localhost:1313/images/2021_%E7%BE%8E%E5%9B%A2_MT-CTF_Writeup/Symbols.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;题目是一堆奇奇怪怪的符号，对字符进行搜索找到其内涵含义后发现找到了&lt;code&gt;LaTex&lt;/code&gt;关键字&lt;/p&gt;&#xA;&lt;p&gt;于是想起了写个人简历和公式会经常用到的LaTeX语言，查找一下LaTeX的字符表得到：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-latex&#34; data-lang=&#34;latex&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;$$&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  \flat\lambda\alpha\gamma\{\forall\uplus\nu\_\Lambda\alpha\Tau\epsilon\Xi\_ M \approx\triangleleft\hbar\}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;$$&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;根据代码的首字母可以得到：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;flag{fun_LaTeX_Math}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;根据题目要求用md5进行加密，然后套一个flag得到&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;flag{639220f4b70bb4a3ac80d95efcfb2353}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;hamburgerrsa&#34;&gt;hamburgerRSA&lt;/h2&gt;&#xA;&lt;p&gt;RSA的题目看下题目源码：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; Crypto.Util.number &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;flag &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; open(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;flag.txt&amp;#39;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;read()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;nbit &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;64&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;True&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    p, q &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; getPrime(nbit), getPrime(nbit)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    PP &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; int(str(p) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; str(p) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; str(q) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; str(q))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    QQ &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; int(str(q) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; str(q) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; str(p) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; str(p))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; isPrime(PP) &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; isPrime(QQ):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;break&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;n &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; PP &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; QQ&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;m &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; bytes_to_long(flag&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;encode())&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;c &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pow(m, &lt;span style=&#34;color:#ae81ff&#34;&gt;65537&lt;/span&gt;, n)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;print(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;n =&amp;#39;&lt;/span&gt;, n)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;发现生成算法有些奇怪，感觉&lt;code&gt;p*q&lt;/code&gt;和&lt;code&gt;PP*QQ&lt;/code&gt;应该有些关系，使用python测试着生成一下，观察一下规律：（不想具体推到关系了）&lt;/p&gt;&#xA;&lt;p&gt;写一个测试脚本：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; Crypto.Util.number &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;nbit &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;64&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;True&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    p, q &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; getPrime(nbit), getPrime(nbit)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    PP &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; int(str(p) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; str(p) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; str(q) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; str(q))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    QQ &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; int(str(q) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; str(q) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; str(p) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; str(p))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; isPrime(PP) &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; isPrime(QQ):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;break&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;n &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; PP &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; QQ&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;N &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; p&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;q&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;print(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;n:&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;format(n))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;print(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;N:&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;format(N))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;运行下脚本可以发现：&lt;/p&gt;</description>
    </item>
    <item>
      <title>2021 羊城杯 Crypto部分_Writeup</title>
      <link>//localhost:1313/posts/2021-sheepcitycup-crypto%E9%83%A8%E5%88%86_writeup/</link>
      <pubDate>Sat, 29 Jan 2022 10:56:25 +0800</pubDate>
      <guid>//localhost:1313/posts/2021-sheepcitycup-crypto%E9%83%A8%E5%88%86_writeup/</guid>
      <description>&lt;h1 id=&#34;2021-羊城杯-crypto部分-writeup&#34;&gt;2021 羊城杯 Crypto部分 Writeup&lt;/h1&gt;&#xA;&lt;p&gt;菜鸡Crypto手，就解出来了两道题，都是相对比较简单的密码学题目，供各位大佬参考&lt;/p&gt;&#xA;&lt;h2 id=&#34;bigrsa&#34;&gt;BigRSA&lt;/h2&gt;&#xA;&lt;p&gt;题目源码&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; Crypto.Util.number &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; flag &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;n1 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;103835296409081751860770535514746586815395898427260334325680313648369132661057840680823295512236948953370895568419721331170834557812541468309298819497267746892814583806423027167382825479157951365823085639078738847647634406841331307035593810712914545347201619004253602692127370265833092082543067153606828049061&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;n2 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;115383198584677147487556014336448310721853841168758012445634182814180314480501828927160071015197089456042472185850893847370481817325868824076245290735749717384769661698895000176441497242371873981353689607711146852891551491168528799814311992471449640014501858763495472267168224015665906627382490565507927272073&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;e &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;65537&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;m &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; bytes_to_long(flag)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;c &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pow(m, e, n1)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;c &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pow(c, e, n2)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;print(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;c = &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%d&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; c)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# output&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# c = 60406168302768860804211220055708551816238816061772464557956985699400782163597251861675967909246187833328847989530950308053492202064477410641014045601986036822451416365957817685047102703301347664879870026582087365822433436251615243854347490600004857861059245403674349457345319269266645006969222744554974358264&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;手速题目，可以通过n1和n2直接的关系。&lt;/p&gt;&#xA;&lt;p&gt;n1和n2经过测试是存在有一个不等于1的最大公约数，这个最大公约数显然就是共同的p，可以根据这一线索进行。然后就是两层的加密数值，求出两个q，然后再求出两个phi和d，然后这道题目就像剥洋葱一样简单了&lt;/p&gt;&#xA;&lt;p&gt;EXP：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; gmpy2&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; libnum&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; Crypto.Util.number &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;n1 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;103835296409081751860770535514746586815395898427260334325680313648369132661057840680823295512236948953370895568419721331170834557812541468309298819497267746892814583806423027167382825479157951365823085639078738847647634406841331307035593810712914545347201619004253602692127370265833092082543067153606828049061&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;n2 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;115383198584677147487556014336448310721853841168758012445634182814180314480501828927160071015197089456042472185850893847370481817325868824076245290735749717384769661698895000176441497242371873981353689607711146852891551491168528799814311992471449640014501858763495472267168224015665906627382490565507927272073&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;e &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;65537&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# m = bytes_to_long(flag)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# c = pow(m, e, n1)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# c = pow(c, e, n2)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;c &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;60406168302768860804211220055708551816238816061772464557956985699400782163597251861675967909246187833328847989530950308053492202064477410641014045601986036822451416365957817685047102703301347664879870026582087365822433436251615243854347490600004857861059245403674349457345319269266645006969222744554974358264&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;p &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;int(gmpy2&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;gcd(n1,n2))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;q1 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; n1&lt;span style=&#34;color:#f92672&#34;&gt;//&lt;/span&gt;p&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;q2 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; n2&lt;span style=&#34;color:#f92672&#34;&gt;//&lt;/span&gt;p&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;assert&lt;/span&gt; p&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;q1 &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; n1&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;assert&lt;/span&gt; p&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;q2 &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; n2&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;phi1 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; (p&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;(q1&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;phi2 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; (p&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;(q2&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;d1 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; libnum&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;invmod(e,phi1)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;d2 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; libnum&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;invmod(e,phi2)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;c1 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pow(c,d2,n2)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;m &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pow(c1,d1,n1)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;flag &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; long_to_bytes(m)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;print(flag)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;ringringring&#34;&gt;RingRingRing&lt;/h2&gt;&#xA;&lt;p&gt;这道题目需要使用羊城杯官方的VPN进行连接，是一个远程的动态靶机，其实也就是一个身份认证加一个简单是数学运算题目，我是采用从简单的形式入手，由简单推向复杂，找出规律就行遍历求解。&#xA;$$&#xA;a^4+b^4+c^4+d^4 = e^2&#xA;$$&#xA;题目关键点也就是这个公式，根据这个公式的特点：&#xA;$$&#xA;1^4 + 1^4 +1^4 + 1^4 = 2^2&#xA;$$&lt;/p&gt;</description>
    </item>
    <item>
      <title>Jarvisoj Basic_writeup</title>
      <link>//localhost:1313/posts/jarvisoj-basic_writeup/</link>
      <pubDate>Sat, 29 Jan 2022 10:49:20 +0800</pubDate>
      <guid>//localhost:1313/posts/jarvisoj-basic_writeup/</guid>
      <description>&lt;h1 id=&#34;jarvisoj-basic-writeup&#34;&gt;Jarvisoj-Basic writeup&lt;/h1&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;JarvisOJ是浙江大学系统安全实验室(USS  Lab.)学生Jarvis所开发的一个CTF在线答题系统。题目形式与各大CTF比赛相同。目的主要是为自己整理历次比赛题目供以后查阅以及测试的作用，同时开放给广大爱好信息安全的朋友，可以在这里一起学习，一起进步。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;&lt;img alt=&#34;image-20211018145837413&#34; src=&#34;//localhost:1313/images/Jarvisoj-Basic_writeup/image-20211018145837413.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;浙江大学的CTF刷题平台，使用起来还是比较不错的。界面简洁易用。&lt;/p&gt;&#xA;&lt;p&gt;Basic模块的题目都是非常简单的练手题，刷一刷，玩一玩。顺便学习一些奇淫技巧，:smirk:&lt;/p&gt;&#xA;&lt;h2 id=&#34;0x00-base64&#34;&gt;0x00 base64?&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;GUYDIMZVGQ2DMN3CGRQTONJXGM3TINLGG42DGMZXGM3TINLGGY4DGNBXGYZTGNLGGY3DGNBWMU3WI===&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;看样子像是Base32编码，直接解编码得到：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;504354467b4a7573745f743373745f683476335f66346e7d&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;hex编码解编码得到：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;PCTF{Just_t3st_h4v3_f4n}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;0x01-关于uss-lab&#34;&gt;0x01 关于USS Lab&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;USS的英文全称是什么，请全部小写并使用下划线连接_，并在外面加上PCTF{}之后提交&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;USS Lab是Jarvis OJ的主要承办单位，在刷题平台就能找到相关的信息&lt;/p&gt;&#xA;&lt;p&gt;&lt;img alt=&#34;image-20211018160449136&#34; src=&#34;//localhost:1313/images/Jarvisoj-Basic_writeup/image-20211018160449136.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;flag已经显而易见了，非常简单&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;PCTF{UBIQUITOUS_SYSTEM_SECURITY}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;0x02-veryeasy&#34;&gt;0x02 veryeasy&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;使用基本命令获取flag&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;直接使用cat命令查看附件内容，或者strings命令查看附件内容&lt;/p&gt;&#xA;&lt;p&gt;就能得到flag：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;PCTF{strings_i5_3asy_isnt_i7}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;0x03-段子&#34;&gt;0x03 段子&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;程序猿圈子里有个非常著名的段子：&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;手持两把锟斤拷，口中疾呼烫烫烫。&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;请提交其中&amp;#34;锟斤拷&amp;#34;的十六进制编码。(大写)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;FLAG: PCTF{你的答案}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;锟斤拷，是一串经常在搜索引擎页面和其他网站上看到的乱码字符。乱码源于GBK字符集和Unicode字符集之间的转换问题。&lt;/p&gt;&#xA;&lt;p&gt;可以直接在python解释器上进行调试得到：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;锟斤拷&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;encode(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;gbk&amp;#39;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;hex()&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;upper()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# &amp;#39;EFBFBDEFBFBD&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;故flag：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;PCTF{EFBFBDEFBFBD}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;0x04-手贱&#34;&gt;0x04 手贱&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;某天A君的网站被日，管理员密码被改，死活登不上，去数据库一看，啥，这密码md5不是和原来一样吗？为啥登不上咧？&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;d78b6f302l25cdc811adfe8d4e7c9fd34&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;请提交PCTF{原来的管理员密码}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;挺无聊的题目的，题目给出的md5的长度是33位，需要删去一位来进行爆破&lt;/p&gt;&#xA;&lt;p&gt;使用python脚本迭代出可能的md5数值：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# coding:utf8&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;myMd5 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; range(len(myMd5)):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; j &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; range(len(myMd5)):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; j:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;pass&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            print myMd5[j],&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    print &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然后依次在cmd5网站进行解密，直到解出flag&lt;/p&gt;</description>
    </item>
    <item>
      <title>CTF整体规划</title>
      <link>//localhost:1313/posts/ctf_totalplan/</link>
      <pubDate>Sat, 29 Jan 2022 09:29:15 +0800</pubDate>
      <guid>//localhost:1313/posts/ctf_totalplan/</guid>
      <description>&lt;h1 id=&#34;ctf整体规划&#34;&gt;CTF整体规划&lt;/h1&gt;&#xA;&lt;p&gt;&lt;strong&gt;CTF&lt;/strong&gt;（Capture The Flag，夺旗赛）起源于 1996 年 &lt;strong&gt;DEFCON&lt;/strong&gt; 全球黑客大会，是网络安全爱好者之间的竞技游戏。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;CTF&lt;/strong&gt; 竞赛涉及众多领域，内容繁杂。与此同时，安全技术的发展速度越来越快，&lt;strong&gt;CTF&lt;/strong&gt; 题目的难度越来越高，初学者面对的门槛越来越高。&lt;/p&gt;&#xA;&lt;h2 id=&#34;概述1&#34;&gt;概述^1^&lt;/h2&gt;&#xA;&lt;h3 id=&#34;ctf-的起源&#34;&gt;CTF 的起源&lt;/h3&gt;&#xA;&lt;p&gt;CTF 的前身是传统黑客之间的网络技术比拼游戏，起源于 1996 年第四届 DEFCON。&lt;/p&gt;&#xA;&lt;h3 id=&#34;早期-ctf-竞赛&#34;&gt;早期 CTF 竞赛&lt;/h3&gt;&#xA;&lt;p&gt;第一个 CTF 比赛（1996 年 - 2001 年），没有明确的比赛规则，没有专业搭建的比赛平台与环境。由参数队伍各自准备比赛目标（自行准备与防守比赛目标，并要尝试攻破对方的比赛目标）。而组织者大都只是一些非专业的志愿者，接受参赛队伍手工计分的请求。&lt;/p&gt;&#xA;&lt;p&gt;没有后台自动系统支持和裁判技术能力认定，计分延迟和误差以及不可靠的网络和不当的配置，导致比赛带来了极大的争论与不满。&lt;/p&gt;&#xA;&lt;h3 id=&#34;现代ctf-竞赛&#34;&gt;「现代」CTF 竞赛&lt;/h3&gt;&#xA;&lt;p&gt;由专业队伍承担比赛平台、命题、赛事组织以及自动化积分系统。参赛队伍需提交参赛申请，由 DEFCON 会议组织者们进行评选。&lt;/p&gt;&#xA;&lt;p&gt;就 LegitBS 组织的三年 DEFCON CTF 比赛而言，有以下突出特点：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;比赛侧重于对计算机底层和系统安全的核心能力，Web 漏洞攻防技巧完全被忽略。&lt;/li&gt;&#xA;&lt;li&gt;竞赛环境趋向多 CPU 指令架构集，多操作系统，多编程语言。&lt;/li&gt;&#xA;&lt;li&gt;采用「零和」计分规则。&lt;/li&gt;&#xA;&lt;li&gt;团队综合能力考验：逆向分析、漏洞挖掘、漏洞利用、漏洞修补加固、网络流量分析、系统安全运行维护以及安全方面的编程调试。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;二级制安全规划&#34;&gt;二级制安全规划&lt;/h2&gt;&#xA;&lt;h3 id=&#34;hacking-三部曲&#34;&gt;Hacking 三部曲&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;理解系统（Understanding）&#xA;&lt;ul&gt;&#xA;&lt;li&gt;系统性地基础课程学习，深入理解计算机系统运作机制&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;破坏系统（Breaking）&#xA;&lt;ul&gt;&#xA;&lt;li&gt;学习与创造漏洞挖掘与利用技巧&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;重构系统（Reconstruction）&#xA;&lt;ul&gt;&#xA;&lt;li&gt;设计与构建系统防护&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;基础课程学习&#34;&gt;基础课程学习&lt;/h3&gt;&#xA;&lt;p&gt;核心基础课程 - 计算工作原理&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;体系结构&lt;/p&gt;&#xA;&lt;p&gt;CPU的设计与实现 &lt;a href=&#34;https://course.ece.cmu.edu/~ece447/s15/doku.php&#34;&gt;CMU 18-477&lt;/a&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;机器指令与汇编语言&lt;/li&gt;&#xA;&lt;li&gt;指令的解码、执行&lt;/li&gt;&#xA;&lt;li&gt;内存管理&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;编译原理&lt;/p&gt;&#xA;&lt;p&gt;编译器的设计与实现 &lt;a href=&#34;http://web.stanford.edu/class/cs143/&#34;&gt;Stanford CS143&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>大学,未来</title>
      <link>//localhost:1313/posts/university_future/</link>
      <pubDate>Sat, 29 Jan 2022 09:26:51 +0800</pubDate>
      <guid>//localhost:1313/posts/university_future/</guid>
      <description>&lt;h1 id=&#34;大学未来&#34;&gt;大学，未来&lt;/h1&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;大学是一个知识分子的聚集地，是一个自由的学术殿堂。但是大学也有着很多限制和禁锢，大学生往往也在承受着社会的诸多压力。以上是我对于大学最基本的一种认识和一种观念上的思考。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h2 id=&#34;大学&#34;&gt;大学&lt;/h2&gt;&#xA;&lt;p&gt;什么是大学？我们为什么要上大学？&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;我们年轻人往往存在着诸多迷茫和对于未来的种种困惑，我或许不能带来更多的思维上的超脱，但是我希望可以带来思维上的解放和独立&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;大学是自由的学术空间，你可以在大学自由遨游，做任何自己想要做的事情，当然是在不违反大学规则的一种相对自由。大学的学术资源、知识资源和知识库存非常的丰富，在大学可以尽情的学习知识。在大学，你可以不受任何约束，去学习，去思考，去交谈，去恋爱等等。但是大学有不仅仅只是大学，大学有着诸多的现实性的因素和社会普遍观念的影响。因而，大学是一个人完全展现的自由空间，每个人都有着自己的自由世界和固有领域，相互交叉着，融合着形成了一种多元丰富的大学文化和大学空间。&lt;/p&gt;&#xA;&lt;p&gt;大学是一个个性发展的平台，同时大学也是一个思想碰撞和灵魂交错融合的空间。虽然现在社会上充斥着诸多的大学无用论和大学生的诸多问题。上大学究竟有没有用，或者说上大学的意义又是什么呢？寻找意义往往可能会是一种比较徒劳的过程，与其寻找意义倒不如去用自己的青春热血去创造意义，世界的未来必然是年轻人的天下和年轻人的一方天地。大学提升的往往不是一种知识层面上的增长，而更多的是一种精神层面和思维层面的增长，这些层次的增长会提升一个人的软实力和综合素质。这些能力的提升，必然会带来诸多方面的改变。因而，我们上大学有时不是为了改变我们自己，更多的是为了改变世界。&lt;/p&gt;&#xA;&lt;h2 id=&#34;学习&#34;&gt;学习&lt;/h2&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;大学的主要组成成分是学习，但是又不仅仅是学习，但是更多的还是学习。&#xA;学习有广义和狭义之分，在大学之前的学习往往是一种狭义上的学习，在大学之后的学习往往是一种广义的学习。什么是狭义的学习？什么又是广义的学习？&#xA;狭义的学习：指书本上知识内容或课堂内容的学习，这些学习到的知识往往都有着比较实质性的作用，比如应对考试、考证以及升学等诸多方面。&#xA;广义的学习：指更大范围的学习，一种终身学习的态度对待生活中的任何事情，知识的载体不仅限于书本和课堂，还有更多方面的载体，处处皆可学习，处处皆能学习。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;大学生之间的差异性往往在于学习的差异性，不同人对于学习的态度不同，对于学习的思考和思维方式不同，而带来了诸多方方面面的不同和差异性。我们大学生应该怎么进行学习？什么样的学习是有效的学习？&lt;/p&gt;&#xA;&lt;p&gt;很多大学生的学习方式往往都带有目的性，这个目的性往往指向期末考试和 GPA ，以及更多现实方面的意义。他们很多都是以 DDL 来鞭策自己，普遍具有拖延情况，而且很多大学生都缺乏正确的时间管理方法。于是，很多大学生就开始进行短期高效的学习。但是，这种学习往往都是不长久的学习。知识不能在大学生的思维深处内化，学习似乎变成了一种应付考试的短期用品，而不是一种长期的理念和生活方式。&lt;/p&gt;&#xA;&lt;p&gt;学习是大学生生活的一部分，更是要时时进行的一种思维训练和精神上的洗礼。学习可以给我们大学生带来一种视角和认知方式的改变，学习这个过程是苦乐交织的过程。通过学习知识，我们大学生可以更好地理解世界，更好地体会生命所带来的美好以及大学生活的意义。&lt;/p&gt;&#xA;&lt;p&gt;学习的方式有很多方面，学习本质是将信息转换为知识的过程。什么是信息?什么又是知识?信息就是我们日常生活所接触到的方方面面的可以影响决策的数据，知识就是根据一部分信息可以获取另一部分或者是推断出另一部分信息的模型或者是函数。要进行学习，首先需要获取信息，将信息整合成知识。或者将前人总结的知识进行模型化迁移进行内化和泛化处理。&lt;/p&gt;&#xA;&lt;p&gt;获取信息的途径有很多种，尤其在我们所处的信息时代中。我们可以通过互联网获得诸多信息，通过教学视频迁移前人或是他人的知识，通过阅读系统化地获取信息。对信息进行整合和转化的过程即是学习。&lt;/p&gt;&#xA;&lt;p&gt;信息获取的途径繁多，自然也带来了很多曾经没有的困境，即知识焦虑，信息迷茫问题。这些问题是伴随着信息时代所产生的一种问题，信息质量参差不齐，信息碎片化，信息数量大。这诸多情况，导致很多大学生不知道该对那些信息进行知识性转化。以及很多大学生不知道应该采取哪些渠道进行信息获取有效的知识并进行有效的学习。或许，也有很多人不知道该怎么去学习，或者他们根本并没有太多学习的欲望，把学习进行了泛化，进行着一种自我麻醉的学习。更可怕的是，他们却浑然不知，并且深深地沉浸在这种自我麻痹式的学习中。学习，也就是这样子了。&lt;/p&gt;&#xA;&lt;p&gt;信息的过滤和整合是学习过程中最美好的一个过程，也是最能体验到知识美好的一个过程，实现这个过程的方法很多，形式很多样化。每个人都有着自己的想法和自己的愿景，一般而言都会根据学习的原理进行个性化定制属于自己的那套学习方法。学习原理都是比较简单的内容，就是一种大脑思维的模型，大脑进行学习的工作原理，简而言之，学习就是获取知识的过程，学习原理也就是如何高效学习，即输入-计算-输出。构建这个知识模型，根据大脑的神经网络结构进行刻意练习，就是学习的本质也就是学习的原理。&lt;/p&gt;&#xA;&lt;p&gt;学习的方式因人而异，但是学习的原理一般都是具有普遍适应性的，具有非常好的兼容性。学习方法是根据学习原理来进行定制的，但是常见的学习方式一般有最近比较流行的思维导图，费曼学习法。其实，总的学习方法也是根据这两种学习方法进行个性化定制和改善的。还有一些学习方法是根据心理学上的一些原理和知识进行设计的，根据心理学的原理设计的方法很多都具有普遍性，由于这些方法都是针对人体本身的大脑思维原理的特点和优势进行开发和制作的。&lt;/p&gt;&#xA;&lt;p&gt;学习是个很大的话题，我所能介绍的不过也只是冰山一角，学习是大学生的任务，或者应该说是大学生的一种使命性的事情。我们大学生应该去面对学习这件事情，认真对待学习，在这个时代，知识就是力量。没有知识真的是寸步难行，特别是我们大学生。&lt;/p&gt;&#xA;&lt;p&gt;学习，从阅读一本书，做好每堂课程的笔记开始。&lt;/p&gt;&#xA;&lt;h2 id=&#34;知识&#34;&gt;知识&lt;/h2&gt;&#xA;&lt;p&gt;知识是具有普遍性通用性的特殊性的信息。在大学期间，我该去如何去考量知识呢？我们应该去选择哪些知识呢？&lt;/p&gt;&#xA;&lt;p&gt;现在社会焦虑开始不断扩大，各个层级开始不断出现内卷的现象，基于此。很多大学生也会受到社会或多或少的影响而去麻木地学习社会所需要的知识和内容。这些大学生进行这样的功利性学习是没有活力的学习，也不是说功利性学习不好，只是在我们这个相对和平安定的年代，我应该可以有选择知识的自由，遵从内心的想法，富有灵魂地学习一些自己所向往的知识领域。“爱你所爱，行你所行，听从你心，无问西东”，我们大学生应该有活力有激情地选择自己内心深处喜爱的知识，而不是仅仅被社会所束缚。知识，是灵动的，是富有生气的。&lt;/p&gt;&#xA;&lt;p&gt;知识和技能总会产生相应的联系。可以这么理解：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;知识是理论层面，就是大脑接收到的信息。&lt;/li&gt;&#xA;&lt;li&gt;技能是实践层面，就是需要动手将信息有效利用。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;现在计算机技术迭代迅速，计算机行业也是很多大学生争先恐后要去的方向。计算机行业是高薪行业，同时在这个浮躁且急功近利的社会中，大学生往往会更倾向于去选择这样的一个行业，因为未来就业可以相对比较容易，方向多，待遇方面相对较好。但是我们往往在追求功利的时候，我们可能往往变成了一个精致的利己主义者，这样真的是我们大学生学习知识和技能的意义吗？&lt;/p&gt;&#xA;&lt;p&gt;我们为什么学习知识？我们为什么学习技能？&lt;/p&gt;&#xA;&lt;p&gt;学习知识是为了更好的生活，更好的适应环境，毕竟物竞天择，适者生存嘛。但是我们大学应该拥有对于知识和技能更多的认识和见解，这些东西不应该只满足最低的生存需求，我们还有安全需求、归属寻求、自尊需求和自我实现需求。我们大学生，去学习那些知识应该尽可能去满足我们的自我实现需求，而生存需求、安全需求、归属需求等也就是在实现自我价值的过程中得到满足。&lt;/p&gt;&#xA;&lt;p&gt;知识，不仅仅只是书本上面的知识，还生活中的知识，知识就存在于我们身边，我们随处都可以学习。我们是否可以汲取到这些知识，取决于我们自己的内心，我们是否可以做到 “求知若渴，虚心若愚”。&lt;/p&gt;&#xA;&lt;p&gt;技能，不仅仅是枯燥无味的行动方针和工作方式，技能是富有灵魂和活动，是一种朝气蓬勃的动力和激情演绎出的具现化的知识。当我们使用技能的时候，我们应该是非常快乐而且非常愉悦的。&lt;/p&gt;&#xA;&lt;p&gt;我们应该保有我们自己所拥有的灵魂快乐与自我，去追求我们可以去追求的事情呀！&lt;/p&gt;&#xA;&lt;p&gt;“我为什么要那么努力， 因为我喜欢的东西都很贵， 我想去的地方都很远， 我爱的人超完美。”&lt;/p&gt;&#xA;&lt;h2 id=&#34;生活&#34;&gt;生活&lt;/h2&gt;&#xA;&lt;p&gt;生活总的来说，还是比生活艰难的，生活不止是学习，同时生活又在不断的和学习进行交融着，不确定我们究竟是在学习中生活还是在生活中学习。如果泛化学习的概念，学习可以说是无处不在的，到处都可以学习。泛化后的学习的形式不再仅仅局限于读书、记笔记而是展现于感官中的学习，即展现在听、说、读、写、思五个方面。这五个方面的学习可以融入到生活之中，进行相应的学习。那么生活是什么？&lt;/p&gt;&#xA;&lt;p&gt;生活是一个复杂集合体，每个人在生命过程中遇到的任何事情和任何发展以及想法都会扔到生活这个集合体中，但是我们每个人也在生活中，这些事情就会有生活再反馈给我们自身，在生活中遇到困难和烦恼，逃避是不能解决问题，有时候我们必须去面对生活中所产生的种种问题。生活中的问题其实都是由我们而生的，“人是一切社会关系的总和”，生活中的发生的事情，其实就是我们每一个人的社会关系所造成的一种效应。这种效应可能是显式的，也可能是隐式的，由于这种效应的存在。我们在生活中就好似被各种关系所连接的节点，与整个社会中的人群进行着交流和沟通，与他们产生羁绊和牵连。但是关系也只是生活的一个部分，还有一部分是自身因素所产生的，因而，总的来说，生活就是自身因素和自身的社会关系所产生的效应的集合体。&lt;/p&gt;&#xA;&lt;p&gt;我们应该怎样对待生活？自由的支配生活，还是被欲望所支配着看似自由的生活？大学生该如何生活才可以有一个光明的大学生活？这里产生很多问题和很多矛盾，很多大学生在纠结着该如何生活，很多大学生都很想奋进，很想努力去学习更多的知识，好好看看这个美丽的世界。但是，他们很多却被生活的压力和本能的反应所压制，而不知道该如何去正确的生活。正确往往存在于每个人的内心中，是否正确没有固定的标准和准则，准则存在于每个人的心中。&lt;/p&gt;&#xA;&lt;p&gt;很多时候，生活的意义一直在被很多人思考着、追寻着。我们可能并不了解生活究竟有什么样的意义和什么样的价值，仅仅只是将就着，被社会的理念和物质文化所牵动着，很多大学生的生活就被社会所物化，没有本真的活力和本真的激情。青年人，本应该是一种活力四射、激情盎然的样子，那气宇轩昂的志气。&lt;/p&gt;&#xA;&lt;p&gt;生活是年轻一代大学生自己所能做到的存在方式，这种存在方式取决于大学生自己的行为模式和思维模式，同时也影响着他们的模式。&lt;/p&gt;&#xA;&lt;h2 id=&#34;未来&#34;&gt;未来&lt;/h2&gt;&#xA;&lt;p&gt;未来，这是一个多么美好的词汇呀！&lt;/p&gt;&#xA;&lt;p&gt;但是，我们当代大学生或青年人的未来又会是什么样子呢？&lt;/p&gt;&#xA;&lt;p&gt;未来的大学生或青年人可以开心快乐，如果能够拥有足够强大的能力那就非常好了。&lt;/p&gt;&#xA;&lt;p&gt;为什么这样说呢？根据大学生近期情况的信息，不难察觉到当代大学生存在着很多不快乐的倾向，很多大学生都不是快乐的。这几年抑郁症的人群越来越大，而且患抑郁症的人群年龄在下调，人群分布似乎主要在年轻人的范围之内。很多年轻人都是不快乐的，为什么呢？原因可能是社会因素的影响，也可能是网络影响，总之诸多因素的影响下，年轻人面对着诸多的压力和焦虑情绪。而且，很多年轻人还没有完全适应信息时代高速发展所带来的冲击和不适，进而加剧了年轻人的焦虑情绪，而且网络上充斥着不少贩卖焦虑的文章和内容，更近一步加剧了年轻人的焦虑心理。这种心理不断演化、恶化。最终，抑郁症患者频出，抑郁症的患病率逐年升高。&lt;/p&gt;&#xA;&lt;p&gt;因而，开心快乐其实才是人生最美的时光，也是期许未来所能带来的最美好的回馈。&lt;/p&gt;&#xA;&lt;h2 id=&#34;最后&#34;&gt;最后&lt;/h2&gt;&#xA;&lt;p&gt;可能我的想法过于阴暗，过于偏激。可能我自己都不能搞清楚自己究竟是什么样子的恶魔，自己到底是什么样子的存在，也许，只是我看到太多比较阴暗的东西，我的观察角度往往只注意到了当代的大学生或年轻人的很多不足之处，只关注到了他们的阴暗面和阴暗的成分。&lt;/p&gt;&#xA;&lt;p&gt;我也只是一个大学生，我的想法可能也存在着很大的局限性，因为我还不能完全以局外人的身份去观测大学生这个群体。这些内容也仅仅只是我自己的个人见解罢了。&lt;/p&gt;&#xA;&lt;p&gt;我的经历是比较灰暗的，我能够观察到很多灰暗的细节性，虽然这有后期刻意练习观察力有关系吧。我的童年其实是非常静默的时光，我就像是一个隐匿的黑影，没有什么快乐的时光，仅仅只是呆呆地和父母一起生活，和自己生活。我曾经生活中确实是有一段时间，那段时间算是一段比较黄金的时光，那段时光里，我醉心于学习，沉迷于知识，没有太多物化的想法而内心满满只是一种仰望星空的蝶影。那段时间是在我的初中时期，我的高中时期是一个完全不一样的自我，一个从深渊中慢慢爬向另一个阴影中的自我，那时候我在不断不断地蜕变，看到了更多的光同时也看到了更多暗，也看到了完全不一样的世界风光。而进入大学时期，我也在不断地蜕变和改变着自己的生活方式，不断地学习各种个样的知识，去尽量抓住自己想要抓住的信息和知识，以及各种个样的机会。&lt;/p&gt;&#xA;&lt;p&gt;我也希望自己能够有一个比较好的规划，十年或是五年，自己也能有一个美好的梦想，去追逐，去努力实现。这篇文章本来就是写自己未来规划的文章，结果还是有点拖延呢，写着写着就写了很多很多乱七八糟的内容和想法吧。&lt;/p&gt;</description>
    </item>
    <item>
      <title>数学之美,程序之巧</title>
      <link>//localhost:1313/posts/math_and_program/</link>
      <pubDate>Sat, 29 Jan 2022 09:25:11 +0800</pubDate>
      <guid>//localhost:1313/posts/math_and_program/</guid>
      <description>&lt;h1 id=&#34;数学之美程序之巧&#34;&gt;数学之美，程序之巧&lt;/h1&gt;&#xA;&lt;p&gt;计算机程序，简单来说，就是指令和数据的组合。程序可以通过算法组成相应的逻辑系统，逻辑系统可以根据编写者需求来完成各种各样的事情。&lt;/p&gt;&#xA;&lt;p&gt;计算机内部数据处理方式是什么样？&lt;/p&gt;&#xA;&lt;p&gt;这个问题可以从机器语言开始说起，如果要说到机器语言自然就要聊一聊编程语言喽：&lt;/p&gt;&#xA;&lt;p&gt;编程语言（英语：programming language），是用来定义计算机程序的形式语言。它是一种被标准化的交流技巧，用来向计算机发出指令。一种能够让程序员准确地定义计算机所需要使用数据的计算机语言，并精确地定义在不同情况下所应当采取的行动。^1^&lt;/p&gt;&#xA;&lt;p&gt;机器语言是编程语言最初的一个代表，机器语言的表示方式通常是101010的二进制方式，这也是计算机运行最底层的内容和最底层的模块，在101010的运算模式是非常适合计算机进行计算的。编程就是数据和指令的集合，而计算机就是将101010的二进制数字进行运算，计算机的运算方式通常由逻辑运算和算术运算。但是这和数学有什么关系吗？计算机的运算是数学理论产生的产物，集成电路上闪动的光波，跳动的粒子都是多少数学家理论的产物呀！&lt;/p&gt;&#xA;&lt;p&gt;话说回来，机器语言现在几乎都不使用，都在使用高级编程语言。根据现在的情况，编程语言有大致三代。第一代编程语言是机器语言，编写非常复杂。第二代编程语言是汇编语言，编写相对机器语言简单了许多，但是仍然是比较复杂的语言。第三代编程语言是现在非常经常使用的高级编程语言，C语言，C++语言，Java语言等静态语言以及Python，PHP，Ruby，JavaScript等动态语言。发展到第三代编程语言，编程的难度大大降低。&lt;/p&gt;&#xA;&lt;p&gt;但是，编程和数学有什么关系呢？&lt;/p&gt;&#xA;&lt;p&gt;个人认为，编程本身是美的，数学亦是美的。编程的美是基于数学的逻辑，数学的理论和数学中的各种各样的奇妙变换。编程如果接触到了比较底层的内容，也就到了最核心的部分——数据结构和算法，而数据结构和算法很多的知识都是基于数学的思考。这里用算法里面的时间复杂度和数学中的微积分做一下对比：&lt;/p&gt;&#xA;&lt;p&gt;$$&#xA;O(n \cdot \ln:n)&#xA;$$&lt;/p&gt;&#xA;&lt;p&gt;$$&#xA;f(x) =  n \cdot \ln : n&#xA;$$&lt;/p&gt;&#xA;&lt;p&gt;这两个公式是非常相像的，而时间复杂度的比较其实也是基于微积分中极限的概念进行比较的。&lt;/p&gt;&#xA;&lt;p&gt;如果要比较 (O(\ln : n)) 和 (O(n))的时间复杂度，该怎么比较呢？&lt;/p&gt;&#xA;&lt;p&gt;这里可以使用微积分中的无穷小比较来进行比较的，同样是采用微积分中的极限的思想来进行比较的：&lt;/p&gt;&#xA;&lt;p&gt;$$&#xA;\lim_{x \to +\infty} \frac{\ln : n}{n} = 0&#xA;$$&lt;/p&gt;&#xA;&lt;p&gt;这个式子在微积分中是非常常见的概念，通过数学的证明来证明这个结论。根据这个结论就可以非常容易的判断出时间复杂度之间的大小。这是数学在编程算法中的一个应用。通过这个应用可以说明计算机编程和数学之间的微妙关系。&lt;/p&gt;&#xA;&lt;p&gt;进行数学问题研究的人员往往是高深的数学家，而进行计算机编程的人员往往是秃头的程序员，程序员很少研究数学问题，但是程序员也了解一部分数学知识。而数学家和程序员之间又有什么关系呢？&lt;/p&gt;&#xA;&lt;p&gt;程序员是敲代码，负责对功能的实现，是应用方面的。而数学家是解决数学问题的，使用数学优美的证明和严谨的逻辑来证明数学问题，是理论方面的。看起来是没有什么必然的联系，其实进行连接的中介就是计算机科学家，他们负责对计算机理论的研究和算法的创新求解，他们会整合数学家的最新的研究成功并尝试融入到计算机理论中去。程序员可以从计算机理论中的很多相关内容中，进行代码和设计方面的功能实现，优化服务。&lt;/p&gt;&#xA;&lt;p&gt;现在的大时代趋势是万物互联，每个学科都不在是孤立存在的学科，学科之间彼此有着多重的交叉。随着时代的进步，学科交叉应该会越来越明显，而计算机和数学关系是非常密切的，应该会最先进行交叉研究，其实现在已经进行交叉研究了。&lt;/p&gt;&#xA;&lt;p&gt;我个人认为程序员应该是有一种对于数学的热爱，看到数学优美的证明会心生惊叹，面对数学问题会竭尽全力去攻克数学问题。其实这其实也是程序员对于程序和代码的一种态度，一种专业素养。程序员往往都会追求完美，希望程序可以不断优化不断进行完善，更少的BUG，更高的性能。这无非不是对于数学赞扬和感叹。&lt;/p&gt;&#xA;&lt;p&gt;数学之美，程序之巧，尽展心中，会现颅内。&lt;/p&gt;&#xA;&lt;h3 id=&#34;参考&#34;&gt;参考&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://wiwiki.kfd.me/wiki/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80&#34;&gt;编程语言-维基百科&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;闲聊到此为止，来喝杯茶可好？&lt;/p&gt;</description>
    </item>
    <item>
      <title>浅谈椭圆曲线加密算法(ECC)</title>
      <link>//localhost:1313/posts/ecc_startup/</link>
      <pubDate>Sat, 29 Jan 2022 09:22:23 +0800</pubDate>
      <guid>//localhost:1313/posts/ecc_startup/</guid>
      <description>&lt;h1 id=&#34;浅谈椭圆曲线加密算法ecc&#34;&gt;浅谈椭圆曲线加密算法（ECC）&lt;/h1&gt;&#xA;&lt;p&gt;椭圆曲线加密算法是近十年提出的一个非对称加密算法，这个加密算法非常复杂，加密的数据具有良好的保密性。加密效果比RSA加密算法都高。这次不可能全部将ECC加密算法讲完，只能简单聊聊ECC加密算法的基本概念和ECC加密算法的数学基础了。&lt;/p&gt;&#xA;&lt;p&gt;什么是ECC加密算法？&lt;/p&gt;&#xA;&lt;p&gt;椭圆曲线密码学（英语：Elliptic Curve Cryptography，缩写：ECC）是一种基于椭圆曲线数学的公开密钥加密算法。椭圆曲线在密码学中的使用是在1985年由Neal Koblitz（英语：Neal Koblitz）和Victor Miller（英语：Victor Miller）分别独立提出的。&lt;/p&gt;&#xA;&lt;p&gt;ECC的主要优势是它相比RSA加密算法使用较小的密钥长度并提供相当等级的安全性[1]。ECC的另一个优势是可以定义群之间的双线性映射，基于Weil对或是Tate对；双线性映射已经在密码学中发现了大量的应用，例如基于身份的加密。^1^&lt;/p&gt;&#xA;&lt;p&gt;椭圆曲线加密算法，简称ECC，是基于椭圆曲线数学理论实现的一种非对称加密算法。相比RSA，ECC优势是可以使用更短的密钥，来实现与RSA相当或更高的安全，RSA加密算法也是一种非对称加密算法，在公开密钥加密和电子商业中RSA被广泛使用。据研究，160位ECC加密安全性相当于1024位RSA加密，210位ECC加密安全性相当于2048位RSA加密（有待考证）。^2^&lt;/p&gt;&#xA;&lt;p&gt;ECC加密算法需要的数学理论基础相对来说是比较高的层次方面，远比RSA的数学难度高。看来，数学上层理论的基础是对密码学产生了比较大的影响。下面，来简单聊聊数学基础吧。&lt;/p&gt;&#xA;&lt;h3 id=&#34;数学基础&#34;&gt;数学基础&lt;/h3&gt;&#xA;&lt;h4 id=&#34;阿贝尔群&#34;&gt;阿贝尔群&lt;/h4&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;刚看到这个的时候，我的第一反应是：这是什么东西？（一脸懵逼）&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;阿贝尔群其实就是针对椭圆曲线的概念抽象的一个群，简单来说就是针对椭圆曲线的加减乘除规则。概念的变换，就像刚开始学习微积分的加减乘除规则转换到矩阵的加减乘除规律一样。群其实就是一种推广的矩阵。那么，阿贝尔群定义了些什么有趣的东西呢？&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;封闭性：如果$ a $和$ b $ 都是阿贝尔群的成员，那么 $ a + b $ 也是阿贝尔群的成员&lt;/li&gt;&#xA;&lt;li&gt;结合律：$ (a+b)+c=a+(b+c) $&lt;/li&gt;&#xA;&lt;li&gt;单位元：如果$ a+0=0+a=a $，则 $ 0 $就是单位元&lt;/li&gt;&#xA;&lt;li&gt;逆元：对于任意值$ a $必定存在$ b $，使得$ a+b=0 $&lt;/li&gt;&#xA;&lt;li&gt;交换律：$ a + b = b + a $&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;根据这个定义整数集是个阿贝尔群。&lt;/p&gt;&#xA;&lt;h4 id=&#34;椭圆曲线的数学性质&#34;&gt;椭圆曲线的数学性质&lt;/h4&gt;&#xA;&lt;h5 id=&#34;加法&#34;&gt;加法&lt;/h5&gt;&#xA;&lt;p&gt;过曲线上的两点$ A $、$ B $画一条直线，找到直线与椭圆曲线的交点，交点关于$ x $轴对称位置的点，定义为$ A+B $，即为加法。&lt;/p&gt;&#xA;&lt;h5 id=&#34;二倍运算&#34;&gt;二倍运算&lt;/h5&gt;&#xA;&lt;p&gt;上述方法无法解释$ A + A $，即两点重合的情况，因此在这种情况下，将椭圆曲线在$ A $点的切线，与椭圆曲线的交点，交点关于$ x $轴对称位置的点，定义为$ A + A $，即$ 2A $，即为二倍运算。&lt;/p&gt;</description>
    </item>
    <item>
      <title>进程与线程</title>
      <link>//localhost:1313/posts/process_and_threads/</link>
      <pubDate>Sat, 29 Jan 2022 09:20:55 +0800</pubDate>
      <guid>//localhost:1313/posts/process_and_threads/</guid>
      <description>&lt;h1 id=&#34;进程与线程的理解&#34;&gt;进程与线程的理解&lt;/h1&gt;&#xA;&lt;p&gt;个人对于进程和线程概念的理解，可能会有些偏差&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;进程（Process）是计算机中的程序关于某数据集合上的一次运行活动，是系统进行资源分配和调度的基本单位，是&lt;a href=&#34;https://baike.baidu.com/item/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F&#34;&gt;操作系统&lt;/a&gt;结构的基础。^1^&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;线程&lt;/strong&gt;（英语：thread）是&lt;a href=&#34;https://baike.baidu.com/item/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F&#34;&gt;操作系统&lt;/a&gt;能够进行运算&lt;a href=&#34;https://baike.baidu.com/item/%E8%B0%83%E5%BA%A6&#34;&gt;调度&lt;/a&gt;的最小单位。它被包含在&lt;a href=&#34;https://baike.baidu.com/item/%E8%BF%9B%E7%A8%8B&#34;&gt;进程&lt;/a&gt;之中，是&lt;a href=&#34;https://baike.baidu.com/item/%E8%BF%9B%E7%A8%8B&#34;&gt;进程&lt;/a&gt;中的实际运作单位。^2^&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;百度百科上面的解释是一种比较抽象的解释，看了不是非常容易理解。&lt;/p&gt;&#xA;&lt;p&gt;可以进程的概念和线程的概念联系到一起进行理解&lt;/p&gt;&#xA;&lt;p&gt;首先明确一下进程的概念：&lt;/p&gt;&#xA;&lt;p&gt;“进程是数据集合的运行运动”，这句话简单来说就是将数据进行整合的封装成一个又个文件，而这些文件就是模块。&lt;/p&gt;&#xA;&lt;p&gt;“线程是操作系统能够进行运算调度的最小单位”，这句话简单来说就是线程把各种文件模块跑起来的单位。&lt;/p&gt;&#xA;&lt;h2 id=&#34;这就需要了解一下一个程序是如何跑起来的了&#34;&gt;这就需要了解一下一个程序是如何跑起来的了？&lt;/h2&gt;&#xA;&lt;p&gt;一个程序要运行起来需要创建进程，**所有的进程都是别的进程创建的（第一个进程是由操作系统内核创建的）**都是由explorer.exe这个进程创建的。&lt;/p&gt;&#xA;&lt;p&gt;Explorer是怎么创建进程的？&lt;/p&gt;&#xA;&lt;p&gt;它调用了一个函数：&lt;code&gt;CreateProcess()&lt;/code&gt;，把我们的程序变成了进程&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;CreateProcess&lt;/code&gt;怎么把一个程序变成进程的？&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;映射exe文件&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;创建内核对象EPROCESS&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;映射系统DLL(ntdll.dll)&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;创建线程内核对象ETHREAD&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;系统启动线程&lt;/p&gt;&#xA;&lt;p&gt;5.1 映射DLL(ntdll.LdrlnitializeThunk)&lt;/p&gt;&#xA;&lt;p&gt;5.2 线程开始执行&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;进程提供代码、资源、数据等，使用这些东西的都是线程，不然它就是一个死的&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h2 id=&#34;那么该怎么去理解进程和线程&#34;&gt;那么该怎么去理解进程和线程&lt;/h2&gt;&#xA;&lt;p&gt;我个人找到了几个理解线程和进程的角度：&lt;/p&gt;&#xA;&lt;h3 id=&#34;生物学的角度&#34;&gt;生物学的角度&lt;/h3&gt;&#xA;&lt;p&gt;参考有丝分裂的过程来进行进程与线程的理解&lt;/p&gt;&#xA;&lt;p&gt;根据高中生物学的基础知识来理解，我们都知道生物的有丝分裂的过程是一个高中生物学非常基本的分裂过程。有丝分裂主要分为两个重要的时期，分裂间期和分裂期。根据最基本的高中生物知识可以很容易地知道，分裂间期需要准备资源的过程，也就是蛋白质和DNA复制的过程。分裂期也就是利用资源进行分裂的过程。&lt;/p&gt;&#xA;&lt;p&gt;我们可以这样理解进程和线程，进程提供代码、资源、数据。线程进行程序的运算。仔细观察线程和进程是不是和生物学中的有丝分裂的分裂间期和分裂期。&lt;/p&gt;&#xA;&lt;p&gt;我们可以把有丝分裂的分裂间期来看作进程的过程，把有丝分裂的分裂期来看作线程的过程。&lt;/p&gt;&#xA;&lt;p&gt;这样进行类比，对于进程和线程的理解就非常清晰了。&lt;/p&gt;&#xA;&lt;h3 id=&#34;面向对象的角度&#34;&gt;面向对象的角度&lt;/h3&gt;&#xA;&lt;p&gt;面向对象的思想是现代编程的一个重要思想，通过面向对象的概念可以比较清晰地理解进程和线程的关系。&lt;/p&gt;&#xA;&lt;p&gt;面向对象是一种抽象的思维过程，有几个比较关键的概念，类，构造函数，析构函数，实例化。在编程过程中，会经常使用到面向对象的思想。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;MyObj&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; var &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    MyObj() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        var &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;run&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        std&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;cout &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;the program running!&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; std&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;endl;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt;MyObj() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        var &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;};&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;(){&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    MyObj&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; obj &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; MyObj();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    obj&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;run();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这是C++中简单的对象格式。&lt;/p&gt;</description>
    </item>
    <item>
      <title>杯茗藏香，君闻几何</title>
      <link>//localhost:1313/posts/crypto_startup/</link>
      <pubDate>Sat, 29 Jan 2022 08:07:30 +0800</pubDate>
      <guid>//localhost:1313/posts/crypto_startup/</guid>
      <description>&lt;h1 id=&#34;杯茗藏香君闻几何&#34;&gt;杯茗藏香，君闻几何&lt;/h1&gt;&#xA;&lt;h2 id=&#34;浅谈密码学&#34;&gt;“浅谈密码学”&lt;/h2&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;密文寥寥，清茶袅袅。&lt;/p&gt;&#xA;&lt;p&gt;杯杯入境，字字明心。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;密码学是主要研究密码编码和解码的一种学科，主要目标是提供在不安全的信道上的安全通信机制^1^&lt;/p&gt;&#xA;&lt;p&gt;根据OWASP上面的定义来开启我们的闲聊。“密码学是主要研究密码编码和解码的一种学科”，这里有两个比较关键的词汇。密码编码和解码，密码比较好理解。平时我们注册一个账户的时候通常就需要一个密码来进行登入，密码和账户构成了网络账户的基本符号。那么，编码和解码又该怎么理解呢？&lt;/p&gt;&#xA;&lt;p&gt;编码是信息从一种形式或格式转换为另一种形式的过程，也称为计算机编程语言的代码简称编码。^2^&lt;/p&gt;&#xA;&lt;p&gt;编码，简单来说就是对内容进行编制，来确保内容不会影响到互联网整体的传输过程。在互联网中，数据传输通常是采用http，ftp，https等协议进行传输的。这些协议中也会有些特殊的字符有特殊的功能性作用，如果不进行编码，可能会出现预期之外的事故。当然编码也有一些安全性的作用，可以确保数据传输过程中数据不是特别明显的暴露，有较大的截获风险。&lt;/p&gt;&#xA;&lt;p&gt;编码是互联网中不可或缺的一种数据处理方式。&lt;/p&gt;&#xA;&lt;p&gt;解码是一种用特定方法，把数码还原成它所代表的内容或将电脉冲信号、光信号、无线电波等转换成它所代表的信息、数据等的过程。解码是受传者将接受到的符号或代码还原为信息的过程，与编码过程相对应。^3^&lt;/p&gt;&#xA;&lt;p&gt;解码，就是将编码的内容进行还原的过程。意思很明了，在互联网中一般会将解码后的信息展示给用户，在数据传输的过程中，将数据进行编码传输。为什么这样做？一方面是为了用户的使用体验，另一方面是为了数据传输的正常进行和安全性保障。&lt;/p&gt;&#xA;&lt;p&gt;OWASP的密码学定义相对来说是比较狭义的，只对互联网中的简单过程进行了定义，将密码学研究的范围缩小了。&lt;/p&gt;&#xA;&lt;p&gt;那么，密码学是什么呢？&lt;/p&gt;&#xA;&lt;p&gt;密码学，就是将OWASP对于密码学的定义进行推广和扩充。编码不仅仅限制于互联网、计算机领域中，解码也不仅仅仅限于互联网、计算机领域方面。编码就变成了加密的一个子集，解码就变成了解密的一个子集。加密前的数据就有了一个比较完整的概念，即明文。加密后的数据也有了一个名字叫密文。进行加密的工具叫做密钥。这些是密码学的基础性的概念。这些概念和体系形成了密码学的大集体。&lt;/p&gt;&#xA;&lt;p&gt;下面是百度百科给出的对于密码学的具体定义和描述。&lt;/p&gt;&#xA;&lt;p&gt;密码学（在西欧语文中，源于希腊语kryptós“隐藏的”，和gráphein“书写”）是研究如何隐密地传递信息的学科。在现代特别指对信息以及其传输的数学性研究，常被认为是数学和计算机科学的分支，和信息论也密切相关。著名的密码学者Ron Rivest解释道：“密码学是关于如何在敌人存在的环境中通讯”，自工程学的角度，这相当于密码学与纯数学的异同。密码学是信息安全等相关议题，如认证、访问控制的核心。密码学的首要目的是隐藏信息的涵义，并不是隐藏信息的存在。密码学也促进了计算机科学，特别是在于电脑与网络安全所使用的技术，如访问控制与信息的机密性。密码学已被应用在日常生活：包括自动柜员机的芯片卡、电脑使用者存取密码、电子商务等等。^4^&lt;/p&gt;&#xA;&lt;p&gt;密码学不仅仅只是计算机领域的内容，也是一种比较多元化的体系，但是主要应用于计算机领域。密码学会涉及到很多与数学相关联的知识体系，从微积分到线性代数、概率论以及离散数学，再从线性代数到抽象代数，再从抽象代数到数论。几乎数学方面比较难的模块都涉及到了密码学中，仿佛富有丰富的能量和特别的活力。&lt;/p&gt;&#xA;&lt;p&gt;这回只是对密码学的初步探索和学习，有时候知识都是相通的，都是彼此有联系的存在。密码学何尝不是呢？喝杯茶其实也是种生活种的密码学。&lt;/p&gt;&#xA;&lt;p&gt;密码学有密文和明文，茶叶中有遗传密码和表现型，有香气分子和味觉感受。密码学应该是和生物学一样，是非常beautiful的学科，一定非常好玩！&lt;/p&gt;&#xA;&lt;p&gt;请君先闻龙井香，道出多少古时芳。&lt;/p&gt;&#xA;&lt;h2 id=&#34;参考&#34;&gt;参考：&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://www.owasp.org.cn/https://baike.baidu.com/item/%E7%BC%96%E7%A0%81/80092https://baike.baidu.com/item/%E8%A7%A3%E7%A0%81&#34;&gt;http://www.owasp.org.cn/&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://www.owasp.org.cn/https://baike.baidu.com/item/%E7%BC%96%E7%A0%81/80092https://baike.baidu.com/item/%E8%A7%A3%E7%A0%81&#34;&gt;https://baike.baidu.com/item/%E7%BC%96%E7%A0%81/80092&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://www.owasp.org.cn/https://baike.baidu.com/item/%E7%BC%96%E7%A0%81/80092https://baike.baidu.com/item/%E8%A7%A3%E7%A0%81&#34;&gt;https://baike.baidu.com/item/%E8%A7%A3%E7%A0%81&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://baike.baidu.com/item/%E5%AF%86%E7%A0%81%E5%AD%A6&#34;&gt;https://baike.baidu.com/item/%E5%AF%86%E7%A0%81%E5%AD%A6&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;闲聊到此为止，来喝杯茶可好？&lt;/p&gt;</description>
    </item>
    <item>
      <title>一花一世界，一码一千秋</title>
      <link>//localhost:1313/posts/reverse_startup/</link>
      <pubDate>Sat, 29 Jan 2022 08:02:58 +0800</pubDate>
      <guid>//localhost:1313/posts/reverse_startup/</guid>
      <description>&lt;h1 id=&#34;一花一世界一码一千秋&#34;&gt;一花一世界，一码一千秋&lt;/h1&gt;&#xA;&lt;h2 id=&#34;逆向工程初步&#34;&gt;”逆向工程初步“&lt;/h2&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;逆向工程应该是一门优雅的艺术，而不是一些低层次者手中的粗陋工具；&lt;/p&gt;&#xA;&lt;p&gt;逆向工程的目的是学习与再利用；&lt;/p&gt;&#xA;&lt;p&gt;逆向工程的精神是“自由”。&lt;/p&gt;&#xA;&lt;p&gt;《加密与解密》&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h3 id=&#34;什么是逆向工程&#34;&gt;什么是逆向工程？&lt;/h3&gt;&#xA;&lt;p&gt;逆向工程（Reverse engineering），又称反向工程，是一种技术过程，即对一项目标产品进行逆向分析及研究，从而演绎并得出该产品的处理流程、组织结构、功能性能规格等设计要素，以制作出功能相近，但又不完全一样的产品。逆向工程源于商业及军事领域中的硬件分析。其主要目的是，在无法轻易获得必要的生产信息下，直接从成品的分析，推导产品的设计原理。^1^&lt;/p&gt;&#xA;&lt;p&gt;通俗来讲，逆向工程就是将机器才能够懂的机器代码（0101二进制代码）翻译成人能够读懂的代码（汇编、smali代码）。 但实际情况往往是，我们只寻找关键的代码去翻译或仅了解其业务逻辑，因为要将所有的机器代码翻译出来，工作量是极其巨大的且繁琐的。^2^&lt;/p&gt;&#xA;&lt;p&gt;逆向技术在实际业务中一般应用于以下几个方面：二进制漏洞挖掘、软件破解、恶意代码分析、竞品分析等。&lt;/p&gt;&#xA;&lt;p&gt;逆向工程涉及的知识面非常广，从计算机基础原理到计算机架构，再到各种编程语言的编译原理。逆向工程往往需要对算法进行逆向，对操作系统架构进行逆向，这就要求逆向工程师有不错的算法水平，而且对计算机相关的原理深入理解。&lt;/p&gt;&#xA;&lt;p&gt;一个逆向工程大师，也许具有如下特征。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;永远保持好奇心，崇尚自由——既能促使探索，也能抵抗商业利益和欲望的侵袭。有了它，枯燥的代码世界才有了生气。&lt;/li&gt;&#xA;&lt;li&gt;勤奋与毅力。在一篇关于逆向的文章中有这样的语句：“让我们搞清楚作为一名逆向工作者需要具备的基本条件，其实那并不是扎实的汇编功底和编程基础——可以完全不懂这些，秘诀就是勤奋加上执着！记住并做到这两点，你一样可以变得优秀。”&lt;/li&gt;&#xA;&lt;li&gt;精通至少一门编程语言——不仅仅是代码，更重要的是编程思想。&lt;/li&gt;&#xA;&lt;li&gt;扎实的汇编功底和系统编程知识。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;基础知识&#34;&gt;基础知识&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;汇编语言&lt;/li&gt;&#xA;&lt;li&gt;C语言&lt;/li&gt;&#xA;&lt;li&gt;一门脚本语言(Python)&lt;/li&gt;&#xA;&lt;li&gt;Windows核心编程&lt;/li&gt;&#xA;&lt;li&gt;PE文件格式&lt;/li&gt;&#xA;&lt;li&gt;程序加载流程&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h3 id=&#34;基础工具&#34;&gt;基础工具&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;查壳工具（DIE、PEID、EXEINFO、LordPE、ResourceHacker等）&lt;/li&gt;&#xA;&lt;li&gt;常用脱壳工具或脱壳脚本（专属壳的脱壳器例如upx等、各种壳的脱壳脚本）&lt;/li&gt;&#xA;&lt;li&gt;十六进制编辑器（010Editor、winhex等）&lt;/li&gt;&#xA;&lt;li&gt;反汇编工具（IDA、Hopper）&lt;/li&gt;&#xA;&lt;li&gt;调试器（Ollydbg、gdb、windbg等）&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;这些都是比较常用的逆向工具。其中特别要熟练使用IDA与Ollydbg，IDA一般用来做静态分析，其中的F5功能更是强大到没朋友，新手必备。Ollydbg简称OD一般用来做动态调试使用，两者结合使用堪比倚天剑和屠龙刀，可谓是神挡杀神佛挡杀佛。^3^&lt;/p&gt;&#xA;&lt;h3 id=&#34;逆向的分类&#34;&gt;逆向的分类&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;解释型语言的逆向&lt;/li&gt;&#xA;&lt;li&gt;编译型语言的逆向&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;分析手段&#34;&gt;分析手段&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;静态分析&lt;/li&gt;&#xA;&lt;li&gt;动态分析&lt;/li&gt;&#xA;&lt;li&gt;网络流量分析&lt;/li&gt;&#xA;&lt;li&gt;猜&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h4 id=&#34;静态分析&#34;&gt;静态分析&lt;/h4&gt;&#xA;&lt;p&gt;将机器代码反汇编成方便人类理解的代码，如smali代码（Java）、汇编代码或汇编代码翻译的C语言伪代码等等，通过分析这些比较低级的编程语言的代码，找到程序的业务流程或设计逻辑。&lt;/p&gt;&#xA;&lt;h4 id=&#34;动态分析&#34;&gt;动态分析&lt;/h4&gt;&#xA;&lt;p&gt;通过断点调试手段，让程序单步执行进行分析。动态分析往往是在静态分析出一定的结果的基础上进行，找到合适的地方给代码打断点，即时地读取当前变量的值，来进一步分析程序的逻辑、获取程序关系数据。&lt;/p&gt;&#xA;&lt;h4 id=&#34;网络流量分析&#34;&gt;网络流量分析&lt;/h4&gt;&#xA;&lt;p&gt;通过代理方式或者其他方式，截取程序与服务器通信的数据流量（抓包），来分析客户端和服务端的通信协议。网络流量分析比较有局限性，若客户端使用&lt;em&gt;Http&lt;/em&gt;这种明文传输的协议，会比较容易分析；但如果客户端使用SSL、&lt;em&gt;Https&lt;/em&gt;等加密传输协议与服务端进行通信，那么抓包的前提是需要拿到服务端下发给客户端的证书才能进一步解密分析，这种情况下就比较棘手。网上有方案通过安装插件拿到Chrome或者Firefox浏览器的本地证书，但只适用于客户端是网页的情况。若其他大佬有好的宝贵经验，还望能指点迷津。&lt;/p&gt;&#xA;&lt;h4 id=&#34;猜&#34;&gt;猜&lt;/h4&gt;&#xA;&lt;p&gt;猜测的前提是，你需要有一定的编程经验，能够在逆向分析出一些代码后，对其上下的代码进行合理的推测，推测不出来的代码再通过以上手段分析。可以这么说，你的推测能力决定了你的逆向分析效率，而编程经验则是你猜测能力的基石。&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;逆向工程的学习是一条漫长的道路，每一个逆向工程师都是一个优秀的开发者，只不过他们选择去挑战更有深度，更有趣味的事情。加密与解密，解开每一段代码的意味，看到软件背后潜藏的世界，正所谓，一花一世界，一码一千秋嘛。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h3 id=&#34;参考&#34;&gt;参考&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://wiwiki.kfd.me/wiki/%E9%80%86%E5%90%91%E5%B7%A5%E7%A8%8B&#34;&gt;逆向工程-维基百科&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/148099666&#34;&gt;逆向工程入门概述-知乎&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.freebuf.com/column/225999.html&#34;&gt;CTF逆向选手入坑指南-FreeBuf&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;闲聊到此为止，来喝杯茶可好？&lt;/p&gt;</description>
    </item>
    <item>
      <title>About</title>
      <link>//localhost:1313/about/</link>
      <pubDate>Sat, 29 Jan 2022 07:49:41 +0800</pubDate>
      <guid>//localhost:1313/about/</guid>
      <description>&lt;p&gt;一个废柴学习者，尝试去探索密码学的国度和逆向工程的世界，盼望着可以去遨游在病毒的世界，用心去透析计算机底层的奥秘与神奇。&lt;/p&gt;&#xA;&lt;p&gt;这里就是我这个废柴的记录空间，欢迎到访。&lt;/p&gt;</description>
    </item>
    <item>
      <title>XCTF REVERSE Expert (3) Writeup</title>
      <link>//localhost:1313/posts/xctf-reverse-expert-3_writeup/</link>
      <pubDate>Fri, 28 Jan 2022 19:34:08 +0800</pubDate>
      <guid>//localhost:1313/posts/xctf-reverse-expert-3_writeup/</guid>
      <description>&lt;h1 id=&#34;xctf-reverse-高手区-3-writeup&#34;&gt;XCTF-REVERSE-高手区-3 writeup&lt;/h1&gt;&#xA;&lt;p&gt;继续玩一玩逆向的题目，感觉还是蛮有意思的。&lt;/p&gt;&#xA;&lt;h2 id=&#34;0x0-srm-50&#34;&gt;0x0 srm-50&lt;/h2&gt;&#xA;&lt;p&gt;使用DIE进行探测：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img alt=&#34;image-20211103093725322&#34; src=&#34;//localhost:1313/images/XCTF-REVERSE-expert-3_writeup/image-20211103093725322.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;32位PE程序，无壳。可以尝试运行一下：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img alt=&#34;image-20211103093811981&#34; src=&#34;//localhost:1313/images/XCTF-REVERSE-expert-3_writeup/image-20211103093811981.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;应该是一个邮箱破解的程序，终于有点稍微有意思的题目了&lt;/p&gt;&#xA;&lt;p&gt;首先进行静态分析看代码：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img alt=&#34;image-20211103094139950&#34; src=&#34;//localhost:1313/images/XCTF-REVERSE-expert-3_writeup/image-20211103094139950.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;根据WIN32的编程基础，关键函数应该是在&lt;code&gt;DialogFunc&lt;/code&gt;中，登录的细节应该是在&lt;code&gt;DialogFunc&lt;/code&gt;中。&lt;/p&gt;&#xA;&lt;p&gt;跟进&lt;code&gt;DialogFunc&lt;/code&gt;函数，来寻找更多的细节&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;INT_PTR &lt;span style=&#34;color:#66d9ef&#34;&gt;__stdcall&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;DialogFunc&lt;/span&gt;(HWND hDlg, UINT a2, WPARAM a3, LPARAM a4)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  HMODULE v5; &lt;span style=&#34;color:#75715e&#34;&gt;// eax&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  HICON v6; &lt;span style=&#34;color:#75715e&#34;&gt;// eax&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  HMODULE v7; &lt;span style=&#34;color:#75715e&#34;&gt;// eax&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  HWND v8; &lt;span style=&#34;color:#75715e&#34;&gt;// eax&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  HCURSOR v9; &lt;span style=&#34;color:#75715e&#34;&gt;// [esp-4h] [ebp-34Ch]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  CHAR String[&lt;span style=&#34;color:#ae81ff&#34;&gt;256&lt;/span&gt;]; &lt;span style=&#34;color:#75715e&#34;&gt;// [esp+8h] [ebp-340h] BYREF&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  CHAR v11[&lt;span style=&#34;color:#ae81ff&#34;&gt;256&lt;/span&gt;]; &lt;span style=&#34;color:#75715e&#34;&gt;// [esp+108h] [ebp-240h] BYREF&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  CHAR Text[&lt;span style=&#34;color:#ae81ff&#34;&gt;256&lt;/span&gt;]; &lt;span style=&#34;color:#75715e&#34;&gt;// [esp+208h] [ebp-140h] BYREF&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;char&lt;/span&gt; Source[&lt;span style=&#34;color:#ae81ff&#34;&gt;60&lt;/span&gt;]; &lt;span style=&#34;color:#75715e&#34;&gt;// [esp+308h] [ebp-40h] BYREF&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; ( a2 &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;16&lt;/span&gt; )&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;EndDialog&lt;/span&gt;(hDlg, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; ( a2 &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;272&lt;/span&gt; )&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    v5 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;GetModuleHandleW&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    v6 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;LoadIconW&lt;/span&gt;(v5, (LPCWSTR)&lt;span style=&#34;color:#ae81ff&#34;&gt;0x67&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;SetClassLongA&lt;/span&gt;(hDlg, &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;14&lt;/span&gt;, (LONG)v6);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    v7 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;GetModuleHandleW&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    v9 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;LoadCursorW&lt;/span&gt;(v7, (LPCWSTR)&lt;span style=&#34;color:#ae81ff&#34;&gt;0x66&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    v8 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;GetDlgItem&lt;/span&gt;(hDlg, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;SetClassLongA&lt;/span&gt;(v8, &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt;, (LONG)v9);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; ( a2 &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;273&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;||&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;unsigned&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;__int16&lt;/span&gt;)a3 &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; )&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;memset&lt;/span&gt;(String, (&lt;span style=&#34;color:#66d9ef&#34;&gt;unsigned&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;__int16&lt;/span&gt;)a3 &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;sizeof&lt;/span&gt;(String));&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;memset&lt;/span&gt;(v11, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;sizeof&lt;/span&gt;(v11));&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;memset&lt;/span&gt;(Text, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;sizeof&lt;/span&gt;(Text));&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;GetDlgItemTextA&lt;/span&gt;(hDlg, &lt;span style=&#34;color:#ae81ff&#34;&gt;1001&lt;/span&gt;, String, &lt;span style=&#34;color:#ae81ff&#34;&gt;256&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;GetDlgItemTextA&lt;/span&gt;(hDlg, &lt;span style=&#34;color:#ae81ff&#34;&gt;1002&lt;/span&gt;, v11, &lt;span style=&#34;color:#ae81ff&#34;&gt;256&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; ( &lt;span style=&#34;color:#a6e22e&#34;&gt;strstr&lt;/span&gt;(String, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;@&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;strstr&lt;/span&gt;(String, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;.&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;strstr&lt;/span&gt;(String, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;.&amp;#34;&lt;/span&gt;)[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;strstr&lt;/span&gt;(String, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;@&amp;#34;&lt;/span&gt;)[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;46&lt;/span&gt; )&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;strcpy&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;Source[&lt;span style=&#34;color:#ae81ff&#34;&gt;36&lt;/span&gt;], &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Registration failure.&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;strcpy&lt;/span&gt;(Source, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Registration Success!&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Your flag is:&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; ( &lt;span style=&#34;color:#a6e22e&#34;&gt;strlen&lt;/span&gt;(v11) &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;16&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; v11[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;67&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; v11[&lt;span style=&#34;color:#ae81ff&#34;&gt;15&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;88&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; v11[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;90&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; v11[&lt;span style=&#34;color:#ae81ff&#34;&gt;14&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;65&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; v11[&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;57&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; v11[&lt;span style=&#34;color:#ae81ff&#34;&gt;13&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;98&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; v11[&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; v11[&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;55&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; v11[&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;109&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; v11[&lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;71&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; v11[&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;113&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; v11[&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;57&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; v11[&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;52&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; v11[&lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;103&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; v11[&lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;99&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; v11[&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;56&lt;/span&gt; )&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#a6e22e&#34;&gt;strcpy_s&lt;/span&gt;(Text, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x100u&lt;/span&gt;, Source);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#a6e22e&#34;&gt;strcat_s&lt;/span&gt;(Text, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x100u&lt;/span&gt;, v11);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#a6e22e&#34;&gt;strcpy_s&lt;/span&gt;(Text, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x100u&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;Source[&lt;span style=&#34;color:#ae81ff&#34;&gt;36&lt;/span&gt;]);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;strcpy_s&lt;/span&gt;(Text, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x100u&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Your E-mail address in not valid.&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;MessageBoxA&lt;/span&gt;(hDlg, Text, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Registeration&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x40u&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;flag直接展示的非常清晰了：&lt;/p&gt;</description>
    </item>
    <item>
      <title>XCTF REVERSE Expert (2) Writeup</title>
      <link>//localhost:1313/posts/xctf-reverse-expert-2_writeup/</link>
      <pubDate>Fri, 28 Jan 2022 19:33:59 +0800</pubDate>
      <guid>//localhost:1313/posts/xctf-reverse-expert-2_writeup/</guid>
      <description>&lt;h1 id=&#34;xctf-reverse-高手区-2-writeup&#34;&gt;XCTF-REVERSE-高手区-2 writeup&lt;/h1&gt;&#xA;&lt;p&gt;感觉攻防世界的逆向题目还是蛮有意思的，刷着玩玩，就当作闯关游戏一样！&lt;/p&gt;&#xA;&lt;h2 id=&#34;0x0-easyre&#34;&gt;0x0 EasyRE&lt;/h2&gt;&#xA;&lt;p&gt;使用DIE查看一下程序信息：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img alt=&#34;image-20211101090530961&#34; src=&#34;//localhost:1313/images/XCTF-REVERSE-expert-2_writeup/image-20211101090530961.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;无壳32位程序，直接静态分析走起！&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;__cdecl&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; argc, &lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;char&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;**&lt;/span&gt;argv, &lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;char&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;**&lt;/span&gt;envp)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;unsigned&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; v3; &lt;span style=&#34;color:#75715e&#34;&gt;// kr00_4&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; v4; &lt;span style=&#34;color:#75715e&#34;&gt;// edx&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;char&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;v5; &lt;span style=&#34;color:#75715e&#34;&gt;// esi&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;char&lt;/span&gt; v6; &lt;span style=&#34;color:#75715e&#34;&gt;// al&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;unsigned&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; i; &lt;span style=&#34;color:#75715e&#34;&gt;// edx&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; v8; &lt;span style=&#34;color:#75715e&#34;&gt;// eax&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;char&lt;/span&gt; Arglist[&lt;span style=&#34;color:#ae81ff&#34;&gt;16&lt;/span&gt;]; &lt;span style=&#34;color:#75715e&#34;&gt;// [esp+2h] [ebp-24h] BYREF&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;__int64&lt;/span&gt; v11; &lt;span style=&#34;color:#75715e&#34;&gt;// [esp+12h] [ebp-14h] BYREF&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; v12; &lt;span style=&#34;color:#75715e&#34;&gt;// [esp+1Ah] [ebp-Ch]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;__int16&lt;/span&gt; v13; &lt;span style=&#34;color:#75715e&#34;&gt;// [esp+1Eh] [ebp-8h]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;sub_401020&lt;/span&gt;(Format, Arglist[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;]);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  v12 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  v13 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;(_OWORD &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;)Arglist &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;i64;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  v11 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;i64;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;sub_401050&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;, (&lt;span style=&#34;color:#66d9ef&#34;&gt;char&lt;/span&gt;)Arglist);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  v3 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;strlen&lt;/span&gt;(Arglist);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; ( v3 &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0x10&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; v3 &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;24&lt;/span&gt; )&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    v4 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    v5 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;char&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;v11 &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      v6 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;v5&lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      byte_40336C[v4&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; v6;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; ( v4 &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;24&lt;/span&gt; );&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; ( i &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;; i &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0x18&lt;/span&gt;; &lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;i )&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      byte_40336C[i] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; (byte_40336C[i] &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;^&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    v8 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;strcmp&lt;/span&gt;(byte_40336C, aXircjR2twsv3pt);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; ( v8 )&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      v8 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; v8 &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; ( &lt;span style=&#34;color:#f92672&#34;&gt;!&lt;/span&gt;v8 )&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#a6e22e&#34;&gt;sub_401020&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;right&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;, Arglist[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;]);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#a6e22e&#34;&gt;system&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;pause&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;看代码，应该是比较简单的。但是需要对代码进行相对比较仔细的审计，来确保代码审计的成功&lt;/p&gt;</description>
    </item>
    <item>
      <title>XCTF REVERSE Expert (1) Writeup</title>
      <link>//localhost:1313/posts/xctf-reverse-expert-1_writeup/</link>
      <pubDate>Fri, 28 Jan 2022 19:33:49 +0800</pubDate>
      <guid>//localhost:1313/posts/xctf-reverse-expert-1_writeup/</guid>
      <description>&lt;h1 id=&#34;xctf-reverse-高手区-1-writeup&#34;&gt;XCTF-REVERSE-高手区-1 writeup&lt;/h1&gt;&#xA;&lt;p&gt;有段时间没有刷题了，刷刷题找找手感&lt;/p&gt;&#xA;&lt;h2 id=&#34;0x0-answer_to_everything&#34;&gt;0x0 answer_to_everything&lt;/h2&gt;&#xA;&lt;p&gt;使用DIE查看程序信息&lt;/p&gt;&#xA;&lt;p&gt;&lt;img alt=&#34;image-20211031104627471&#34; src=&#34;//localhost:1313/images/XCTF-REVERSE-expert-1_writeup/image-20211031104627471.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;程序没有壳，而且是64位。然后看看文件长什么样，静态分析的时刻来临：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img alt=&#34;image-20211031104740182&#34; src=&#34;//localhost:1313/images/XCTF-REVERSE-expert-1_writeup/image-20211031104740182.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;发现关键函数，跟进这个函数&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;__int64&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;__fastcall&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;not_the_flag&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; a1)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; ( a1 &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;42&lt;/span&gt; )&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;puts&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Cipher from Bill &lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Submit without any tags&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;#kdudpeh&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;puts&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;YOUSUCK&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0LL&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;根据题目要求，应该是要对一个字段进行sha1加密，仔细观察逆向程序，发现应该是对&lt;code&gt;kdudpeh&lt;/code&gt;进行sha1加密&lt;/p&gt;&#xA;&lt;p&gt;使用python进行sha1加密得：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;80ee2a3fe31da904c596d993f7f1de4827c1450a&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;故本题flag为&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;flag{80ee2a3fe31da904c596d993f7f1de4827c1450a}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;0x1-elrond32&#34;&gt;0x1 elrond32&lt;/h2&gt;&#xA;&lt;p&gt;使用DIE查询一下文件信息&lt;/p&gt;&#xA;&lt;p&gt;&lt;img alt=&#34;image-20211031105318823&#34; src=&#34;//localhost:1313/images/XCTF-REVERSE-expert-1_writeup/image-20211031105318823.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;32位的exec文件，使用IDA pro打开&lt;/p&gt;&#xA;&lt;p&gt;定位到main函数的位置&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;__cdecl&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; a1, &lt;span style=&#34;color:#66d9ef&#34;&gt;char&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;**&lt;/span&gt;a2)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; ( a1 &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;sub_8048414&lt;/span&gt;(a2[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;], &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;) )&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;puts&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Access granted&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;sub_8048538&lt;/span&gt;(a2[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;]);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;puts&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Access denied&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;关键函数应该是在&lt;code&gt;sub_8048538(a2[1])&lt;/code&gt;函数里面&lt;/p&gt;&#xA;&lt;p&gt;跟进到&lt;code&gt;sub_8048538(a2[1])&lt;/code&gt;函数&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;__cdecl&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;sub_8048538&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; a1)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; v2[&lt;span style=&#34;color:#ae81ff&#34;&gt;33&lt;/span&gt;]; &lt;span style=&#34;color:#75715e&#34;&gt;// [esp+18h] [ebp-A0h] BYREF&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; i; &lt;span style=&#34;color:#75715e&#34;&gt;// [esp+9Ch] [ebp-1Ch]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;qmemcpy&lt;/span&gt;(v2, &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;unk_8048760, &lt;span style=&#34;color:#66d9ef&#34;&gt;sizeof&lt;/span&gt;(v2));&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; ( i &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;; i &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt;; &lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;i )&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;putchar&lt;/span&gt;(v2[i] &lt;span style=&#34;color:#f92672&#34;&gt;^&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;char&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;)(a1 &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;));&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;putchar&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;发现和参数a2有关联，需要寻找&lt;code&gt;a2&lt;/code&gt;的相关线索&lt;/p&gt;</description>
    </item>
    <item>
      <title>BUUCTF REVERSE [17~24]_Writeup</title>
      <link>//localhost:1313/posts/buuctf-reverse-3_writeup/</link>
      <pubDate>Fri, 28 Jan 2022 19:24:35 +0800</pubDate>
      <guid>//localhost:1313/posts/buuctf-reverse-3_writeup/</guid>
      <description>&lt;h1 id=&#34;buuctf-reverse-3-writeup&#34;&gt;BUUCTF-REVERSE-3 writeup&lt;/h1&gt;&#xA;&lt;p&gt;8道练手的逆向题目，可以尝试做一做&lt;/p&gt;&#xA;&lt;p&gt;&lt;img alt=&#34;image-20210914212658475&#34; src=&#34;//localhost:1313/images/BUUCTF-REVERSE-3_writeup/image-20210914212658475.png&#34;&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;0x0-gwctf-2019-pyre&#34;&gt;0x0 [GWCTF 2019] pyre&lt;/h2&gt;&#xA;&lt;p&gt;应该是python逆向的题目&lt;/p&gt;&#xA;&lt;p&gt;果然是一个pyc文件，使用pyc的逆向工具进行处理得到python的代码&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# uncompyle6 version 3.7.4&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Python bytecode 2.7 (62211)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Decompiled from: Python 3.8.8 (default, Apr 13 2021, 15:08:03) [MSC v.1916 64 bit (AMD64)]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Embedded file name: encode.py&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Compiled at: 2019-08-19 21:01:57&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;print &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Welcome to Re World!&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;print &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Your input1 is your flag~&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;l &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; len(input1)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; range(l):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    num &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ((input1[i] &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; i) &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;128&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;128&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;128&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    code &lt;span style=&#34;color:#f92672&#34;&gt;+=&lt;/span&gt; num&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; range(l &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    code[i] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; code[i] &lt;span style=&#34;color:#f92672&#34;&gt;^&lt;/span&gt; code[(i &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;print code&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;code &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\x1f&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\x12&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\x1d&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;(&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;0&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;4&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\x01&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\x06&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\x14&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;4&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;,&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\x1b&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;U&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;?&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;o&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;6&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;*&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;:&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\x01&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;D&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;;&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;%&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\x13&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# okay decompiling .\attachment.pyc&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;对代码进行审计，发现&lt;code&gt;input1&lt;/code&gt;的数值没有给到，感觉应该是在&lt;code&gt;input1&lt;/code&gt;里面。根据代码进行逆推&lt;/p&gt;</description>
    </item>
    <item>
      <title>BUUCTF REVERSE [9~16]_Writeup</title>
      <link>//localhost:1313/posts/buuctf-reverse-2_writeup/</link>
      <pubDate>Fri, 28 Jan 2022 19:18:38 +0800</pubDate>
      <guid>//localhost:1313/posts/buuctf-reverse-2_writeup/</guid>
      <description>&lt;h1 id=&#34;buuctf-reverse-2-writeup&#34;&gt;BUUCTF-REVERSE-2 writeup&lt;/h1&gt;&#xA;&lt;p&gt;8道逆向工程的小题目，re真是越来越有意思了&lt;/p&gt;&#xA;&lt;p&gt;&lt;img alt=&#34;image-20210808095050806&#34; src=&#34;//localhost:1313/images/BUUCTF-REVERSE-2_writeup/image-20210808095050806.png&#34;&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;0x0-不一样的flag&#34;&gt;0x0 不一样的flag&lt;/h2&gt;&#xA;&lt;p&gt;简单看看题目描述&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;是不是做习惯了常规的逆向题目？试试这道题，看你在能不能在程序中找到真正的flag！注意：flag并非是flag{XXX}形式，就是一个’字符串‘，考验眼力的时候到了！ 注意：得到的 flag 请包上 flag{} 提交&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;应该会是一道非常有趣的题目，非常有意思的题目。&lt;/p&gt;&#xA;&lt;p&gt;首先还是先查询一下程序信息&lt;/p&gt;&#xA;&lt;p&gt;&lt;img alt=&#34;image-20210808211004969&#34; src=&#34;//localhost:1313/images/BUUCTF-REVERSE-2_writeup/image-20210808211004969.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;没有壳，是一个32位的PE程序，丢进Cutter里面看个究竟吧&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;stdint.h&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int32_t&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;dbg_main&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;int32_t&lt;/span&gt; var_4h;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;char&lt;/span&gt;[&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;][&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;] a;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;[&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;] location;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;int32_t&lt;/span&gt; var_34h;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;int32_t&lt;/span&gt; choice;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;int32_t&lt;/span&gt; i;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;int32_t&lt;/span&gt; var_40h;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;/* int main(); */&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;_main&lt;/span&gt; (ebx, esi, edi);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    location &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    var_34h &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    edx &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;a;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ebx &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;*11110100001010000101111#&amp;#34;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    eax &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0x19&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    edi &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; edx;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    esi &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ebx;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ecx &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; eax;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;(es:edi) &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;(esi);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        ecx&lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        esi&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        es:edi&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    } &lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; (ecx &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;goto&lt;/span&gt; label_1;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;label_0:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;label_1:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;_puts&lt;/span&gt; (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;you can choose one action to execute&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;_puts&lt;/span&gt; (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;1 up&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;_puts&lt;/span&gt; (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2 down&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;_puts&lt;/span&gt; (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;3 left&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;_printf&lt;/span&gt; (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;4 right&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;:&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    eax &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;choice;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;_scanf&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;0x403066&lt;/span&gt;, eax);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    eax &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; choice;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (eax &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (eax &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (eax &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            } &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (eax &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (eax &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                        &lt;span style=&#34;color:#66d9ef&#34;&gt;goto&lt;/span&gt; label_2;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    eax &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; location;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    eax&lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    location &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; eax;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                } &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                } &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    eax &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; location;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    eax&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    location &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; eax;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#66d9ef&#34;&gt;goto&lt;/span&gt; label_3;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            eax &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; var_34h;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            eax&lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            var_34h &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; eax;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;goto&lt;/span&gt; label_3;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;label_2:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            eax &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; var_34h;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            eax&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            var_34h &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; eax;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;goto&lt;/span&gt; label_3;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;_exit&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;label_3:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    i &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; (i &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        eax &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; i;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        eax &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;((esp &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; eax&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0x30&lt;/span&gt;));&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (eax &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            eax &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; i;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            eax &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;((esp &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; eax&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0x30&lt;/span&gt;));&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (eax &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#66d9ef&#34;&gt;goto&lt;/span&gt; label_4;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;_exit&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;label_4:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        i&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    edx &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; location;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ecx &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; var_34h;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    eax &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; edx;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    eax &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    eax &lt;span style=&#34;color:#f92672&#34;&gt;+=&lt;/span&gt; edx;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    edx &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;var_40h;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    eax &lt;span style=&#34;color:#f92672&#34;&gt;+=&lt;/span&gt; edx;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    eax &lt;span style=&#34;color:#f92672&#34;&gt;+=&lt;/span&gt; ecx;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    eax &lt;span style=&#34;color:#f92672&#34;&gt;-=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0x29&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    al &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;(eax);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (al &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0x31&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;_exit&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    edx &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; location;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ecx &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; var_34h;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    eax &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; edx;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    eax &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    eax &lt;span style=&#34;color:#f92672&#34;&gt;+=&lt;/span&gt; edx;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    esi &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;var_40h;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    eax &lt;span style=&#34;color:#f92672&#34;&gt;+=&lt;/span&gt; esi;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    eax &lt;span style=&#34;color:#f92672&#34;&gt;+=&lt;/span&gt; ecx;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    eax &lt;span style=&#34;color:#f92672&#34;&gt;-=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0x29&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    al &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;(eax);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (al &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0x23&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;goto&lt;/span&gt; label_0;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;_puts&lt;/span&gt; (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;ok, the order you enter is the flag!&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;_exit&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;根据反编译的代码，可以发现这道题目是一个走迷宫的题目，总体而言，还是挺有意思的，找到迷宫数据然后走出迷宫。&lt;/p&gt;</description>
    </item>
    <item>
      <title>XCTF REVERSE novice_writeup</title>
      <link>//localhost:1313/posts/xctf-reverse-novice_writeup/</link>
      <pubDate>Thu, 14 Oct 2021 13:27:13 +0800</pubDate>
      <guid>//localhost:1313/posts/xctf-reverse-novice_writeup/</guid>
      <description>&lt;h1 id=&#34;xctf-reverse-新手区-writeup&#34;&gt;XCTF-REVERSE-新手区 writeup&lt;/h1&gt;&#xA;&lt;p&gt;来XCTF平台，做做Re练练手&lt;/p&gt;&#xA;&lt;p&gt;&lt;img alt=&#34;image-20210902134256690&#34; src=&#34;//localhost:1313/images/XCTF-REVERSE-novice_writeup/image-20210902134256690.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;XCTF平台有十道题目：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img alt=&#34;image-20210902134352010&#34; src=&#34;//localhost:1313/images/XCTF-REVERSE-novice_writeup/image-20210902134352010.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;十道题目应该是涵盖了逆向方向的主要内容，带着好奇心去探索逆向的世界吧&lt;/p&gt;&#xA;&lt;h2 id=&#34;0x0-insanity&#34;&gt;0x0 insanity&lt;/h2&gt;&#xA;&lt;p&gt;往往第一道题目都不是很难，下载附件，看看是个什么东西。&lt;/p&gt;&#xA;&lt;p&gt;文件没有扩展名，可能是个ELF文件，走个流程&lt;/p&gt;&#xA;&lt;p&gt;首先查一下壳&lt;/p&gt;&#xA;&lt;p&gt;&lt;img alt=&#34;image-20210902135713948&#34; src=&#34;//localhost:1313/images/XCTF-REVERSE-novice_writeup/image-20210902135713948.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;果然是ELF格式的文件，不过不是x64格式的ELF文件&lt;/p&gt;&#xA;&lt;p&gt;使用IDA pro打开文件，查看主函数的反编译代码&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;__cdecl&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; argc, &lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;char&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;**&lt;/span&gt;argv, &lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;char&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;**&lt;/span&gt;envp)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;unsigned&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; v3; &lt;span style=&#34;color:#75715e&#34;&gt;// eax&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;unsigned&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; v4; &lt;span style=&#34;color:#75715e&#34;&gt;// eax&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;puts&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Reticulating splines, please wait..&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;sleep&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;5u&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  v3 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;time&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;srand&lt;/span&gt;(v3);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  v4 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;rand&lt;/span&gt;();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;puts&lt;/span&gt;((&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;strs)[v4 &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0xA&lt;/span&gt;]);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;跟进strs的数据&lt;/p&gt;&#xA;&lt;p&gt;&lt;img alt=&#34;image-20210902145813017&#34; src=&#34;//localhost:1313/images/XCTF-REVERSE-novice_writeup/image-20210902145813017.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;继续跟进strs的数据&lt;/p&gt;&#xA;&lt;p&gt;&lt;img alt=&#34;image-20210902145852653&#34; src=&#34;//localhost:1313/images/XCTF-REVERSE-novice_writeup/image-20210902145852653.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;get到了flag&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;9447{This_is_a_flag}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;0x1-python-trade&#34;&gt;0x1 python-trade&lt;/h2&gt;&#xA;&lt;p&gt;看题目应该是一个Python的逆向题目&lt;/p&gt;&#xA;&lt;p&gt;文件是一个pyc文件应该是Python的逆向文件，可以使用Python的反编译工具进行反编译&lt;/p&gt;&#xA;&lt;p&gt;可以使用 &lt;code&gt;uncompyle&lt;/code&gt; 进行反编译：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# uncompyle6 version 3.7.4&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Python bytecode 2.7 (62211)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Decompiled from: Python 3.8.8 (default, Apr 13 2021, 15:08:03) [MSC v.1916 64 bit (AMD64)]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Embedded file name: 1.py&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Compiled at: 2017-06-03 10:20:43&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; base64&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;encode&lt;/span&gt;(message):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    s &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; message:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ord(i) &lt;span style=&#34;color:#f92672&#34;&gt;^&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;16&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        s &lt;span style=&#34;color:#f92672&#34;&gt;+=&lt;/span&gt; chr(x)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; base64&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;b64encode(s)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;correct &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;XlNkVmtUI1MgXWBZXCFeKY+AaXNt&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;flag &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;print &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Input flag:&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;flag &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; raw_input()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; encode(flag) &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; correct:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    print &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;correct&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    print &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;wrong&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# okay decompiling .\test.pyc&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;应该是需要逆这个加密算法的进行求解，密码手的老本行了，写个求解脚本:&lt;/p&gt;</description>
    </item>
    <item>
      <title>BUUCTF REVERSE [1~8]_writeup</title>
      <link>//localhost:1313/posts/buuctf-reverse-1_writeup/</link>
      <pubDate>Thu, 14 Oct 2021 13:03:43 +0800</pubDate>
      <guid>//localhost:1313/posts/buuctf-reverse-1_writeup/</guid>
      <description>&lt;h1 id=&#34;buuctf-reverse-1-writeup&#34;&gt;BUUCTF-REVERSE-1 writeup&lt;/h1&gt;&#xA;&lt;p&gt;逆向工程让密码学更加灵动，让密码学不再抽象。初步试水逆向工程题目，嘤嘤嘤！&lt;/p&gt;&#xA;&lt;p&gt;&lt;img alt=&#34;image-20210806103313499&#34; src=&#34;//localhost:1313/images/BUUCTF-REVERSE-1_writeup/image-20210806103313499.png&#34;&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;0x0-easyre&#34;&gt;0x0 easyre&lt;/h2&gt;&#xA;&lt;p&gt;非常简单的逆向题目，这道题目解决方法很多，基本思路就使用静态调试工具进行反汇编，然后检索字符串得到flag。这里使用一个开源的工具Cutter来逆向玩玩。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img alt=&#34;image-20210806113422474&#34; src=&#34;//localhost:1313/images/BUUCTF-REVERSE-1_writeup/image-20210806113422474.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;直接点击下面的Strings&lt;/p&gt;&#xA;&lt;p&gt;&lt;img alt=&#34;image-20210806114025621&#34; src=&#34;//localhost:1313/images/BUUCTF-REVERSE-1_writeup/image-20210806114025621.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;使用过滤器，快速检索flag就能得到flag&lt;/p&gt;&#xA;&lt;p&gt;&lt;img alt=&#34;image-20210806114828778&#34; src=&#34;//localhost:1313/images/BUUCTF-REVERSE-1_writeup/image-20210806114828778.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;得到flag&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;flag{this_Is_a_EaSyRe}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;0x1-reverse1&#34;&gt;0x1 reverse1&lt;/h2&gt;&#xA;&lt;p&gt;先丢进IDA pro里面看看，会有什么神奇的反应和效果！&lt;/p&gt;&#xA;&lt;p&gt;&lt;img alt=&#34;image-20210806192321775&#34; src=&#34;//localhost:1313/images/BUUCTF-REVERSE-1_writeup/image-20210806192321775.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;然后我们需要定位到主函数，定位到主函数的方法有很多，目前，我大致有两种，首先是检索字符串，其次就 是检索函数来快速定位主函数。&lt;/p&gt;&#xA;&lt;p&gt;通过检索字符串来定位主函数，直接检索flag&lt;/p&gt;&#xA;&lt;p&gt;&lt;img alt=&#34;image-20210806195615915&#34; src=&#34;//localhost:1313/images/BUUCTF-REVERSE-1_writeup/image-20210806195615915.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;然后通过检索结果定位到主函数&lt;/p&gt;&#xA;&lt;p&gt;&lt;img alt=&#34;image-20210806195708832&#34; src=&#34;//localhost:1313/images/BUUCTF-REVERSE-1_writeup/image-20210806195708832.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;使用F5看到反编译的代码&lt;/p&gt;&#xA;&lt;p&gt;&lt;img alt=&#34;image-20210806200411241&#34; src=&#34;//localhost:1313/images/BUUCTF-REVERSE-1_writeup/image-20210806200411241.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;代码非常清晰，找到关键的代码&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; ( j &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;; ; &lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;j )&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    v8 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; j;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    v2 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;j_strlen&lt;/span&gt;(Str2);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; ( v8 &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; v2 )&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#66d9ef&#34;&gt;break&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; ( Str2[j] &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;111&lt;/span&gt; )&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      Str2[j] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;48&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;sub_1400111D1&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;input the flag:&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;sub_14001128F&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;%20s&amp;#34;&lt;/span&gt;, Str1);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  v3 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;j_strlen&lt;/span&gt;(Str2);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; ( &lt;span style=&#34;color:#f92672&#34;&gt;!&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;strncmp&lt;/span&gt;(Str1, Str2, v3) )&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;sub_1400111D1&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;this is the right flag!&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;sub_1400111D1&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;wrong flag&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;sub_14001113B&lt;/span&gt;(v5, &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;unk_140019D00);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;i64;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;进行简单地代码审计可以明确地发现&lt;/p&gt;</description>
    </item>
    <item>
      <title>BUUCTF CRYPTO (6) writeup</title>
      <link>//localhost:1313/posts/buuctf-crypto-6_writeup/</link>
      <pubDate>Thu, 08 Jul 2021 16:26:32 +0800</pubDate>
      <guid>//localhost:1313/posts/buuctf-crypto-6_writeup/</guid>
      <description>&lt;p&gt;百题计划，冲呀！冲呀！冲呀！&lt;/p&gt;&#xA;&lt;p&gt;&lt;img alt=&#34;image-20210701110042258&#34; src=&#34;//localhost:1313/images/BUUCTF-CRYPTO-6_writeup/image-20210701110042258.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;本次16道题目，难度开始逐渐上升，越来越有挑战性喽！&lt;/p&gt;&#xA;&lt;p&gt;&lt;img alt=&#34;image-20210701110832867&#34; src=&#34;//localhost:1313/images/BUUCTF-CRYPTO-6_writeup/image-20210701110832867.png&#34;&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;0x0-rsa--what&#34;&gt;0x0 RSA &amp;amp; what&lt;/h2&gt;&#xA;&lt;p&gt;开场就是一道RSA题目，真是不错！&lt;/p&gt;&#xA;&lt;p&gt;附件有四个文件，一个&lt;code&gt;README.txt&lt;/code&gt;文件，一个&lt;code&gt;rsa.py&lt;/code&gt;算法文件，一个&lt;code&gt;HUB1&lt;/code&gt;输出文件和一个&lt;code&gt;HUB2&lt;/code&gt;输出文件。看看这些文件都是些什么内容吧！&lt;/p&gt;&#xA;&lt;p&gt;README.txt：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;素数生成算法太麻烦了，有没有取巧的方法呢？&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;诶，这里好像有个不错的想法哟。&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;看起来节约了不少时间呢，嘿嘿嘿……&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;顺便问问，应该大家都知道base64吧，用来编码还是很方便的呢！&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;rsa.py：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; Crypto.Util.number &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; bytes_to_long, getPrime&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; random &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; randint&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; gmpy2 &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; powmod&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;p &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; getPrime(&lt;span style=&#34;color:#ae81ff&#34;&gt;2048&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;q &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; getPrime(&lt;span style=&#34;color:#ae81ff&#34;&gt;2048&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;N &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; p&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;q&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Phi &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; (p&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;(q&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;get_enc_key&lt;/span&gt;(N,Phi):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    e &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; getPrime(N)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; Phi &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; e &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; get_enc_key(N, Phi)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; e&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;e1 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; get_enc_key(randint(&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt;), Phi)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;e2 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; get_enc_key(randint(&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt;), Phi)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;fr &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; open(&lt;span style=&#34;color:#e6db74&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;./base64&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;rb&amp;#34;&lt;/span&gt;)&lt;span style=&#34;color:#75715e&#34;&gt;#flag is in this file&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;f1 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; open(&lt;span style=&#34;color:#e6db74&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;./HUB1&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;wb&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;f2 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; open(&lt;span style=&#34;color:#e6db74&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;./HUB2&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;wb&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;base64 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; fr&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;read(&lt;span style=&#34;color:#ae81ff&#34;&gt;255&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;f1&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;write(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%d&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%d&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; (N, e1))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;f2&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;write(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%d&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%d&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; (N, e2))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; len(base64)&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    pt &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; bytes_to_long(base64)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ct1 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; powmod(pt, e1, N)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ct2 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; powmod(pt, e2, N)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    f1&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;write(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%d&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; ct1)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    f2&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;write(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%d&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; ct2)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    base64 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; fr&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;read(&lt;span style=&#34;color:#ae81ff&#34;&gt;255&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;fr&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;close()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;f1&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;close()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;f2&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;close()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;HUB1：&lt;/p&gt;</description>
    </item>
    <item>
      <title>BUUCTF CRYPTO (5) writeup</title>
      <link>//localhost:1313/posts/buuctf-crypto-5_writeup/</link>
      <pubDate>Thu, 01 Jul 2021 10:14:15 +0800</pubDate>
      <guid>//localhost:1313/posts/buuctf-crypto-5_writeup/</guid>
      <description>&lt;p&gt;密码学百题计划启动！进行勇往直前！&lt;/p&gt;&#xA;&lt;p&gt;&lt;img alt=&#34;image-20210628200701835&#34; src=&#34;//localhost:1313/images/BUUCTF-CRYPTO-5_writeup/image-20210628200701835.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;本次的16道题目，也是非常有意思的呢！各种各样的呢……&lt;/p&gt;&#xA;&lt;p&gt;&lt;img alt=&#34;image-20210628200448759&#34; src=&#34;//localhost:1313/images/BUUCTF-CRYPTO-5_writeup/image-20210628200448759.png&#34;&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;0x0-浪里淘沙&#34;&gt;0x0 浪里淘沙&lt;/h2&gt;&#xA;&lt;p&gt;看样子，应该是个脑洞题没错了&lt;/p&gt;&#xA;&lt;p&gt;来康康这题的题目：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;我有密集恐惧症，所以大家自求多福吧，把获得的单词连在一起提交即可。（我这里有一串数字：4，8，11，15，16） 注意：得到的 flag 请包上 flag{} 提交&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这题目好像有点意思，可以从题目中提炼一些信息：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;密集恐惧症&lt;/li&gt;&#xA;&lt;li&gt;获得的单词连在一起提交&lt;/li&gt;&#xA;&lt;li&gt;我这里有一串数字：4，8，11，15，16&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;根据提炼的数据进行分享，应该是词频统计类的题目，这题有点意思&lt;/p&gt;&#xA;&lt;p&gt;看看附件是啥吧：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tonightsuccessnoticenoticewewesuccesstonightweexamplecryptoshouldwebackspacetonightbackspaceexamplelearnwesublimlearnbackspacetheshouldwelearnfoundsublimsystemexamplesublimfoundlearnshouldmorningsublimsystemuserlearnthecryptomorningexamplenoticetonightlearntonightlearntonightsublimenterusermorningfoundtonightweenterfoundnoticethecryptomorningthebackspacelearntonightlearnsublimtonightlearnfoundenterfoundsuccesstonightsuccessuserfoundmorningtonighttheshouldsublimentertonightenterbackspacelearnexamplenoticeexamplefoundsystemsuccesssublimsuccessshouldtonightcryptowelearncryptofoundshouldsublimsublimweentertonightsuccessshouldentertheentercryptouserbackspaceshouldentersystemsuccesssystementerfoundenterlearnexampletonightnoticemorningusertonightlearnmorningtonightfoundfoundsuccessnoticesystementerlearnexamplebackspaceshouldcryptocryptosublimweexampletonighttheshouldthemorningbackspacelearntonightsystemsuccesssuccessbackspacemorningnoticeuserfoundfoundtonightmorningenterenterthefoundbackspacelearnenterentershouldthesystemfounduserlearnlearnsystemnoticetonighttheshouldlearnuserbackspaceweusernoticeshouldthewefoundsystemwecryptocryptowethebackspacesystementershouldtonightsystemnoticemorningsystemweentermorningfoundsuccessusertonightsuccesstonightbackspaceshouldweenterthewesystemusernoticesystemthelearnexamplelearnfoundlearnnoticeexamplesystemthecryptocryptolearnsystemthecryptoenterlearnexamplemorningmorningweenterentersuccessexampleuserthebackspacenoticesublimenterbackspacesuccessbackspacethesublimexamplesystemtheexamplecryptolearnuserexamplelearnsystemusersuccessenterentersuccesstheuserbackspacelearnsuccessbackspacethesublimshouldwebackspaceexamplesuccesssuccesstonightweusershouldsuccessmorningcryptomorningfoundbackspacesublimshouldentershouldnoticesuccessmorningsuccessexamplelearnshouldsublimlearntonightshoulduserbackspacesublimlearncryptosuccessenternoticetonightmorningtonightwesuccessweuserbackspaceexamplewesystemnoticemorningsystemmorningcryptolearnsystemthethefoundcryptouserlearnusersystemwemorningenterexampleshouldlearncryptofoundenterbackspacelearnenterenterbackspaceshouldbackspacetheshouldthesystemshouldshouldsuccessmorningthefoundsystementersystemtonightcryptowelearnexampleexamplesystementerbackspaceshouldtheentersublimtonightfoundfoundsuccesssuccesssystemsublimcryptoshouldentersublimmorninglearnfoundtonightcryptobackspacesuccesscryptowebackspacefoundshouldnoticeshouldmorningnoticesystemcryptosystemlearnsystemnoticemorningsystementerwemorninglearnsuccessfoundwesuccesswetheusercryptousernoticebackspacesuccessshouldtonightmorningentermorninguserenternoticefoundmorningwetonightsystemthecryptotonightcryptosystemuserthefoundexampletonightusersystemcryptosublimmorninguserthefoundbackspaceshouldsuccesscryptotonightsystemnoticebackspaceusershouldenterthecryptomorningwesublimnoticesuccessnoticeusersuccesstonightlearnweuserenterfounduserexampleshouldshouldtonightwelearnthenoticethewefoundmorningexampleshouldexamplethesuccessnoticeenterfoundthecryptonoticeuserlearnuserweenterfoundmorningsystemweexamplenoticethebackspaceexamplesublimtheusermorningtonightthesuccesscryptosuccessusersuccesstonighttonightwelearnenterenterthemorningentersystemcryptobackspacemorningsystemexamplecryptouserexamplelearnsublimsuccessusersystemfoundmorningshouldcryptotonightsublimtheexamplemorningsystemuserexampleweexamplenoticesuccesssublimnoticecryptoshouldbackspaceshouldthetonightfoundsublimbackspacebackspacetonightshouldbackspacesuccesstonightbackspacesuccessmorningsystemcryptobackspaceentertonighttonightnoticelearnshoulduserfoundexamplesystemthesuccessweusertonightcryptousernoticeenternoticebackspaceusersystemfoundusernoticeshouldlearnuserfoundexampleusermorningshouldsuccessmorningmorningexampleexamplefoundsublimfoundenterbackspacenoticelearnfoundmorningcryptonoticecryptoshouldweshouldtonightcryptobackspacesublimcryptosublimenterentersublimentercryptonoticethethesublimexampleenterentershouldlearncryptoentershouldmorninglearnnoticeuserexamplesublimtonightshouldfoundtonightsuccessshouldmorningfoundtheweuserlearnsublimsystembackspacecryptotheusertonightcryptosublimmorningmorningexamplenoticetheenterlearnshouldmorningsublimfoundtonightsublimsublimexamplefounduserexamplethefoundwemorningnoticefoundcryptosuccesssublimsublimexamplethesuccessexamplenoticesuccessbackspacesublimlearnuserexamplesuccesssuccesssystemsuccessmorningmorninglearnexamplemorningtonightfoundbackspaceenternoticemorningentersuccessmorningusermorningbackspacelearncryptoenteruserenteruserthetonighttonightsuccesslearnenterfoundsuccesssystemfoundbackspaceenterlearnsystemsublimcryptoentermorningwetonightshouldlearnenterfoundcryptonoticelearnlearnshouldfoundsuccessexampletonightthesuccessfoundusertonightenterfoundsuccessshouldmorningusernoticemorningsystemsystemsuccessshouldwelearnenterfoundexamplewethefoundweshouldsystemsystemmorningmorningbackspaceshouldentersublimentertonightsuccesssystemsystemcryptousershouldsublimfoundwetonightnoticeexamplewewesuccessfoundusertonightfoundsystemexamplecryptofoundshouldshouldsuccessenterbackspaceexampletonightthelearnnoticeuserlearnsystemsublimfoundlearnsuccesssystemshouldsublimnoticelearnsystemnoticetonightexamplefoundusernoticeenterlearnnoticecryptousersystemmorningthewesystemfoundfoundshouldsystementerenterbackspacesystemsublimcryptousermorninglearnlearntonightsublimlearnenterenterbackspacesystemuserusercryptoentershouldtheusersublimnoticeexamplemorningexamplesublimsublimbackspacesystemexampleshouldsublimlearnfoundenterbackspacelearnmorningmorningfoundthetonightmorningnoticeenterlearnusersystemtonightbackspaceexamplelearntonightbackspaceweshouldcryptosuccessbackspaceexamplesuccesstheshouldmorninguserbackspacelearnthetheshouldcryptocryptotonightbackspacecryptocryptobackspacebackspacenoticeusertonightentermorningfoundweenterexampleenterfoundusersublimsystemtheexampleexamplesystemsuccessusersublimentermorningbackspacesystemfoundlearnsystemshouldsublimsublimentershouldtheusershouldexampleexampleshouldsuccesswelearnfoundsublimshoulduserweentertonightwenoticesublimsystemlearnshouldfoundsuccessuserentersuccessmorningcryptoenteruserfoundexampletonightlearnexampleexamplefoundlearnsuccesssystembackspacecryptonoticethefoundbackspacelearncryptothelearnlearnexamplesuccessnoticenoticesystemmorningcryptotonightnoticenoticeentersuccesscryptoenterbackspacesublimexampleenterfoundtonightcryptotonightsublimnoticesuccesssublimtheentertonighttheshouldthefoundsystemtonightuserbackspacesuccessshouldwebackspacenoticebackspacebackspacenoticewecryptobackspacebackspaceusertonightlearnsuccessmorningusertonightsuccessshouldbackspacecryptoenterentershouldsublimsystemexamplemorningcryptonoticethesuccessthebackspacenoticelearnsublimlearnsuccesscryptothesuccessenternoticecryptosystemsublimsuccesswebackspaceuserenterlearnuserwewemorningsuccesslearncryptobackspacewecryptosystemlearnenterenteruserexamplefoundsystemcryptousernoticefoundusersublimbackspacewesublimnoticemorningshouldexamplenoticecryptoshouldtonightmorningthefoundsystementerentersystemthecryptobackspacesublimlearnsuccessmorningsublimsystemcryptousersublimwesuccessmorningsublimbackspacecryptobackspacesublimthelearnsuccesssublimlearncryptoweweexamplecryptowenoticelearnfoundbackspacesystemsystemexampleshouldlearnsuccesssublimcryptobackspacetonightbackspacemorningmorningnoticeshouldnoticefoundthetheshouldtheshouldfoundfoundcryptosuccessbackspacesuccessshouldweenternoticeweweshouldmorningfoundusersuccessbackspacewenoticeusersuccessenterenterexamplelearnfoundwetonightusercryptothesublimsublimtonightsuccesslearnbackspacetonightentertonightthesublimnoticewefoundcryptobackspaceenterenterlearnlearntonightexamplesystementersublimnoticecryptoshoulduseruserbackspaceuserwesublimmorningwesystemshouldtonighttheusershouldnoticefoundusernoticeentersublimwethewefoundfoundlearnfoundwecryptosystemexamplemorningcryptocryptosublimtheexamplenoticefoundlearnwelearnmorningtheenterthesystemsublimtonightsuccesssystemlearnshouldenterbackspaceentersuccesssuccessbackspaceexamplenoticeentershouldsublimlearnbackspacetheshouldexamplelearnsystemusersublimbackspacebackspacesuccesswelearntonightexamplewecryptoenterwesystemsystemsublimexamplecryptolearnmorningsublimfoundsublimfoundbackspacefoundtonighttonightnoticesuccesssuccessexampleusersuccesstonightsublimcryptosystemweenterexamplesystemthethenoticesublimtonightbackspacenoticesystemexamplethesuccesstonightmorningsuccesstonightwenoticesublimtonightwelearntonightmorningsublimbackspaceenterthetonightenterwecryptofoundtheenternoticebackspacesuccesswesystemuserexamplebackspaceentersuccesstonightsublimwemorningsuccesssuccesswesublimsuccessnoticesublimfoundlearnlearnweexamplecryptonoticelearnweusershoulduserfoundcryptolearnfoundmorningtonightmorningmorningnoticewecryptowewesuccessfoundsublimweuserentershouldshouldshouldsublimbackspacetonightenterwesublimsuccessshouldfoundthethetonightwecryptoweenterfoundcryptoshouldcryptouseruserfoundentersublimsublimthelearntheshouldnoticebackspacefoundsuccessshouldtonightentermorningsystemmorningtonightwenoticelearnbackspaceexampleusershouldnoticesublimsublimexamplethesuccessnoticesystemmorningnoticecryptosystemsublimcryptosystemsuccessshouldmorningbackspaceshouldmorninglearnnoticenoticeshouldthewewesublimsublimnoticeusersuccessentersystemfoundshouldshouldcryptobackspaceusermorningsystemshouldshouldtonightwesublimuserfoundlearnbackspacethetonightmorningexampleuserthefoundbackspaceshouldtonightcryptocryptofounduserexamplenoticecryptousernoticethenoticeshouldweshouldfoundwemorningcryptosuccesslearnfoundtonightsublimnoticenoticewefoundwewesuccesssublimsublimcryptoweexampletonightsuccessfoundshouldsuccesstonightbackspacesystemshouldwesystemnoticebackspaceusersystembackspacewenoticelearnnoticenoticesuccesslearntonightuserlearnsuccessbackspacesuccesswesystemusercryptonoticethesystemusernoticewethesuccessweshouldfoundshouldcryptomorningtonightwethewesuccesslearntheshouldweexampletonightsuccessnoticenoticemorningfoundmorningfoundusersublimsystemsuccessbackspacesuccessmorninguserthefoundweexamplemorningsublimlearnfoundfoundnoticemorningshouldweuserwemorningexamplesuccesssuccessfoundthetheshouldweusershouldtheshouldexamplenoticefoundsuccesssystemfoundshouldsublimbackspacetonightshouldsystemtonightsuccesslearntonightsystemsublimsuccesscryptobackspacesystemsublimmorningmorningshouldmorninglearnsuccesslearnmorningusermorninglearnexamplecryptoshouldbackspacesublimshouldfoundbackspacesystemsystemweexamplesystemtonightsublimmorningmorninguserfoundcryptolearnbackspaceshouldbackspacenoticesublimfoundthecryptousershouldsuccesssystemsuccessshouldsystembackspacesublimshouldsublimsystembackspaceexampleshouldbackspacesublimnoticelearnsublimuserbackspaceusersublimsuccesssublimuserusernoticeshouldsuccessnoticenoticelearnexamplesystemweexamplesublimbackspacebackspacecryptoshouldusercryptosublimbackspacesublimshouldsystemnoticenoticethesuccesssuccesslearnsystemsublimwenoticelearnusersublimsystemusernoticeuserthesuccesslearnwelearnwenoticecryptolearncryptonoticenoticebackspacecryptothecryptousercryptobackspacesuccesslearnthesystemsuccessthesystemsystemcryptosuccessbackspacesublimlearnsublimcryptobackspacelearnsublimusersublimexamplecryptosublimsystemnoticecryptocryptousertheusernoticebackspacenoticenoticethecryptocryptosystembackspacesublimbackspacecryptocryptobackspacesystemuserthenoticesystemsystemsystemusernoticethecryptouserusersystemtheusercryptoexamplenoticecryptoexamplenoticetheexampleexamplethecryptotheusernoticetheexampleexamplecryptotheexampleexamplethenoticethecryptocryptoexampletheexamplecryptocryptothenoticeexamplecryptonoticetheexampleexampleexamplecryptocryptoexampleexamplethenoticethecryptothethethethethetheexampleexamplethetheexampletheexampletheexampleexampleexampleexampleexampleexampleexampleexampleexampleexampleexampleexampleexampleexampleexampleexampleexampleexampleexample&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;好多连在一起的词汇，应该是一个简单NTP题目，也就是NLP最基础的一个步骤，分词。&lt;/p&gt;&#xA;&lt;p&gt;这道题目的大致思路应该是：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;分词&lt;/li&gt;&#xA;&lt;li&gt;词频统计&lt;/li&gt;&#xA;&lt;li&gt;统计排序&lt;/li&gt;&#xA;&lt;li&gt;根据排序位置找到指定的单词&lt;/li&gt;&#xA;&lt;li&gt;拼接单词&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;根据这个思路，写个脚本处理一下哈：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; collections &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; Counter &lt;span style=&#34;color:#f92672&#34;&gt;//&lt;/span&gt; 统计库&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; wordninja &lt;span style=&#34;color:#f92672&#34;&gt;//&lt;/span&gt; 英语单词词库&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;data&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;tonightsuccessnoticenoticewewesuccesstonightweexamplecryptoshouldwebackspacetonightbackspaceexamplelearnwesublimlearnbackspacetheshouldwelearnfoundsublimsystemexamplesublimfoundlearnshouldmorningsublimsystemuserlearnthecryptomorningexamplenoticetonightlearntonightlearntonightsublimenterusermorningfoundtonightweenterfoundnoticethecryptomorningthebackspacelearntonightlearnsublimtonightlearnfoundenterfoundsuccesstonightsuccessuserfoundmorningtonighttheshouldsublimentertonightenterbackspacelearnexamplenoticeexamplefoundsystemsuccesssublimsuccessshouldtonightcryptowelearncryptofoundshouldsublimsublimweentertonightsuccessshouldentertheentercryptouserbackspaceshouldentersystemsuccesssystementerfoundenterlearnexampletonightnoticemorningusertonightlearnmorningtonightfoundfoundsuccessnoticesystementerlearnexamplebackspaceshouldcryptocryptosublimweexampletonighttheshouldthemorningbackspacelearntonightsystemsuccesssuccessbackspacemorningnoticeuserfoundfoundtonightmorningenterenterthefoundbackspacelearnenterentershouldthesystemfounduserlearnlearnsystemnoticetonighttheshouldlearnuserbackspaceweusernoticeshouldthewefoundsystemwecryptocryptowethebackspacesystementershouldtonightsystemnoticemorningsystemweentermorningfoundsuccessusertonightsuccesstonightbackspaceshouldweenterthewesystemusernoticesystemthelearnexamplelearnfoundlearnnoticeexamplesystemthecryptocryptolearnsystemthecryptoenterlearnexamplemorningmorningweenterentersuccessexampleuserthebackspacenoticesublimenterbackspacesuccessbackspacethesublimexamplesystemtheexamplecryptolearnuserexamplelearnsystemusersuccessenterentersuccesstheuserbackspacelearnsuccessbackspacethesublimshouldwebackspaceexamplesuccesssuccesstonightweusershouldsuccessmorningcryptomorningfoundbackspacesublimshouldentershouldnoticesuccessmorningsuccessexamplelearnshouldsublimlearntonightshoulduserbackspacesublimlearncryptosuccessenternoticetonightmorningtonightwesuccessweuserbackspaceexamplewesystemnoticemorningsystemmorningcryptolearnsystemthethefoundcryptouserlearnusersystemwemorningenterexampleshouldlearncryptofoundenterbackspacelearnenterenterbackspaceshouldbackspacetheshouldthesystemshouldshouldsuccessmorningthefoundsystementersystemtonightcryptowelearnexampleexamplesystementerbackspaceshouldtheentersublimtonightfoundfoundsuccesssuccesssystemsublimcryptoshouldentersublimmorninglearnfoundtonightcryptobackspacesuccesscryptowebackspacefoundshouldnoticeshouldmorningnoticesystemcryptosystemlearnsystemnoticemorningsystementerwemorninglearnsuccessfoundwesuccesswetheusercryptousernoticebackspacesuccessshouldtonightmorningentermorninguserenternoticefoundmorningwetonightsystemthecryptotonightcryptosystemuserthefoundexampletonightusersystemcryptosublimmorninguserthefoundbackspaceshouldsuccesscryptotonightsystemnoticebackspaceusershouldenterthecryptomorningwesublimnoticesuccessnoticeusersuccesstonightlearnweuserenterfounduserexampleshouldshouldtonightwelearnthenoticethewefoundmorningexampleshouldexamplethesuccessnoticeenterfoundthecryptonoticeuserlearnuserweenterfoundmorningsystemweexamplenoticethebackspaceexamplesublimtheusermorningtonightthesuccesscryptosuccessusersuccesstonighttonightwelearnenterenterthemorningentersystemcryptobackspacemorningsystemexamplecryptouserexamplelearnsublimsuccessusersystemfoundmorningshouldcryptotonightsublimtheexamplemorningsystemuserexampleweexamplenoticesuccesssublimnoticecryptoshouldbackspaceshouldthetonightfoundsublimbackspacebackspacetonightshouldbackspacesuccesstonightbackspacesuccessmorningsystemcryptobackspaceentertonighttonightnoticelearnshoulduserfoundexamplesystemthesuccessweusertonightcryptousernoticeenternoticebackspaceusersystemfoundusernoticeshouldlearnuserfoundexampleusermorningshouldsuccessmorningmorningexampleexamplefoundsublimfoundenterbackspacenoticelearnfoundmorningcryptonoticecryptoshouldweshouldtonightcryptobackspacesublimcryptosublimenterentersublimentercryptonoticethethesublimexampleenterentershouldlearncryptoentershouldmorninglearnnoticeuserexamplesublimtonightshouldfoundtonightsuccessshouldmorningfoundtheweuserlearnsublimsystembackspacecryptotheusertonightcryptosublimmorningmorningexamplenoticetheenterlearnshouldmorningsublimfoundtonightsublimsublimexamplefounduserexamplethefoundwemorningnoticefoundcryptosuccesssublimsublimexamplethesuccessexamplenoticesuccessbackspacesublimlearnuserexamplesuccesssuccesssystemsuccessmorningmorninglearnexamplemorningtonightfoundbackspaceenternoticemorningentersuccessmorningusermorningbackspacelearncryptoenteruserenteruserthetonighttonightsuccesslearnenterfoundsuccesssystemfoundbackspaceenterlearnsystemsublimcryptoentermorningwetonightshouldlearnenterfoundcryptonoticelearnlearnshouldfoundsuccessexampletonightthesuccessfoundusertonightenterfoundsuccessshouldmorningusernoticemorningsystemsystemsuccessshouldwelearnenterfoundexamplewethefoundweshouldsystemsystemmorningmorningbackspaceshouldentersublimentertonightsuccesssystemsystemcryptousershouldsublimfoundwetonightnoticeexamplewewesuccessfoundusertonightfoundsystemexamplecryptofoundshouldshouldsuccessenterbackspaceexampletonightthelearnnoticeuserlearnsystemsublimfoundlearnsuccesssystemshouldsublimnoticelearnsystemnoticetonightexamplefoundusernoticeenterlearnnoticecryptousersystemmorningthewesystemfoundfoundshouldsystementerenterbackspacesystemsublimcryptousermorninglearnlearntonightsublimlearnenterenterbackspacesystemuserusercryptoentershouldtheusersublimnoticeexamplemorningexamplesublimsublimbackspacesystemexampleshouldsublimlearnfoundenterbackspacelearnmorningmorningfoundthetonightmorningnoticeenterlearnusersystemtonightbackspaceexamplelearntonightbackspaceweshouldcryptosuccessbackspaceexamplesuccesstheshouldmorninguserbackspacelearnthetheshouldcryptocryptotonightbackspacecryptocryptobackspacebackspacenoticeusertonightentermorningfoundweenterexampleenterfoundusersublimsystemtheexampleexamplesystemsuccessusersublimentermorningbackspacesystemfoundlearnsystemshouldsublimsublimentershouldtheusershouldexampleexampleshouldsuccesswelearnfoundsublimshoulduserweentertonightwenoticesublimsystemlearnshouldfoundsuccessuserentersuccessmorningcryptoenteruserfoundexampletonightlearnexampleexamplefoundlearnsuccesssystembackspacecryptonoticethefoundbackspacelearncryptothelearnlearnexamplesuccessnoticenoticesystemmorningcryptotonightnoticenoticeentersuccesscryptoenterbackspacesublimexampleenterfoundtonightcryptotonightsublimnoticesuccesssublimtheentertonighttheshouldthefoundsystemtonightuserbackspacesuccessshouldwebackspacenoticebackspacebackspacenoticewecryptobackspacebackspaceusertonightlearnsuccessmorningusertonightsuccessshouldbackspacecryptoenterentershouldsublimsystemexamplemorningcryptonoticethesuccessthebackspacenoticelearnsublimlearnsuccesscryptothesuccessenternoticecryptosystemsublimsuccesswebackspaceuserenterlearnuserwewemorningsuccesslearncryptobackspacewecryptosystemlearnenterenteruserexamplefoundsystemcryptousernoticefoundusersublimbackspacewesublimnoticemorningshouldexamplenoticecryptoshouldtonightmorningthefoundsystementerentersystemthecryptobackspacesublimlearnsuccessmorningsublimsystemcryptousersublimwesuccessmorningsublimbackspacecryptobackspacesublimthelearnsuccesssublimlearncryptoweweexamplecryptowenoticelearnfoundbackspacesystemsystemexampleshouldlearnsuccesssublimcryptobackspacetonightbackspacemorningmorningnoticeshouldnoticefoundthetheshouldtheshouldfoundfoundcryptosuccessbackspacesuccessshouldweenternoticeweweshouldmorningfoundusersuccessbackspacewenoticeusersuccessenterenterexamplelearnfoundwetonightusercryptothesublimsublimtonightsuccesslearnbackspacetonightentertonightthesublimnoticewefoundcryptobackspaceenterenterlearnlearntonightexamplesystementersublimnoticecryptoshoulduseruserbackspaceuserwesublimmorningwesystemshouldtonighttheusershouldnoticefoundusernoticeentersublimwethewefoundfoundlearnfoundwecryptosystemexamplemorningcryptocryptosublimtheexamplenoticefoundlearnwelearnmorningtheenterthesystemsublimtonightsuccesssystemlearnshouldenterbackspaceentersuccesssuccessbackspaceexamplenoticeentershouldsublimlearnbackspacetheshouldexamplelearnsystemusersublimbackspacebackspacesuccesswelearntonightexamplewecryptoenterwesystemsystemsublimexamplecryptolearnmorningsublimfoundsublimfoundbackspacefoundtonighttonightnoticesuccesssuccessexampleusersuccesstonightsublimcryptosystemweenterexamplesystemthethenoticesublimtonightbackspacenoticesystemexamplethesuccesstonightmorningsuccesstonightwenoticesublimtonightwelearntonightmorningsublimbackspaceenterthetonightenterwecryptofoundtheenternoticebackspacesuccesswesystemuserexamplebackspaceentersuccesstonightsublimwemorningsuccesssuccesswesublimsuccessnoticesublimfoundlearnlearnweexamplecryptonoticelearnweusershoulduserfoundcryptolearnfoundmorningtonightmorningmorningnoticewecryptowewesuccessfoundsublimweuserentershouldshouldshouldsublimbackspacetonightenterwesublimsuccessshouldfoundthethetonightwecryptoweenterfoundcryptoshouldcryptouseruserfoundentersublimsublimthelearntheshouldnoticebackspacefoundsuccessshouldtonightentermorningsystemmorningtonightwenoticelearnbackspaceexampleusershouldnoticesublimsublimexamplethesuccessnoticesystemmorningnoticecryptosystemsublimcryptosystemsuccessshouldmorningbackspaceshouldmorninglearnnoticenoticeshouldthewewesublimsublimnoticeusersuccessentersystemfoundshouldshouldcryptobackspaceusermorningsystemshouldshouldtonightwesublimuserfoundlearnbackspacethetonightmorningexampleuserthefoundbackspaceshouldtonightcryptocryptofounduserexamplenoticecryptousernoticethenoticeshouldweshouldfoundwemorningcryptosuccesslearnfoundtonightsublimnoticenoticewefoundwewesuccesssublimsublimcryptoweexampletonightsuccessfoundshouldsuccesstonightbackspacesystemshouldwesystemnoticebackspaceusersystembackspacewenoticelearnnoticenoticesuccesslearntonightuserlearnsuccessbackspacesuccesswesystemusercryptonoticethesystemusernoticewethesuccessweshouldfoundshouldcryptomorningtonightwethewesuccesslearntheshouldweexampletonightsuccessnoticenoticemorningfoundmorningfoundusersublimsystemsuccessbackspacesuccessmorninguserthefoundweexamplemorningsublimlearnfoundfoundnoticemorningshouldweuserwemorningexamplesuccesssuccessfoundthetheshouldweusershouldtheshouldexamplenoticefoundsuccesssystemfoundshouldsublimbackspacetonightshouldsystemtonightsuccesslearntonightsystemsublimsuccesscryptobackspacesystemsublimmorningmorningshouldmorninglearnsuccesslearnmorningusermorninglearnexamplecryptoshouldbackspacesublimshouldfoundbackspacesystemsystemweexamplesystemtonightsublimmorningmorninguserfoundcryptolearnbackspaceshouldbackspacenoticesublimfoundthecryptousershouldsuccesssystemsuccessshouldsystembackspacesublimshouldsublimsystembackspaceexampleshouldbackspacesublimnoticelearnsublimuserbackspaceusersublimsuccesssublimuserusernoticeshouldsuccessnoticenoticelearnexamplesystemweexamplesublimbackspacebackspacecryptoshouldusercryptosublimbackspacesublimshouldsystemnoticenoticethesuccesssuccesslearnsystemsublimwenoticelearnusersublimsystemusernoticeuserthesuccesslearnwelearnwenoticecryptolearncryptonoticenoticebackspacecryptothecryptousercryptobackspacesuccesslearnthesystemsuccessthesystemsystemcryptosuccessbackspacesublimlearnsublimcryptobackspacelearnsublimusersublimexamplecryptosublimsystemnoticecryptocryptousertheusernoticebackspacenoticenoticethecryptocryptosystembackspacesublimbackspacecryptocryptobackspacesystemuserthenoticesystemsystemsystemusernoticethecryptouserusersystemtheusercryptoexamplenoticecryptoexamplenoticetheexampleexamplethecryptotheusernoticetheexampleexamplecryptotheexampleexamplethenoticethecryptocryptoexampletheexamplecryptocryptothenoticeexamplecryptonoticetheexampleexampleexamplecryptocryptoexampleexamplethenoticethecryptothethethethethetheexampleexamplethetheexampletheexampletheexampleexampleexampleexampleexampleexampleexampleexampleexampleexampleexampleexampleexampleexampleexampleexampleexampleexampleexample&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;lm &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; wordninja&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;LanguageModel(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;my_dict.txt.gz&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;//&lt;/span&gt; 通过调试写出的简单字典&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;data_list &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; lm&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;split(data)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;data_count &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Counter(data_list)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;index &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;hint_list &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;15&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;16&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;m &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; data_count&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;most_common(&lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;)[::&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;]:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; index &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; hint_list:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        m &lt;span style=&#34;color:#f92672&#34;&gt;+=&lt;/span&gt; i[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    index &lt;span style=&#34;color:#f92672&#34;&gt;+=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;print(m)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;运行一下脚本：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;weshouldlearnthecrypto&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;游戏结束！得到flag：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;flag{weshouldlearnthecrypto}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;0x1-afctf2018vigenere&#34;&gt;0x1 [AFCTF2018]Vigenere&lt;/h2&gt;&#xA;&lt;p&gt;维吉尼亚密码，多表替换密码。来瞧瞧题目的附件：&lt;/p&gt;&#xA;&lt;p&gt;两个附件文件，一个加密的&lt;code&gt;flag_encode.txt&lt;/code&gt;和加密算法的&lt;code&gt;Encode.c&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;Encode.c&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;string.h&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;freopen&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;flag.txt&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;r&amp;#34;&lt;/span&gt;,stdin);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;freopen&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;flag_encode.txt&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;w&amp;#34;&lt;/span&gt;,stdout);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;char&lt;/span&gt; key[] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;/*SADLY SAYING! Key is eaten by Monster!*/&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; len &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;strlen&lt;/span&gt;(key);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;char&lt;/span&gt; ch;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; index &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt;((ch &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;getchar&lt;/span&gt;()) &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; EOF){&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt;(ch&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;a&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt;ch&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;z&amp;#39;&lt;/span&gt;){&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;putchar&lt;/span&gt;((ch&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;a&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;key[index&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;len]&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;a&amp;#39;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;26&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;a&amp;#39;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;index;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;}&lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt;(ch&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;A&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt;ch&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Z&amp;#39;&lt;/span&gt;){&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;putchar&lt;/span&gt;((ch&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;A&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;key[index&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;len]&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;a&amp;#39;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;26&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;A&amp;#39;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;index;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;}&lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;putchar&lt;/span&gt;(ch);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;flag_encode.txt&lt;/p&gt;</description>
    </item>
    <item>
      <title>BUUCTF CRYPTO (4) writeup</title>
      <link>//localhost:1313/posts/buuctf-crypto-4_writeup/</link>
      <pubDate>Sat, 26 Jun 2021 17:20:25 +0800</pubDate>
      <guid>//localhost:1313/posts/buuctf-crypto-4_writeup/</guid>
      <description>&lt;p&gt;沉浸在密码学的世界里面，缓缓浸入题目的海洋，16道crypto题目！&lt;/p&gt;&#xA;&lt;p&gt;&lt;img alt=&#34;img&#34; src=&#34;//localhost:1313/images/BUUCTF-CRYPTO-4_writeup/image-17-1024x673.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;这次的题目，难度也开始逐渐上来咯！当然不仅仅只有难度，还有脑洞！&lt;/p&gt;&#xA;&lt;p&gt;&lt;img alt=&#34;img&#34; src=&#34;//localhost:1313/images/BUUCTF-CRYPTO-4_writeup/image-18.png&#34;&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;0x0-古典密码知多少&#34;&gt;0x0 古典密码知多少&lt;/h2&gt;&#xA;&lt;p&gt;应该是考察古典密码的题目，点开题目下载附件，瞧一瞧&lt;/p&gt;&#xA;&lt;p&gt;&lt;img alt=&#34;img&#34; src=&#34;//localhost:1313/images/BUUCTF-CRYPTO-4_writeup/image-19.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;打开图片就察觉到这题可能会非常草……，果然古典的恶心，应该是三种古典密码的组合，可以清晰地看出有猪圈密码和变种圣堂武士密码，至于剩下那一种密码实在是找不到……，只能无奈地去瞧一瞧&lt;a href=&#34;https://blog.ysneko.com/archives/115/&#34;&gt;大佬的wp&lt;/a&gt;，发现是标准银河字母。根据得到的信息进行比对，蓝色的是猪圈密码，橙色的是圣堂武士密码，黑色的是标准银河字母。根据信息，进行解密得：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;FGCPFLIRTUASYON&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;看样子应该还有一层加密，最常见的古典加密方法就是凯撒加密和栅栏密码，经过尝试发现是栅栏密码，使用栅栏密码进行解密得到flag：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;FLAGISCRYPTOFUN&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;&#xA;&lt;p&gt;猪圈密码对照表：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img alt=&#34;img&#34; src=&#34;//localhost:1313/images/BUUCTF-CRYPTO-4_writeup/20201019010012173.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;圣堂武士密码对照表：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img alt=&#34;此图像的alt属性为空；文件名为20200325180259577.jpg&#34; src=&#34;//localhost:1313/images/BUUCTF-CRYPTO-4_writeup/20200325180259577.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;标准银河字母对照表：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img alt=&#34;查看源图像&#34; src=&#34;//localhost:1313/images/BUUCTF-CRYPTO-4_writeup/t01cf49fe8b6c515f04.png&#34;&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;0x1-hdctf2019bbbbbbrsa&#34;&gt;0x1 [HDCTF2019]bbbbbbrsa&lt;/h2&gt;&#xA;&lt;p&gt;看来又是熟悉的RSA题目，嘤嘤嘤~&lt;/p&gt;&#xA;&lt;p&gt;下载附件，打开发现有两个文件，一个enc文件，一个encode.py文件&lt;/p&gt;&#xA;&lt;p&gt;enc文件：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;p = 177077389675257695042507998165006460849&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;n = 37421829509887796274897162249367329400988647145613325367337968063341372726061&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;c = ==gMzYDNzIjMxUTNyIzNzIjMyYTM4MDM0gTMwEjNzgTM2UTN4cjNwIjN2QzM5ADMwIDNyMTO4UzM2cTM5kDN2MTOyUTO5YDM0czM3MjM&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;encode.py文件：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; base64 &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; b64encode &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; b32encode&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; gmpy2 &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; invert,gcd,iroot&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; Crypto.Util.number &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; binascii &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; a2b_hex,b2a_hex&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; random&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;flag &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;******************************&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;nbit &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;128&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;p &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; getPrime(nbit)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;q &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; getPrime(nbit)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;n &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; p&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;q&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;print p&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;print n&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;phi &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; (p&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;(q&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;e &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; random&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;randint(&lt;span style=&#34;color:#ae81ff&#34;&gt;50000&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;70000&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;True&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; gcd(e,phi) &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;break&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;e &lt;span style=&#34;color:#f92672&#34;&gt;-=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;c &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pow(int(b2a_hex(flag),&lt;span style=&#34;color:#ae81ff&#34;&gt;16&lt;/span&gt;),e,n)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;print b32encode(str(c))[::&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 2373740699529364991763589324200093466206785561836101840381622237225512234632&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;题目给了n、p、c而没有给e，根据python源码 e需要爆破一下，写个小脚本解决这道题目：&lt;/p&gt;</description>
    </item>
    <item>
      <title>BJDCTF 2nd CRYPTO_writeup</title>
      <link>//localhost:1313/posts/bjdctf-2nd-crypto_writeup/</link>
      <pubDate>Sat, 26 Jun 2021 17:01:41 +0800</pubDate>
      <guid>//localhost:1313/posts/bjdctf-2nd-crypto_writeup/</guid>
      <description>&lt;p&gt;BJDCTF 2nd的密码学题目有8道题目可以尝试做一做，都挺有意思的。&lt;/p&gt;&#xA;&lt;h2 id=&#34;0x0-签到-y1ng&#34;&gt;0x0 签到-y1ng&lt;/h2&gt;&#xA;&lt;p&gt;来康康题目：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;welcome to BJDCTF&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1079822948&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;QkpEe1czbGMwbWVfVDBfQkpEQ1RGfQ==&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;直接使用base64解码就好：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;BJD{W3lc0me_T0_BJDCTF}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;0x1-老文盲了&#34;&gt;0x1 老文盲了&lt;/h2&gt;&#xA;&lt;p&gt;下载附件，康康附件有什么好玩的内容：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;罼雧締眔擴灝淛匶襫黼瀬鎶軄鶛驕鳓哵眔鞹鰝&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;不认识的文字内容，不认识怎么办？找找拼音吧，查了一下发现有个汉字转拼音的工具：&lt;a href=&#34;http://www.aies.cn/pinyin.htm&#34;&gt;在线汉字转换拼音工具 (aies.cn)&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;用一下这个工具得到拼音：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;bì jí dì dà kuò hào zhè jiù shì fǔ lài gē zhí jiē jiāo lè bā dà kuò hào &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;根据拼音得到flag：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;BJD{淛匶襫黼瀬鎶軄鶛驕鳓哵}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;0x2-cat_flag&#34;&gt;0x2 cat_flag&lt;/h2&gt;&#xA;&lt;p&gt;下载附件，康康有什么有趣的内容：&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;//localhost:1313/images/BJDCTF-2nd-CRYPTO_writeup/image-13.png&#34;&gt;&lt;img alt=&#34;img&#34; src=&#34;//localhost:1313/images/BJDCTF-2nd-CRYPTO_writeup/image-13.png&#34;&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;//localhost:1313/images/BJDCTF-2nd-CRYPTO_writeup/cat.gif&#34;&gt;&lt;img alt=&#34;img&#34; src=&#34;//localhost:1313/images/BJDCTF-2nd-CRYPTO_writeup/cat.gif&#34;&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;附件内容&lt;/p&gt;&#xA;&lt;p&gt;哇哦！一个gif图片，仔细康康图片，发现猫猫挺像二进制编码的，尝试写个小脚本解决一下：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; libnum&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cat_list&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;[&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;01000010&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;01001010&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;01000100&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;01111011&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;01001101&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;00100001&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;01100001&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;00110000&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;01111110&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;01111101&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        ]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cat_c &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;join(cat_list)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;flag &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; libnum&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;n2s(int(cat_c,&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;print flag&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;运行脚本，得到flag：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;BJD{M!a0~}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;0x3-灵能精通-y1ng&#34;&gt;0x3 灵能精通-y1ng&lt;/h2&gt;&#xA;&lt;p&gt;来康康题目描述：&lt;/p&gt;</description>
    </item>
    <item>
      <title>GKCTF2020 CRYPTO_writeup</title>
      <link>//localhost:1313/posts/gkctf2020-crypto_writeup/</link>
      <pubDate>Sat, 26 Jun 2021 16:53:12 +0800</pubDate>
      <guid>//localhost:1313/posts/gkctf2020-crypto_writeup/</guid>
      <description>&lt;p&gt;GKCTF2020的密码学题目相对而言比较简单，古典密码学题目偏多。而且密码学题目也只有四道题目&lt;/p&gt;&#xA;&lt;p&gt;&lt;img alt=&#34;img&#34; src=&#34;//localhost:1313/images/GKCTF2020-Crypto_writeup/WechatIMG1350.jpeg&#34;&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;0x0-小学生的密码学&#34;&gt;0x0 小学生的密码学&lt;/h2&gt;&#xA;&lt;p&gt;打开题目描述，查看题目描述内容：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;e(x)=11x+6(mod26)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;密文：welcylk&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;（flag为base64形式）&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;看样子是仿射密码，直接逆就好了，写个python脚本解决吧：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; gmpy2&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; string&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; base64&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;m &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; gmpy2&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;invert(&lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;26&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;table &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; string&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;ascii_lowercase&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# print table&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cipher &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;welcylk&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;plainer &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; cipher:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; table&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;index(i)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    j &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; (x&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;m &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;26&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#    print j&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    plainer &lt;span style=&#34;color:#f92672&#34;&gt;+=&lt;/span&gt; table[j]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;flag &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;flag{&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;base64&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;b64encode(plainer) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;}&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;print flag&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;运行脚本，得到flag：&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;flag{c29yY2VyeQ==}&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;0x1-汉字的秘密&#34;&gt;0x1 汉字的秘密&lt;/h2&gt;&#xA;&lt;p&gt;题目描述：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;你能看出汉字的奥秘吗？ 答案形式：flag{小写字母}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;和汉字相关的密码，又是考察古典密码，估计是当铺密码&lt;/p&gt;&#xA;&lt;p&gt;下载附件，发现附件是一个doc文件，查看附件内容：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;王壮 夫工 王中 王夫 由由井 井人 夫中 夫夫 井王 土土 夫由&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;土夫 井中 士夫 王工 王人 土由 由口夫&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;看样子是当铺密码，没错了，写个脚本处理一下吧：&lt;/p&gt;</description>
    </item>
    <item>
      <title>BUUCTF CRYPTO (3) writeup</title>
      <link>//localhost:1313/posts/buuctf-crypto-3_writeup/</link>
      <pubDate>Sat, 26 Jun 2021 16:29:54 +0800</pubDate>
      <guid>//localhost:1313/posts/buuctf-crypto-3_writeup/</guid>
      <description>&lt;p&gt;同样的味道，同样的感觉，再看密码的世界！&lt;/p&gt;&#xA;&lt;p&gt;&lt;img alt=&#34;img&#34; src=&#34;//localhost:1313/images/BUUCTF-CRYPTO-3_writeup/image-136.png&#34;&gt;BUUCTF&lt;/p&gt;&#xA;&lt;p&gt;来审视一下，本次的题目：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img alt=&#34;img&#34; src=&#34;//localhost:1313/images/BUUCTF-CRYPTO-3_writeup/image-15.png&#34;&gt;题目列表&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Morse&lt;/li&gt;&#xA;&lt;li&gt;Cipher&lt;/li&gt;&#xA;&lt;li&gt;Dangerous RSA&lt;/li&gt;&#xA;&lt;li&gt;basic rsa&lt;/li&gt;&#xA;&lt;li&gt;达芬奇密码&lt;/li&gt;&#xA;&lt;li&gt;Checkln&lt;/li&gt;&#xA;&lt;li&gt;BabyRSA&lt;/li&gt;&#xA;&lt;li&gt;rsa2&lt;/li&gt;&#xA;&lt;li&gt;RSA5&lt;/li&gt;&#xA;&lt;li&gt;密码学的心声&lt;/li&gt;&#xA;&lt;li&gt;传感器&lt;/li&gt;&#xA;&lt;li&gt;这是base？&lt;/li&gt;&#xA;&lt;li&gt;rot&lt;/li&gt;&#xA;&lt;li&gt;Keyboard&lt;/li&gt;&#xA;&lt;li&gt;这是什么&lt;/li&gt;&#xA;&lt;li&gt;childRSA&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;也是同样满满的16道CTF题目，都是密码学题目哟！&lt;/p&gt;&#xA;&lt;h2 id=&#34;0x0-morse&#34;&gt;0x0 Morse&lt;/h2&gt;&#xA;&lt;p&gt;打开附件，直接就是Morse密码密文：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-..../.----/-..../-..../-..../...--/--.../....-/-..../-..../--.../-.../...--/.----/--.../...--/..---/--.../--.../....-/...../..-./--.../...--/...--/-----/...../..-./...--/...--/...--/....-/...--/...../--.../----./--.../-..&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;直接解密摩斯密码得到：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;61666374667B317327745F73305F333435797D&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;得到的16进制密文，对密文进行解密：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img alt=&#34;img&#34; src=&#34;//localhost:1313/images/BUUCTF-CRYPTO-3_writeup/image-6.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;成功得到flag：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;afctf{1s&amp;#39;t_s0_345y}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;flag：afctf{1s&amp;rsquo;t_s0_345y}&lt;/p&gt;&#xA;&lt;h2 id=&#34;0x1-cipher&#34;&gt;0x1 Cipher&lt;/h2&gt;&#xA;&lt;p&gt;打开题目描述：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;还能提示什么呢？公平的玩吧（密钥自己找） Dncnoqqfliqrpgeklwmppu 注意：得到的 flag 请包上 flag{} 提交, flag{小写字母}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;看的非常懵，考察古典密码的题目，唯一的提示就是“公平的玩吧（密钥自己找）”，实在是找不到头绪，看了大佬的WP发现是playfair加密，在网上找到了一个&lt;a href=&#34;http://rumkin.com/tools/cipher/playfair.php&#34;&gt;在线工具&lt;/a&gt;可以求解playfair加密，这里就使用在线工具进行解密&lt;/p&gt;&#xA;&lt;p&gt;&lt;img alt=&#34;img&#34; src=&#34;//localhost:1313/images/BUUCTF-CRYPTO-3_writeup/image-7-1024x516.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;得到解密结果：Itisnotaproblemhavefun&lt;/p&gt;&#xA;&lt;p&gt;故得flag: flag{itisnotaproblemhavefun}&lt;/p&gt;&#xA;&lt;h2 id=&#34;0x2-dangerous-rsa&#34;&gt;0x2 Dangerous RSA&lt;/h2&gt;&#xA;&lt;p&gt;应该是一道典型的RSA题目，直接下载附件&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;#n:  0x52d483c27cd806550fbe0e37a61af2e7cf5e0efb723dfc81174c918a27627779b21fa3c851e9e94188eaee3d5cd6f752406a43fbecb53e80836ff1e185d3ccd7782ea846c2e91a7b0808986666e0bdadbfb7bdd65670a589a4d2478e9adcafe97c6ee23614bcb2ecc23580f4d2e3cc1ecfec25c50da4bc754dde6c8bfd8d1fc16956c74d8e9196046a01dc9f3024e11461c294f29d7421140732fedacac97b8fe50999117d27943c953f18c4ff4f8c258d839764078d4b6ef6e8591e0ff5563b31a39e6374d0d41c8c46921c25e5904a817ef8e39e5c9b71225a83269693e0b7e3218fc5e5a1e8412ba16e588b3d6ac536dce39fcdfce81eec79979ea6872793L&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;#e:  0x3&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;#c:0x10652cdfaa6b63f6d7bd1109da08181e500e5643f5b240a9024bfa84d5f2cac9310562978347bb232d63e7289283871efab83d84ff5a7b64a94a79d34cfbd4ef121723ba1f663e514f83f6f01492b4e13e1bb4296d96ea5a353d3bf2edd2f449c03c4a3e995237985a596908adc741f32365&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;so,how to get the message?&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;e的值非常小，这道RSA题目应该是考察低加密指数攻击的，直接上脚本：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; gmpy2&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; libnum&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;c &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0x10652cdfaa6b63f6d7bd1109da08181e500e5643f5b240a9024bfa84d5f2cac9310562978347bb232d63e7289283871efab83d84ff5a7b64a94a79d34cfbd4ef121723ba1f663e514f83f6f01492b4e13e1bb4296d96ea5a353d3bf2edd2f449c03c4a3e995237985a596908adc741f32365&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;n &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0x52d483c27cd806550fbe0e37a61af2e7cf5e0efb723dfc81174c918a27627779b21fa3c851e9e94188eaee3d5cd6f752406a43fbecb53e80836ff1e185d3ccd7782ea846c2e91a7b0808986666e0bdadbfb7bdd65670a589a4d2478e9adcafe97c6ee23614bcb2ecc23580f4d2e3cc1ecfec25c50da4bc754dde6c8bfd8d1fc16956c74d8e9196046a01dc9f3024e11461c294f29d7421140732fedacac97b8fe50999117d27943c953f18c4ff4f8c258d839764078d4b6ef6e8591e0ff5563b31a39e6374d0d41c8c46921c25e5904a817ef8e39e5c9b71225a83269693e0b7e3218fc5e5a1e8412ba16e588b3d6ac536dce39fcdfce81eec79979ea6872793&lt;/span&gt;L&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;e &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0x3&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;m &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;i &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt;(gmpy2&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;iroot(c&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;i&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;n,&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;)[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        m &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; gmpy2&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;iroot(c&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;i&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;n,&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;)[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;break&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    i &lt;span style=&#34;color:#f92672&#34;&gt;+=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;flag &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; libnum&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;n2s(m)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;print flag&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;运行脚本，得到flag&lt;/p&gt;</description>
    </item>
    <item>
      <title>BUUCTF CRYPTO (2) writeup</title>
      <link>//localhost:1313/posts/buuctf-crypto-2_writeup/</link>
      <pubDate>Sat, 26 Jun 2021 10:34:27 +0800</pubDate>
      <guid>//localhost:1313/posts/buuctf-crypto-2_writeup/</guid>
      <description>&lt;p&gt;还是BUUCTF的题目，熟悉的感觉，再来一次！&lt;/p&gt;&#xA;&lt;p&gt;&lt;img alt=&#34;img&#34; src=&#34;//localhost:1313/images/BUUCTF-CRYPTO-2_writeup/image-136.png&#34;&gt;BUUCTF首页&lt;/p&gt;&#xA;&lt;p&gt;本次的题目大致如下：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img alt=&#34;img&#34; src=&#34;//localhost:1313/images/BUUCTF-CRYPTO-2_writeup/image-137.png&#34;&gt;CTF题目&lt;/p&gt;&#xA;&lt;p&gt;题目是16道密码学题目：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;传统知识+古典密码&lt;/li&gt;&#xA;&lt;li&gt;信息化时代的步伐&lt;/li&gt;&#xA;&lt;li&gt;RSA1&lt;/li&gt;&#xA;&lt;li&gt;凯撒？转换？呵呵！&lt;/li&gt;&#xA;&lt;li&gt;old-fashion&lt;/li&gt;&#xA;&lt;li&gt;萌萌哒的八戒&lt;/li&gt;&#xA;&lt;li&gt;权限获得第一步&lt;/li&gt;&#xA;&lt;li&gt;世上无难事&lt;/li&gt;&#xA;&lt;li&gt;RSA3&lt;/li&gt;&#xA;&lt;li&gt;RSA2&lt;/li&gt;&#xA;&lt;li&gt;异性相吸&lt;/li&gt;&#xA;&lt;li&gt;RSA&lt;/li&gt;&#xA;&lt;li&gt;还原大师&lt;/li&gt;&#xA;&lt;li&gt;Unencode&lt;/li&gt;&#xA;&lt;li&gt;robomunication&lt;/li&gt;&#xA;&lt;li&gt;RSAROLL&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;题目求解&#34;&gt;题目求解：&lt;/h2&gt;&#xA;&lt;p&gt;题目都还比较简单，正常来做就好。&lt;/p&gt;&#xA;&lt;h3 id=&#34;0x0-传统知识古典密码&#34;&gt;0x0 传统知识+古典密码&lt;/h3&gt;&#xA;&lt;p&gt;下载附件，得到题目&lt;/p&gt;&#xA;&lt;p&gt;&lt;img alt=&#34;img&#34; src=&#34;//localhost:1313/images/BUUCTF-CRYPTO-2_writeup/image-138.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;题目信息&lt;/p&gt;&#xA;&lt;p&gt;应该是考察古典密码的题目，是考察六十甲子顺序纳音表的题目&lt;/p&gt;&#xA;&lt;p&gt;这里列出六十顺序纳音表：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img alt=&#34;img&#34; src=&#34;//localhost:1313/images/BUUCTF-CRYPTO-2_writeup/image-139.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;六十甲子顺序表&lt;/p&gt;&#xA;&lt;p&gt;根据六十甲子顺序表编写python脚本：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;C_sky &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;甲乙丙丁戊己庚辛壬癸&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;C_earth &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;子丑寅卯辰巳午未申酉戌亥&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;C_dict&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;{}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; range(&lt;span style=&#34;color:#ae81ff&#34;&gt;60&lt;/span&gt;):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    C_dict[C_sky[i&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;len(C_sky)]&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;C_earth[i&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;len(C_earth)]] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; str(i&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cipher &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;辛卯，癸巳，丙戌，辛未，庚辰，癸酉，己卯，癸巳&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cipher_list &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; cipher&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;split(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;，&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;plainer &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; cipher_list:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    plainer &lt;span style=&#34;color:#f92672&#34;&gt;+=&lt;/span&gt; chr(int(C_dict[i])&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;60&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;decrype&lt;/span&gt;(cipher,key):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    cipher_len &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; len(cipher)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; cipher_len&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;key &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        key &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; cipher_len &lt;span style=&#34;color:#f92672&#34;&gt;//&lt;/span&gt; key&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        key &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; cipher_len &lt;span style=&#34;color:#f92672&#34;&gt;//&lt;/span&gt; key &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    result &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {x:&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; range(key)}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; range(cipher_len):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        a &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; i&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;key;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        result&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;update({a:result[a]&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;cipher[i]})&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    plainer&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; range(key):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        plainer &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; plainer &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; result[i]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; plainer&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;plainer_list&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;[]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; n &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; range(&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    plainer_list&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(decrype(plainer,n))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;plainer_set &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; set(plainer_list)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Caesar&lt;/span&gt;(cipher):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    dict_list &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;a&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;b&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;c&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;d&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;e&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;f&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;g&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;h&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;i&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;j&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;k&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;l&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;m&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;n&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;o&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;p&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;q&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;r&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;t&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;u&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;v&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;w&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;x&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;y&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;z&amp;#39;&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; j &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; range(&lt;span style=&#34;color:#ae81ff&#34;&gt;26&lt;/span&gt;):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        plainer &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; cipher:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; dict_list:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                plainer &lt;span style=&#34;color:#f92672&#34;&gt;+=&lt;/span&gt; dict_list[(dict_list&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;index(i)&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;j)&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;26&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                plainer &lt;span style=&#34;color:#f92672&#34;&gt;+=&lt;/span&gt; i&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        print(plainer&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;upper())&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; plainer_set:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Caesar(i&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;lower())&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    print(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;&#xA;&lt;p&gt;说明：&lt;/p&gt;</description>
    </item>
    <item>
      <title>尽沾手襟 淋满眼眶</title>
      <link>//localhost:1313/posts/crypto_rsa_attack/</link>
      <pubDate>Sat, 26 Jun 2021 08:24:32 +0800</pubDate>
      <guid>//localhost:1313/posts/crypto_rsa_attack/</guid>
      <description>&lt;h2 id=&#34;再论rsa加密算法&#34;&gt;“再论RSA加密算法”&lt;/h2&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;优美的数，自然的码&lt;/p&gt;&#xA;&lt;p&gt;侦破数的逻辑&lt;/p&gt;&#xA;&lt;p&gt;看透码的奥秘&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;RSA加密算法的算法结构是非常严谨的，具有良好的保密性和完整性。正确使用RSA加密算法，可以确保信息传输的安全性。但是根据现代密码学的研究和发现，RSA加密算法已经被攻破了。中国的王小云通过密码分析学的方法，破解了RSA加密算法。&lt;/p&gt;&#xA;&lt;p&gt;而RSA加密算法在CTF比赛中的地位仍然是不容小视的，在CTF比赛中的密码学部分是经常出没。CTF的密码学题目往往是在考察参赛者对于密码学算法的理解，往往采用的是密码分析学的知识进行密码学破解。密码学经常使用的三个角色是Alice、Bob和Eva，这三个人往往是Alice和Bob在不安全的信道上进行传输信息，而Eva是在窃听不安全信道上面信息的窃听者。而CTF比赛中，参赛者往往就需要扮演Eva的角色，根据题目给到的信息进行密码破译，来获取到Flag。&lt;/p&gt;&#xA;&lt;p&gt;说来说去，RSA加密算法，RSA加密算法其实就挺简单的，至少算法逻辑是比较简单的。但是在计算机的实际应用中，往往会有编码和其他各种加密的使用，进行综合性的安全性应用。RSA加密算法虽然是比较简单的算法过程，但是随着现代密码学的不断发展和进步，越来越多针对RSA加密算法的攻击方式，因而CTF也根据密码学研究是文献进行革新，演变出来了各种各样针对RSA攻击方法的破译算法。&lt;/p&gt;&#xA;&lt;h3 id=&#34;ctf中rsa题目类型&#34;&gt;CTF中RSA题目类型&lt;/h3&gt;&#xA;&lt;p&gt;CTF中常见的RSA题目类型有如下几类：^1^&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;公钥加密文&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;这是CTF中最常见最基础的题型，出题人会给你一个公钥文件（通常是以.pem或.pub结尾的文件）和密文（通常叫做flag.enc之类的），你需要分析公钥，提取出（N，e），通过各种攻击手段恢复私钥，然后去解密密文得到flag。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;文本文档&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;对于第一种题型，耿直点的出题人直接给你一个txt文本文档，里面直接写出了（N，e，c）所对应的十进制数值，然后你直接拿去用就行了。当然也不都是给出（N，e，c）的值，有时还会给出其他一些参数，这时就需要思考，这题具体考察的什么攻击方法&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;pcap文件&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;有时出题人会给你一个流量包，你需要用wireshark等工具分析，然后根据流量包的通信信息，分析题目考察的攻击方法，你可以提取出所有你解题需要用到的参数，然后进行解密&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;本地脚本分析&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;题目会给你一个脚本和一段密文，一般为python编写，你需要逆向文件流程，分析脚本的加密过程，写出对应的解密脚本进行解密&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;远程脚本利用&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;这种题型一般难度较大。题目会给你一个运行在远程服务器上的python脚本和服务器地址，你需要分析脚本存在的漏洞，确定攻击算法，然后编写脚本与服务器交互，得到flag&lt;/p&gt;&#xA;&lt;p&gt;密码学的题目类型也大致就是这些类型了，这些题目类型也展现出了密码学并不是孤立的存在，密码学与网络安全的各个方面都有着较大的联系，并彼此互联。&lt;/p&gt;&#xA;&lt;h3 id=&#34;数据处理&#34;&gt;数据处理&lt;/h3&gt;&#xA;&lt;p&gt;CTF比赛中的CRYPTO题目类型往往会给到一些需要进行数据处理的文件格式：&lt;/p&gt;&#xA;&lt;p&gt;基本上来说，RSA的题目都是围绕着c，m，e，d，n，p，q这几个参数展开的，但是题目一般不会直接给这种样子的参数，而是通过别的方式给出，这里就需要我们使用一些工具或者自己手工将这些参数提取出来。^2^&lt;/p&gt;&#xA;&lt;p&gt;pem文件**：**针对此类文件可以直接使用openssl提取，大概使用过的方式有：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;openssl   rsautl -encrypt -in FLAG -inkey public.pem -pubin -out flag.enc&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;openssl   rsa -pubin -text -modulus -in warmup -in public.pem&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;pcap文件：针对此类文件可以使用wireshark follow一下。这种问题一般都是写了一个交互的crypto系统，所以可能产生多轮交互。&lt;/p&gt;&#xA;&lt;p&gt;PPC模式：这种模式是上述pcap文件的交互版，会给一个端口进行一些crypto的交互，参数会在交互中给出。&lt;/p&gt;&#xA;&lt;p&gt;第二个需要处理的就是明密文，这个方法多多，不多赘述。&lt;/p&gt;&#xA;&lt;h3 id=&#34;rsa加密算法的攻击类型&#34;&gt;RSA加密算法的攻击类型&lt;/h3&gt;&#xA;&lt;p&gt;RSA加密算法题目的攻击类型是各种各样的，常见的攻击方法：&lt;/p&gt;&#xA;&lt;h4 id=&#34;模数分解&#34;&gt;模数分解&lt;/h4&gt;&#xA;&lt;p&gt;解决RSA题目最简单，最暴力，最好使的方法就是分解模数n。如果能够将n分解成功，成功得到p，q的取值，那么可求n的欧拉函数的值。&lt;/p&gt;&#xA;&lt;p&gt;模数分解往往可以使用多种方式进行分解，素数分解向来就是数学研究领域比较难以攻克的内容。而RSA算法的保密性也是由于素数分解的困难。但是有些简单的RSA题目可以使用素数分解的方法来解决，常用的工具有：foctordb，sagemath&lt;/p&gt;&#xA;&lt;h3 id=&#34;低加密指数攻击&#34;&gt;低加密指数攻击&lt;/h3&gt;&#xA;&lt;p&gt;在RSA中e也称为加密指数。由于e是可以随意选取的，选取小一点的e可以缩短加密时间，但是选取不当的话，就会造成安全问题。&lt;/p&gt;&#xA;&lt;h4 id=&#34;e3时的小明文攻击&#34;&gt;e=3时的小明文攻击&lt;/h4&gt;&#xA;&lt;p&gt;当e=3时，如果明文过小，导致明文的三次方仍然小于n，那么通过直接对密文三次开方，即可得到明文。&lt;/p&gt;&#xA;&lt;p&gt;即：&#xA;$$&#xA;c\equiv; m^e ;mod; n&#xA;$$&lt;/p&gt;&#xA;&lt;p&gt;如果e=3，且 $ m^e&amp;lt;{n} $，那么：&lt;/p&gt;&#xA;&lt;p&gt;$$&#xA;c= m^e,;e=3&#xA;$$&lt;/p&gt;</description>
    </item>
    <item>
      <title>清茶一盏 公杯斟茗</title>
      <link>//localhost:1313/posts/crypto_rsa_startup/</link>
      <pubDate>Sat, 26 Jun 2021 08:20:02 +0800</pubDate>
      <guid>//localhost:1313/posts/crypto_rsa_startup/</guid>
      <description>&lt;h1 id=&#34;清茶一盏-公杯斟茗&#34;&gt;清茶一盏 公杯斟茗&lt;/h1&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;上下运杯，左右轻斟&lt;/p&gt;&#xA;&lt;p&gt;公杯，私茗，香满阑&lt;/p&gt;&#xA;&lt;p&gt;清茶，浓茶，甘润田&lt;/p&gt;&#xA;&lt;p&gt;然君闻几何？&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;要谈谈RSA加密算法，不妨先聊聊密码学的发展历史和密码学的历程。&lt;/p&gt;&#xA;&lt;p&gt;密码学早在公元前400多年就已经产生，人类使用密码的历史几乎与使用文字的时间一样长，密码学的发展大致可以分为 3 个阶段: 1949 年之前的古典密码学阶段; 1949 年至 1975 年密码学成为科学的分支; 1976 年以后对称密钥密码算法得到进一步发展，产生了密码学的新方向—公钥密码学。1976 年，W.Diffie 和 M.Hellman 在发表的文章“密码学的新方向”中首次公开提出了公钥密码( Public-key Cryptography) 的概念。公钥密码的提出实现了加密密钥和解密密钥之间的独立，解决了对称密码体制中通信双方必须共享密钥的问题，在密码学界具有划时代的意义。^1^&lt;/p&gt;&#xA;&lt;p&gt;密码学的历史非常悠久，但是密码学的发展速度并不是非常迅速，直到信息时代的到来以及网络空间安全面临着巨大的威胁，密码学得到了前所未有的飞速发展，RSA公钥密码就是其中的代表。密码学中研究的对象有大致三类：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;对称密码&lt;/li&gt;&#xA;&lt;li&gt;非对称密码&lt;/li&gt;&#xA;&lt;li&gt;协议&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;而RSA密码属于非对称密码，公钥密码。RSA也是现代密码学的代表性的内容部分，那么非常经典的RSA密码就是一个什么样的密码呢？&lt;/p&gt;&#xA;&lt;p&gt;首先，要搞清楚什么是RSA密码：&lt;/p&gt;&#xA;&lt;p&gt;RSA加密算法是一种非对称加密算法，在公开密钥加密和电子商业中被广泛使用。RSA是由罗纳德·李维斯特（Ron Rivest）、阿迪·萨莫尔（Adi Shamir）和伦纳德·阿德曼（Leonard Adleman）在1977年一起提出的。当时他们三人都在麻省理工学院工作。RSA 就是他们三人姓氏开头字母拼在一起组成的。&lt;/p&gt;&#xA;&lt;p&gt;1973年，在英国政府通讯总部工作的数学家克利福德·柯克斯（Clifford Cocks）在一个内部文件中提出了一个与之等效的算法，但该算法被列入机密，直到1997年才得到公开。&lt;/p&gt;&#xA;&lt;p&gt;对极大整数做因数分解的难度决定了 RSA 算法的可靠性。换言之，对一极大整数做因数分解愈困难，RSA 算法愈可靠。假如有人找到一种快速因数分解的算法的话，那么用 RSA 加密的信息的可靠性就会极度下降。但找到这样的算法的可能性是非常小的。今天只有短的 RSA 钥匙才可能被强力方式破解。到目前为止，世界上还没有任何可靠的攻击RSA算法的方式。只要其钥匙的长度足够长，用RSA加密的信息实际上是不能被破解的。^2^&lt;/p&gt;&#xA;&lt;p&gt;RSA加密算法就是三个人提出的一个非对称加密的算法，是一种公钥算法。RSA加密算法进行加密的信息具有良好的安全性和可靠性，正确地使用RSA加密算法可以应对互联网上的大多数针对密码进行的攻击。&lt;/p&gt;&#xA;&lt;p&gt;RSA加密算法的具体内容是什么呢？&lt;/p&gt;&#xA;&lt;p&gt;（这里借鉴一下阮一峰的个人博客进行说明）^3^&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;（1）乙方生成两把密钥（公钥和私钥）。公钥是公开的，任何人都可以获得，私钥则是保密的。&lt;/p&gt;&#xA;&lt;p&gt;（2）甲方获取乙方的公钥，然后用它对信息加密。&lt;/p&gt;&#xA;&lt;p&gt;（3）乙方得到加密后的信息，用私钥解密。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;这是非对称加密的总体流程，简单来说就是公钥加密，私钥解密的算法模式。而RSA加密算法就是公钥算法中的代表性的算法，这经典算法的基本原理还是比较简单易懂的。&lt;/p&gt;&#xA;&lt;p&gt;RSA加密算法需要一点点的数学基础，也可以说是数论基础。&lt;/p&gt;&#xA;&lt;h3 id=&#34;数学基础&#34;&gt;数学基础&lt;/h3&gt;&#xA;&lt;p&gt;&lt;strong&gt;模运算：模运算也可以说是用取余的运算方式&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;$$ a \equiv b(mod; m)$$&lt;/p&gt;&#xA;&lt;p&gt;这是最简单的模运算公式，也可以使用简单的Python语法实现：&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;b = a % m # python语言中%可以进行取余运算&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;整数环：模运算的延申，无论模运算中的数怎么加减乘除都在模的一个整数环中。&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;在数论的概念中，模运算主要是针对自然数进行的研究，模运算也是如此。可以把整数环想象成一个钟表，钟表有12个数字，无论怎么加减乘除钟表的数字，指针始终都指在钟表的环中。&lt;/p&gt;</description>
    </item>
    <item>
      <title>BUUCTF CRYPTO (1) writeup</title>
      <link>//localhost:1313/posts/buuctf-crypto-1_writeup/</link>
      <pubDate>Sat, 26 Jun 2021 08:12:56 +0800</pubDate>
      <guid>//localhost:1313/posts/buuctf-crypto-1_writeup/</guid>
      <description>&lt;p&gt;日常刷题喝茶的平时生活，整理一下题目的思路，捋一捋密码学。&lt;/p&gt;&#xA;&lt;p&gt;BUUCTF是国内另一个比较不错的CTF的刷题平台，是由北京联合大学创建并维护的CTF大型同性交流沟通的平台，页面制作还是蛮美观滴！&lt;/p&gt;&#xA;&lt;p&gt;&lt;img alt=&#34;img&#34; src=&#34;//localhost:1313/images/BUUCTF-CRYPTO-1_writeup/image-58-1024x717.png&#34;&gt;BUUCTF页面&lt;/p&gt;&#xA;&lt;p&gt;BUUCTF的整体难度是由简单变难的一个过程，前面的题目通常都是比较简单的题目，来看看这次日常的题目：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img alt=&#34;img&#34; src=&#34;//localhost:1313/images/BUUCTF-CRYPTO-1_writeup/image-59.png&#34;&gt;题目&lt;/p&gt;&#xA;&lt;p&gt;这次是16道题目：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;MD5&lt;/li&gt;&#xA;&lt;li&gt;Url编码&lt;/li&gt;&#xA;&lt;li&gt;一眼就解密&lt;/li&gt;&#xA;&lt;li&gt;看我回旋踢&lt;/li&gt;&#xA;&lt;li&gt;摩丝&lt;/li&gt;&#xA;&lt;li&gt;password&lt;/li&gt;&#xA;&lt;li&gt;变异凯撒&lt;/li&gt;&#xA;&lt;li&gt;Quoted-printable&lt;/li&gt;&#xA;&lt;li&gt;Rabbit&lt;/li&gt;&#xA;&lt;li&gt;篱笆墙的影子&lt;/li&gt;&#xA;&lt;li&gt;RSA&lt;/li&gt;&#xA;&lt;li&gt;丢失的MD5&lt;/li&gt;&#xA;&lt;li&gt;Alice与Bob&lt;/li&gt;&#xA;&lt;li&gt;rsarsa&lt;/li&gt;&#xA;&lt;li&gt;大帝的密码武器&lt;/li&gt;&#xA;&lt;li&gt;Windows系统密码&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;md5&#34;&gt;MD5&lt;/h2&gt;&#xA;&lt;p&gt;看题目应该是考察MD5加密的暴力破解&lt;/p&gt;&#xA;&lt;p&gt;什么是MD5加密？&lt;/p&gt;&#xA;&lt;p&gt;MD5消息摘要算法（英语：MD5 Message-Digest Algorithm），一种被广泛使用的密码散列函数，可以产生出一个128位（16字节）的散列值（hash value），用于确保信息传输完整一致。MD5由美国密码学家罗纳德·李维斯特（Ronald Linn Rivest）设计，于1992年公开，用以取代MD4算法。这套算法的程序在 RFC 1321 中被加以规范。&lt;/p&gt;&#xA;&lt;p&gt;将数据（如一段文字）运算变为另一固定长度值，是散列算法的基础原理。&lt;/p&gt;&#xA;&lt;p&gt;1996年后被证实存在弱点，可以被加以破解，对于需要高度安全性的资料，专家一般建议改用其他算法，如SHA-2。2004年，证实MD5算法无法防止碰撞攻击（英语：Collision_attack），因此不适用于安全性认证，如SSL公开密钥认证或是数字签名等用途。[1]&lt;/p&gt;&#xA;&lt;p&gt;看看题目描述：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img alt=&#34;img&#34; src=&#34;//localhost:1313/images/BUUCTF-CRYPTO-1_writeup/image-60.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;题目描述&lt;/p&gt;&#xA;&lt;p&gt;下载附件，查看附件内容：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img alt=&#34;img&#34; src=&#34;//localhost:1313/images/BUUCTF-CRYPTO-1_writeup/image-61.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;附件内容&lt;/p&gt;&#xA;&lt;p&gt;附件中给出一段加密数据：e00cf25ad42683b3df678c61f42c6bda&lt;/p&gt;&#xA;&lt;p&gt;根据题目，应该是MD5加密，去&lt;a href=&#34;https://www.cmd5.com/&#34;&gt;解密网站&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;进行解密。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img alt=&#34;img&#34; src=&#34;//localhost:1313/images/BUUCTF-CRYPTO-1_writeup/image-62.png&#34;&gt;cmd5&lt;/p&gt;&#xA;&lt;p&gt;题目描述中，要求以flag{}形式进行提交，故flag就是flag{admin1}&lt;/p&gt;&#xA;&lt;p&gt;这道题目考察md5加密的相关知识，签到题。&lt;/p&gt;&#xA;&lt;h2 id=&#34;url编码&#34;&gt;Url编码&lt;/h2&gt;&#xA;&lt;p&gt;看题目应该是考察Url编码的解码&lt;/p&gt;&#xA;&lt;p&gt;什么是Url编码？&lt;/p&gt;&#xA;&lt;p&gt;百分号编码（英语：Percent-encoding），又称：URL编码（URL encoding）是特定上下文的统一资源定位符 （URL）的编码机制，实际上也适用于统一资源标志符（URI）的编码。也用于为 application/x-www-form-urlencoded MIME准备数据，因为它用于通过HTTP的请求操作（request）提交HTML表单数据。[2]&lt;/p&gt;&#xA;&lt;p&gt;看看题目描述：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img alt=&#34;img&#34; src=&#34;//localhost:1313/images/BUUCTF-CRYPTO-1_writeup/image-63.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;题目描述&lt;/p&gt;&#xA;&lt;p&gt;下载附件，查看附件内容：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img alt=&#34;img&#34; src=&#34;//localhost:1313/images/BUUCTF-CRYPTO-1_writeup/image-64.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;附件内容&lt;/p&gt;&#xA;&lt;p&gt;一段编码的字段：%66%6c%61%67%7b%61%6e%64%20%31%3d%31%7d&lt;/p&gt;&#xA;&lt;p&gt;使用url解码工具解码，也可以使用python进行解码。我个人习惯使用python脚本进行url编码解码：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; urllib.parse&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cipher &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%66%&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;6c&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%61%&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;67%7b&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%61%&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;6e&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%64%&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;20&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%31%&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;3d&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%31%&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;7d&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;print(urllib&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;parse&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;unquote(cipher))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;运行脚本就可以出结果：&lt;/p&gt;</description>
    </item>
    <item>
      <title>XCTF CRYPTO novice_writeup</title>
      <link>//localhost:1313/posts/xctf-crypto-novice_writeup/</link>
      <pubDate>Fri, 25 Jun 2021 22:01:32 +0800</pubDate>
      <guid>//localhost:1313/posts/xctf-crypto-novice_writeup/</guid>
      <description>&lt;p&gt;这次又是XCTF平台，没错，我又来无聊谈谈解题了&lt;/p&gt;&#xA;&lt;p&gt;首先先来一张XCTF的首页图片，来开启本次的writeup文章：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img alt=&#34;image-86&#34; src=&#34;//localhost:1313/images/XCTF-CRYPTO-novice_writeup/image-86.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;xctf首页&lt;/p&gt;&#xA;&lt;p&gt;这次我们要搞哪些题目的思路呢？这次还是新手区，不过是不一样的新手局，这回盘一盘密码学。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img alt=&#34;image-87&#34; src=&#34;//localhost:1313/images/XCTF-CRYPTO-novice_writeup/image-87.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;crypto新手区题目&lt;/p&gt;&#xA;&lt;p&gt;题目数量不变，依然是12道题目：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;base64&lt;/li&gt;&#xA;&lt;li&gt;Caesar&lt;/li&gt;&#xA;&lt;li&gt;Morse&lt;/li&gt;&#xA;&lt;li&gt;幂数加密&lt;/li&gt;&#xA;&lt;li&gt;Railfence&lt;/li&gt;&#xA;&lt;li&gt;不仅仅是Morse&lt;/li&gt;&#xA;&lt;li&gt;混合编码&lt;/li&gt;&#xA;&lt;li&gt;easy_RSA&lt;/li&gt;&#xA;&lt;li&gt;easychallenge&lt;/li&gt;&#xA;&lt;li&gt;转轮机加密&lt;/li&gt;&#xA;&lt;li&gt;Normal_RSA&lt;/li&gt;&#xA;&lt;li&gt;esay_ECC&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;在开始进行密码学的题目问题思路分析的开始之前，首先进行一部分知识的了解。&lt;/p&gt;&#xA;&lt;p&gt;密码学的CTF题目通常都是以附件形式来进行考察的。不像网页需要进入到平台设定的docker靶机中&lt;/p&gt;&#xA;&lt;p&gt;CTF中密码学题目目前的趋势是越来越难，而且分值越来越高。密码学的题目往往分为编码题目和密码学题目，而密码学题目又会分为古典密码学题目和现代密码学题目。&lt;/p&gt;&#xA;&lt;p&gt;密码学早在公元前400多年就已经产生，人类使用密码的历史几乎与使用文字的时间一样长，密码学的发展大致可以分为 3 个阶段: 1949 年之前的古典密码学阶段; 1949 年至 1975 年密码学成为科学的分支; 1976 年以后对称密钥密码算法得到进一步发展，产生了密码学的新方向—公钥密码学。1976 年，W.Diffie 和 M.Hellman 在发表的文章“密码学的新方向”中首次公开提出了公钥密码( Public-key Cryptography) 的概念。公钥密码的提出实现了加密密钥和解密密钥之间的独立，解决了对称密码体制中通信双方必须共享密钥的问题，在密码学界具有划时代的意义。[1]&lt;/p&gt;&#xA;&lt;p&gt;CTF中的编码题目往往会考察一些常用的编码类型，当然也会出现一些比较偏的编码方式进行编码。&lt;/p&gt;&#xA;&lt;p&gt;常用的编码方式有：ASCii编码，Base64编码，Bin编码，Hex编码，URL编码以及HTML编码。&lt;/p&gt;&#xA;&lt;p&gt;CTF中的古典密码学题目可以通过查找相关的密码学算法来了解与密码学相关内容的更多信息，通过网络方式进行解决，或者获取一些灵感。古典密码学经常会考察最基础的凯撒密码，栅栏密码，或者替换密码。这些古典密码学的处理思路和方式都比较相似，而且网络已经有很多处理这些密码的算法工具来进行加密和解密。&lt;/p&gt;&#xA;&lt;p&gt;CTF中的现代密码学题目主要会考察RSA加密算法，ECC加密算法等经典的现代密码学算法。也会有一些新的加密算法题目，这种题目往往需要进行算法分析，通过加密算法的语法逻辑来设计解密算法通过逆元的思维求出明文。&lt;/p&gt;&#xA;&lt;p&gt;关于密码学的更多内容，可以访问：http://eol.sicau.edu.cn:8080/ 来了解更多密码学相关的内容。&lt;/p&gt;&#xA;&lt;p&gt;下面就开始本回的题目！&lt;/p&gt;&#xA;&lt;h2 id=&#34;base64&#34;&gt;base64&lt;/h2&gt;&#xA;&lt;p&gt;看到这道题目，猜想这道题目可能是考察base64编码方式的密码学题目&lt;/p&gt;&#xA;&lt;p&gt;进入道题目页面，看看是否可以得到一点tip：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img alt=&#34;img&#34; src=&#34;//localhost:1313/images/XCTF-CRYPTO-novice_writeup/image.png&#34;&gt;base64题目&lt;/p&gt;&#xA;&lt;p&gt;没有什么特别的tip，只是给题目一个情景化的描述，没有太多有用信息的描述。&lt;/p&gt;&#xA;&lt;p&gt;直接下载附件内容，并打开附件文件进行查看：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img alt=&#34;img&#34; src=&#34;//localhost:1313/images/XCTF-CRYPTO-novice_writeup/image-1-1024x120.png&#34;&gt;附件文件&lt;/p&gt;&#xA;&lt;p&gt;文件内容有一段字符型文字：Y3liZXJwZWFjZXtXZWxjb21lX3RvX25ld19Xb3JsZCF9&lt;/p&gt;&#xA;&lt;p&gt;根据题目的内容，尝试使用一下base64进行解码，可以使用在线的解码工具，也可以使用python脚本进行解码。这里编写简单的python脚本进行解码：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# python3 脚本&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; base64&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cipher&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Y3liZXJwZWFjZXtXZWxjb21lX3RvX25ld19Xb3JsZCF9&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;plainer&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; base64&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;b64decode(cipher)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;print(str(plainer,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;utf-8&amp;#39;&lt;/span&gt;))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# python2 脚本&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; base64&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cipher&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Y3liZXJwZWFjZXtXZWxjb21lX3RvX25ld19Xb3JsZCF9&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;plainer&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; base64&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;b64decode(cipher)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;print(plainer)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然后运行python脚本进行解码：&lt;/p&gt;</description>
    </item>
    <item>
      <title>XCTF WEB novice Writeup</title>
      <link>//localhost:1313/posts/xctf-web-novice_writeup/</link>
      <pubDate>Fri, 25 Jun 2021 21:08:13 +0800</pubDate>
      <guid>//localhost:1313/posts/xctf-web-novice_writeup/</guid>
      <description>&lt;p&gt;来点时效性的文章，不能总闲聊吧？&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://adworld.xctf.org.cn/&#34;&gt;XCTF&lt;/a&gt;是一个国内比较常用的CTF的刷题网站，网站页面如下：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img alt=&#34;image-1&#34; src=&#34;//localhost:1313/images/XCTF-WEB-novice_writeup/image-1.png&#34;&gt;XCTF攻防世界页面&lt;/p&gt;&#xA;&lt;p&gt;初次写writeup，解题思路可能不是很明确。&lt;/p&gt;&#xA;&lt;p&gt;本次要解决的题目如下：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img alt=&#34;image-2&#34; src=&#34;//localhost:1313/images/XCTF-WEB-novice_writeup/image-2.png&#34;&gt;XCTF WEB新手区题目&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;view source&lt;/li&gt;&#xA;&lt;li&gt;robots&lt;/li&gt;&#xA;&lt;li&gt;backup&lt;/li&gt;&#xA;&lt;li&gt;cookie&lt;/li&gt;&#xA;&lt;li&gt;disabled button&lt;/li&gt;&#xA;&lt;li&gt;weak auth&lt;/li&gt;&#xA;&lt;li&gt;simple php&lt;/li&gt;&#xA;&lt;li&gt;get post&lt;/li&gt;&#xA;&lt;li&gt;xff referer&lt;/li&gt;&#xA;&lt;li&gt;webshell&lt;/li&gt;&#xA;&lt;li&gt;command execution&lt;/li&gt;&#xA;&lt;li&gt;simple js&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;view_source&#34;&gt;view_source&lt;/h2&gt;&#xA;&lt;p&gt;进入到题目页面中，获取与解题相关的信息&lt;/p&gt;&#xA;&lt;p&gt;&lt;img alt=&#34;image-3&#34; src=&#34;//localhost:1313/images/XCTF-WEB-novice_writeup/image-3.png&#34;&gt;view_source题目&lt;/p&gt;&#xA;&lt;p&gt;根据题目要求可知，鼠标右键不可用了。&lt;/p&gt;&#xA;&lt;p&gt;我们进入环境来一探究竟&lt;/p&gt;&#xA;&lt;p&gt;&lt;img alt=&#34;image-4&#34; src=&#34;//localhost:1313/images/XCTF-WEB-novice_writeup/image-4.png&#34;&gt;靶机环境&lt;/p&gt;&#xA;&lt;p&gt;靶机展示的页面非常简单，说flag不在这儿，我不大相信，尝试使用右键查看源代码&lt;/p&gt;&#xA;&lt;p&gt;发现右键不能使用。看来靶机的代码把浏览器的右键给禁用了，解决方法有两个：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;使用F12进行检查源代码&lt;/li&gt;&#xA;&lt;li&gt;开启浏览器禁用js模式&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;这里使用F12进行查看源代码（开启禁用js模式比较麻烦）&lt;/p&gt;&#xA;&lt;p&gt;&lt;img alt=&#34;image-5&#34; src=&#34;//localhost:1313/images/XCTF-WEB-novice_writeup/image-5.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;页面源代码&lt;/p&gt;&#xA;&lt;p&gt;F12成功打开页面源代码调试，可以看到flag就在源代码的注释中，简单题&lt;/p&gt;&#xA;&lt;p&gt;本题主要考察对浏览器调试器的使用技巧，没有什么难度。&lt;/p&gt;&#xA;&lt;h2 id=&#34;robots&#34;&gt;robots&lt;/h2&gt;&#xA;&lt;p&gt;进入到题目页面环境中，查看题目信息和相关描述。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img alt=&#34;image-6&#34; src=&#34;//localhost:1313/images/XCTF-WEB-novice_writeup/image-6.png&#34;&gt;robots题目&lt;/p&gt;&#xA;&lt;p&gt;题目描述中提到了robots协议，本菜鸡不知道什么是robots协议，但是可以肯定robots协议就是本题的突破点，我去搜索查找一下有关robots协议的相关信息。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img alt=&#34;image-7&#34; src=&#34;//localhost:1313/images/XCTF-WEB-novice_writeup/image-7.png&#34;&gt;robots协议相关信息&lt;/p&gt;&#xA;&lt;p&gt;根据百度百科的说明，其实robots协议就是网站目录下的robots.txt文件&lt;/p&gt;&#xA;&lt;p&gt;预备的知识信息获取到了，下面进入到靶机环境，去拿flag&lt;/p&gt;&#xA;&lt;p&gt;&lt;img alt=&#34;image-8&#34; src=&#34;//localhost:1313/images/XCTF-WEB-novice_writeup/image-8.png&#34;&gt;靶机页面&lt;/p&gt;&#xA;&lt;p&gt;靶机页面是个空白页面，在靶机地址后面输入/robots.txt尝试找到flag&lt;/p&gt;&#xA;&lt;p&gt;&lt;img alt=&#34;image-9&#34; src=&#34;//localhost:1313/images/XCTF-WEB-novice_writeup/image-9.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;进入到robots.txt页面寻找有关flag的相关信息&lt;/p&gt;&#xA;&lt;p&gt;&lt;img alt=&#34;image-10&#34; src=&#34;//localhost:1313/images/XCTF-WEB-novice_writeup/image-10.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;robots.txt页面信息&lt;/p&gt;&#xA;&lt;p&gt;根据robots.txt展示的页面信息，可知flag就在flag_1s_h3re.php文件中&lt;/p&gt;&#xA;&lt;p&gt;那就进入到这个文件中&lt;/p&gt;&#xA;&lt;p&gt;&lt;img alt=&#34;image-11&#34; src=&#34;//localhost:1313/images/XCTF-WEB-novice_writeup/image-11.png&#34;&gt;flag_1s_h3re.php文件页面&lt;/p&gt;&#xA;&lt;p&gt;成功拿到flag数据信息，题目也是简单题&lt;/p&gt;&#xA;&lt;p&gt;这道题目主要考察robots协议的相关知识以及网站目录的部分知识，也是简单题，思路非常明确&lt;/p&gt;&#xA;&lt;h2 id=&#34;backup&#34;&gt;backup&lt;/h2&gt;&#xA;&lt;p&gt;进入到题目页面中，寻找有用的题目突破信息&lt;/p&gt;&#xA;&lt;p&gt;&lt;img alt=&#34;image-12-1024x292&#34; src=&#34;//localhost:1313/images/XCTF-WEB-novice_writeup/image-12-1024x292.png&#34;&gt;backup题目&lt;/p&gt;&#xA;&lt;p&gt;根据题目描述，这道题目是在考察备份文件，备份文件是解题的关键&lt;/p&gt;&#xA;&lt;p&gt;根据备份文件的相关信息可知，备份文件通常都是后缀名.bak的文件&lt;/p&gt;&#xA;&lt;p&gt;已有知识准备好了，现在进入到靶机环境中拿flag&lt;/p&gt;&#xA;&lt;p&gt;&lt;img alt=&#34;image-13&#34; src=&#34;//localhost:1313/images/XCTF-WEB-novice_writeup/image-13.png&#34;&gt;靶机页面&lt;/p&gt;&#xA;&lt;p&gt;靶机直接就把提示摆到页面上面了，直接访问index.php.bak文件就可以了&lt;/p&gt;&#xA;&lt;p&gt;一般来说index.php的备份文件就是index.php.bak文件&lt;/p&gt;&#xA;&lt;p&gt;访问url/index.php.bak，备份文件成功被下载下来&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
