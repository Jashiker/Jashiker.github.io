<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title></title>
    <link href="/2021/06/21/post_18/"/>
    <url>/2021/06/21/post_18/</url>
    
    <content type="html"><![CDATA[<h1 id="BJDCTF-2nd-Crypto-writeup"><a href="#BJDCTF-2nd-Crypto-writeup" class="headerlink" title="BJDCTF 2nd-Crypto writeup"></a>BJDCTF 2nd-Crypto writeup</h1><p>BJDCTF 2nd的密码学题目有8道题目可以尝试做一做，都挺有意思的。</p><h2 id="0x0-签到-y1ng"><a href="#0x0-签到-y1ng" class="headerlink" title="0x0 签到-y1ng"></a>0x0 签到-y1ng</h2><p>来康康题目：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs routeros">welcome <span class="hljs-keyword">to</span> BJDCTF<br>1079822948<br><span class="hljs-attribute">QkpEe1czbGMwbWVfVDBfQkpEQ1RGfQ</span>==<br></code></pre></td></tr></table></figure><p>直接使用base64解码就好：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">BJD</span>&#123;W<span class="hljs-number">3</span>lc<span class="hljs-number">0</span>me_T<span class="hljs-number">0</span>_BJDCTF&#125;<br></code></pre></td></tr></table></figure><h2 id="0x1-老文盲了"><a href="#0x1-老文盲了" class="headerlink" title="0x1 老文盲了"></a>0x1 老文盲了</h2><p>下载附件，康康附件有什么好玩的内容：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">罼雧締眔擴灝淛匶襫黼瀬鎶軄鶛驕鳓哵眔鞹鰝<br></code></pre></td></tr></table></figure><p>不认识的文字内容，不认识怎么办？找找拼音吧，查了一下发现有个汉字转拼音的工具：<a href="http://www.aies.cn/pinyin.htm">在线汉字转换拼音工具 (aies.cn)</a></p><p>用一下这个工具得到拼音：</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm"><span class="hljs-keyword">bì </span><span class="hljs-keyword">jí </span>dì dà kuò hào zhè <span class="hljs-keyword">jiù </span><span class="hljs-keyword">shì </span>fǔ lài gē zhí <span class="hljs-keyword">jiē </span><span class="hljs-keyword">jiāo </span>lè <span class="hljs-keyword">bā </span>dà kuò hào <br></code></pre></td></tr></table></figure><p>根据拼音得到flag：</p><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dust"><span class="xml">BJD</span><span class="hljs-template-variable">&#123;淛匶襫黼瀬鎶軄鶛驕鳓哵&#125;</span><br></code></pre></td></tr></table></figure><h2 id="0x2-cat-flag"><a href="#0x2-cat-flag" class="headerlink" title="0x2 cat_flag"></a>0x2 cat_flag</h2><p>下载附件，康康有什么有趣的内容：</p><p><a href="post_18.assets/image-13.png"><img src="post_18.assets/image-13.png" alt="img"></a></p><p><a href="post_18.assets/cat.gif"><img src="post_18.assets/cat.gif" alt="img"></a>附件内容</p><p>哇哦！一个gif图片，仔细康康图片，发现猫猫挺像二进制编码的，尝试写个小脚本解决一下：</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs gradle"><span class="hljs-keyword">import</span> libnum<br>cat_list=[<br>        <span class="hljs-string">&quot;01000010&quot;</span>,<br>        <span class="hljs-string">&quot;01001010&quot;</span>,<br>        <span class="hljs-string">&quot;01000100&quot;</span>,<br>        <span class="hljs-string">&quot;01111011&quot;</span>,<br>        <span class="hljs-string">&quot;01001101&quot;</span>,<br>        <span class="hljs-string">&quot;00100001&quot;</span>,<br>        <span class="hljs-string">&quot;01100001&quot;</span>,<br>        <span class="hljs-string">&quot;00110000&quot;</span>,<br>        <span class="hljs-string">&quot;01111110&quot;</span>,<br>        <span class="hljs-string">&quot;01111101&quot;</span><br>        ]<br>cat_c = <span class="hljs-string">&quot;&quot;</span>.<span class="hljs-keyword">join</span>(cat_list)<br>flag = libnum.n2s(<span class="hljs-keyword">int</span>(cat_c,<span class="hljs-number">2</span>))<br><span class="hljs-keyword">print</span> flag<br></code></pre></td></tr></table></figure><p>运行脚本，得到flag：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">BJD</span>&#123;M!a<span class="hljs-number">0</span>~&#125;<br></code></pre></td></tr></table></figure><h2 id="0x3-灵能精通-y1ng"><a href="#0x3-灵能精通-y1ng" class="headerlink" title="0x3 灵能精通-y1ng"></a>0x3 灵能精通-y1ng</h2><p>来康康题目描述：</p><figure class="highlight sqf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sqf">身经百战的Y1ng已经达到崇高的武术境界，以自律克己来取代狂热者的战斗狂怒与传统的战斗形式。Y1ng所受的训练也进一步将他们的灵能强化到足以瓦解周遭的物质世界。借由集中这股力量，Y1ng能释放灵能能量风暴来摧毁敌人的心智、肉体与器械。<br><br>得到的 <span class="hljs-built_in">flag</span> 建议用 <span class="hljs-built_in">flag</span>&#123;&#125; 包上提交。<br></code></pre></td></tr></table></figure><p>感觉题目描述挺有意思，看来出题人也是玩星际的，下载附件瞧一瞧吧！</p><p><a href="post_18.assets/jpg.jpg"><img src="post_18.assets/jpg.jpg" alt="img"></a>附件内容</p><blockquote><p>如果附件打不开，附件的文件名是jpg，这是个hint，可以尝试把附件的文件名扩展名修改为.jpg打开</p></blockquote><p>附件内容是个图片，看样子好像猪圈密码，不过应该是猪圈密码的变形，圣堂武士密码。</p><p>圣堂武士密码是什么呢？</p><p>圣堂武士密码无非就是猪圈密码的变种，查表就可以进行求解：</p><p><img src="post_18.assets/20200325180259577.jpg" alt="img">圣堂武士密码表</p><p>根据圣堂武士密码的密码表进行求解：</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">IMKNIGHTSTEMPLAR</span><br></code></pre></td></tr></table></figure><p>得到flag：</p><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dust"><span class="xml">flag</span><span class="hljs-template-variable">&#123;IMKNIGHTSTEMPLAR&#125;</span><br></code></pre></td></tr></table></figure><h2 id="0x4-燕言燕语-y1ng"><a href="#0x4-燕言燕语-y1ng" class="headerlink" title="0x4 燕言燕语-y1ng"></a>0x4 燕言燕语-y1ng</h2><p>瞧一瞧题目描述：</p><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs dns">小燕子，穿花衣，年年春天来这里，我问燕子你为啥来，燕子说:<br><span class="hljs-number">79616</span>E7A69205A4A517B78696C7A765F6971737375686F635F73757A<span class="hljs-number">6A677D20</span><br></code></pre></td></tr></table></figure><p>看样子还是比较有趣的题目，燕子说的话像是hex编码，简单进行编码解码：</p><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dust"><span class="xml">yanzi ZJQ</span><span class="hljs-template-variable">&#123;xilzv_iqssuhoc_suzjg&#125;</span><span class="xml"> </span><br></code></pre></td></tr></table></figure><p>像是一个移位替换密码，而且还有密钥，自然而然就联想到多表替换的维吉尼亚密码，使用维吉尼亚密码进行解密，密钥是yanzi。解密得到flag：</p><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dust"><span class="xml">BJD</span><span class="hljs-template-variable">&#123;yanzi_jiushige_shabi&#125;</span><span class="xml"> </span><br></code></pre></td></tr></table></figure><h2 id="0x5-Y1nglish-y1ng"><a href="#0x5-Y1nglish-y1ng" class="headerlink" title="0x5 Y1nglish-y1ng"></a>0x5 Y1nglish-y1ng</h2><p>看看题目描述：</p><figure class="highlight sqf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sqf">Y1ng根据English居然独自发明了一门语言，就叫Y1nglish<br><br>明文都是可读的英文单词，<span class="hljs-built_in">flag</span>如果提交失败，自己读一下，把错误的单词修正，再提交(某个地方的u和i不需要调换顺序，错误点不在那里)<br><br>得到的 <span class="hljs-built_in">flag</span> 建议用 <span class="hljs-built_in">flag</span>&#123;&#125; 包上提交。<br></code></pre></td></tr></table></figure><p>又是一道有意思的古典密码学题目，下载附件看一看吧！</p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs stata">Nkbaslk <span class="hljs-keyword">ds</span> sef aslckdqdqst. Sef aslckdqdqst qo lzqtbw usf ufkoplkt zth oscpslsfko. Dpkfk zfk uqjk dwcko <span class="hljs-keyword">su</span> dscqao qt dpqo aslckdqdqst, kzap <span class="hljs-keyword">su</span> npqap qo jkfw mzoqa. <span class="hljs-keyword">Qu</span> wse zfk qtdkfkodkh qt tkdnsfw okaefqdw, nkbaslk <span class="hljs-keyword">ds</span> czfdqaqczdk. Bkd lk dkbb wse z odsfw.<br>Q nzo pzjqtv hqttkf zd z fkodzefztd npkt Pzffw Odkkbk azlk qt, pk qo z Izcztkok ufsl Izczt med tsn pk qo tsd bqjqtv qt Izczt, lzwmk Pzffw qot&#x27;<span class="hljs-keyword">d</span> z Izcztkok tzlk med pk qo fkzbbw z Izcztkok. Pzffw nsfwkh qt z bznwkf&#x27;o suuqak wkzfo zvs, med pk qo tsn nsfwqtv zd z mztw. Pk vkdo z vssh ozbzfw, med pk zbnzwo msffsno lstkw ufsl pqo ufqktho zth tkjkf czwo qd mzaw. Pzffw ozn lk zth azlk zthozdzd dpk ozlk dzmbk. Pk pzo tkjkf msffsnkh lstkw ufsl lk. Npqbk pk nzo kzdqtv, Q zowkh pql <span class="hljs-keyword">ds</span> bkth lk &amp;2. <span class="hljs-keyword">Ds</span> lw oefcfqok, pk vzjk lk dpk lstkw qllkhqzdkbw. &#x27;Q pzjk tkjkf msfffsnkh ztw lstkw ufsl wse,&#x27; Pzffw ozqh,&#x27;os tsn wse azt czw usf lw hqttkf!&#x27; Tsn q nqbb vqjk wse npzd wse nztd.<br>MIH&#123;cwdp0t_Mfed3_u0fa3_sF_geqcgeqc_ZQ_Af4aw&#125;<br></code></pre></td></tr></table></figure><p>扔到词频分析里面看一看有什么有意思的东西吧！</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs applescript">Welcome <span class="hljs-keyword">to</span> our competition. Our competition <span class="hljs-keyword">is</span> mainly <span class="hljs-keyword">for</span> freshmen <span class="hljs-keyword">and</span> sophomores. There are five types <span class="hljs-keyword">of</span> topics <span class="hljs-keyword">in</span> this competition, each <span class="hljs-keyword">of</span> which <span class="hljs-keyword">is</span> very basic. If you are interested <span class="hljs-keyword">in</span> networy security, welcome <span class="hljs-keyword">to</span> participate. Let <span class="hljs-keyword">me</span> <span class="hljs-keyword">tell</span> you a story. I was having dinner <span class="hljs-keyword">at</span> a restaurant when Harry Steele came <span class="hljs-keyword">in</span>, he <span class="hljs-keyword">is</span> a Japanese <span class="hljs-keyword">from</span> Japan <span class="hljs-keyword">but</span> now he <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> living <span class="hljs-keyword">in</span> Japan, maybe Harry <span class="hljs-keyword">isn&#x27;t</span> a Japanese <span class="hljs-built_in">name</span> <span class="hljs-keyword">but</span> he <span class="hljs-keyword">is</span> really a Japanese. Harry woryed <span class="hljs-keyword">in</span> a lawyer&#x27;s office years ago, <span class="hljs-keyword">but</span> he <span class="hljs-keyword">is</span> now worying <span class="hljs-keyword">at</span> a bany. He gets a good salary, <span class="hljs-keyword">but</span> he always borrows money <span class="hljs-keyword">from</span> his friends <span class="hljs-keyword">and</span> never pays <span class="hljs-keyword">it</span> bacy. Harry saw <span class="hljs-keyword">me</span> <span class="hljs-keyword">and</span> came andsatat <span class="hljs-keyword">the</span> same table. He has never borrowed money <span class="hljs-keyword">from</span> <span class="hljs-keyword">me</span>. While he was eating, I asyed him <span class="hljs-keyword">to</span> lend <span class="hljs-keyword">me</span> &amp;<span class="hljs-number">2.</span> To <span class="hljs-keyword">my</span> surprise, he gave <span class="hljs-keyword">me</span> <span class="hljs-keyword">the</span> money immediately. &#x27;I have never borrrowed any money <span class="hljs-keyword">from</span> you,&#x27; Harry said,&#x27;so now you can pay <span class="hljs-keyword">for</span> <span class="hljs-keyword">my</span> dinner!&#x27; Now i will give you what you want. BJD&#123;pyth0n_Brut3_f0rc3_oR_quipquip_AI_Cr4cy&#125;<br></code></pre></td></tr></table></figure><p>看到flag了，这个会是flag吗？提交发现失败了，需要找找这flag中的错误单词呀！</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">BJD</span>&#123;pyth<span class="hljs-number">0</span>n_Brut<span class="hljs-number">3</span>_f<span class="hljs-number">0</span>rc<span class="hljs-number">3</span>_oR_quipquip_AI_Cr<span class="hljs-number">4</span>cy&#125;<br></code></pre></td></tr></table></figure><p>仔细看看，可能是“Cr4cy”单词出错了，应该是“Cr4ck”，将y改成k，提交flag就成功了！</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">BJD</span>&#123;pyth<span class="hljs-number">0</span>n_Brut<span class="hljs-number">3</span>_f<span class="hljs-number">0</span>rc<span class="hljs-number">3</span>_oR_quipquip_AI_Cr<span class="hljs-number">4</span>ck&#125;<br></code></pre></td></tr></table></figure><h2 id="0x6-rsa0"><a href="#0x6-rsa0" class="headerlink" title="0x6 rsa0"></a>0x6 rsa0</h2><p>终于看到了满怀期待的RSA题目了，这个题目需要nc连接，打开kali使用nc连一下：</p><p><a href="post_18.assets/image-15.png"><img src="post_18.assets/image-15-1024x121.png" alt="img"></a>nc连接</p><p>nc获取了一些信息：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-attribute">e</span>=10477063<br><br>p+<span class="hljs-attribute">q</span>=17797691537345386808732394196803681705577569713058967120949517816644062502139647331474144263789043199741290898466578874059252164582901136367451369351827816<br><br><span class="hljs-attribute">p-q</span>=1305460584852976150632619140303339956209228307006605810393373145443065968179582165859467446565684139103706614652868361938441145461112269668449569764472982<br><br><span class="hljs-attribute">c</span>=39163440507451196385175391692403807512116238503431942217244080791066873723780085527827581471431177375753278940397090368658088104095247010524149681791425756148064544080426058546466326660811194616137132601269623860143290910244742205045745875133012498997510445277485057284790297158770357940730856250397868755440<br><br><span class="hljs-attribute">flag</span>=??????<br></code></pre></td></tr></table></figure><p>应该是一道简单的解方程题目，编写python脚本处理一下：</p><figure class="highlight nix"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs nix"><span class="hljs-built_in">import</span> sympy<br><span class="hljs-built_in">import</span> libnum<br><span class="hljs-attr">e=10477063</span><br><br><span class="hljs-attr">pq_add=17797691537345386808732394196803681705577569713058967120949517816644062502139647331474144263789043199741290898466578874059252164582901136367451369351827816</span><br><br><span class="hljs-attr">pq_reduce=1305460584852976150632619140303339956209228307006605810393373145443065968179582165859467446565684139103706614652868361938441145461112269668449569764472982</span><br><br><span class="hljs-attr">c=39163440507451196385175391692403807512116238503431942217244080791066873723780085527827581471431177375753278940397090368658088104095247010524149681791425756148064544080426058546466326660811194616137132601269623860143290910244742205045745875133012498997510445277485057284790297158770357940730856250397868755440</span><br><br><span class="hljs-attr">p</span> = sympy.Symbol(&#x27;p&#x27;)<br><span class="hljs-attr">q</span> = sympy.Symbol(&#x27;q&#x27;)<br><span class="hljs-attr">result</span> = sympy.solve([p+q-pq_add,p-q-pq_reduce],[p,q])<br><span class="hljs-attr">p</span> = int(result[p])<br><span class="hljs-attr">q</span> = int(result[q])<br><span class="hljs-attr">n</span> = p*q<br><span class="hljs-attr">phi</span> = (p-<span class="hljs-number">1</span>)*(q-<span class="hljs-number">1</span>)<br><span class="hljs-attr">d</span> = libnum.invmod(e,phi)<br><span class="hljs-attr">m</span> = pow(c,d,n)<br><span class="hljs-attr">flag</span> = libnum.n2s(m)<br>print flag<br></code></pre></td></tr></table></figure><p>运行脚本，得到flag：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">flag</span>&#123;<span class="hljs-number">562</span>f<span class="hljs-number">22</span>b<span class="hljs-number">9</span>-<span class="hljs-number">400</span>d-<span class="hljs-number">4</span>ec<span class="hljs-number">9</span>-aa<span class="hljs-number">76</span>-cd<span class="hljs-number">616</span>aac<span class="hljs-number">90</span>f<span class="hljs-number">1</span>&#125;<br></code></pre></td></tr></table></figure><h2 id="0x7-rsa1"><a href="#0x7-rsa1" class="headerlink" title="0x7 rsa1"></a>0x7 rsa1</h2><p>RSA题目，这道题目同样也需要nc进行一下连接才能看到信息，用kali连一下吧！</p><p><a href="post_18.assets/image-16.png"><img src="post_18.assets/image-16-1024x136.png" alt="img"></a>nc连接</p><p>通过nc连接可以得到如下信息：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-attribute">e</span>=13978249<br><br>p^2+q^<span class="hljs-attribute">2</span>=151633530567840355748243871671727511189658909500927250886437120180748983135296331316827920586717252371861785059822420509109728958374451816184682503257816598163005301542586939209069221866722313318463885766603690164708951344417890956348605521584906780834058177779608801835165928975303416040686406630968929531010<br><br><span class="hljs-attribute">p-q</span>=-2118796405660557026785910948566097381644078577714422876494681451389305041193569373390033403177726098952539178824903786390753214478292445023621601397654014<br><br><span class="hljs-attribute">c</span>=21916668537159292929146888499738761128788996251113020794961311339328734967861189157533491528242915717785269949067916125251437612282270561594687073731637132301015100520285933737661576838469743738400472236913537499783613239148851084298950840310231212420378731161267913668383166553730465799427960831384019988540<br><br><span class="hljs-attribute">flag</span>=??????<br></code></pre></td></tr></table></figure><p>还是比较类似的考察方法，依旧是解方程，编写一个小脚本求解吧！</p><figure class="highlight nix"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs nix"><span class="hljs-built_in">import</span> sympy<br><span class="hljs-built_in">import</span> libnum<br><span class="hljs-attr">e=13978249</span><br><br><span class="hljs-attr">f1=151633530567840355748243871671727511189658909500927250886437120180748983135296331316827920586717252371861785059822420509109728958374451816184682503257816598163005301542586939209069221866722313318463885766603690164708951344417890956348605521584906780834058177779608801835165928975303416040686406630968929531010</span><br><br><span class="hljs-attr">f2=-2118796405660557026785910948566097381644078577714422876494681451389305041193569373390033403177726098952539178824903786390753214478292445023621601397654014</span><br><br><span class="hljs-attr">c=21916668537159292929146888499738761128788996251113020794961311339328734967861189157533491528242915717785269949067916125251437612282270561594687073731637132301015100520285933737661576838469743738400472236913537499783613239148851084298950840310231212420378731161267913668383166553730465799427960831384019988540</span><br><br><br><span class="hljs-attr">p</span> = sympy.Symbol(&#x27;p&#x27;)<br><span class="hljs-attr">q</span> = sympy.Symbol(&#x27;q&#x27;)<br><span class="hljs-attr">result</span> = sympy.solve([p**<span class="hljs-number">2</span>+q**<span class="hljs-number">2</span>-f1,p-q-f2],[p,q])<br><span class="hljs-comment"># print result</span><br><span class="hljs-attr">p</span> = int(result[<span class="hljs-number">1</span>][<span class="hljs-number">0</span>])<br><span class="hljs-attr">q</span> = int(result[<span class="hljs-number">1</span>][<span class="hljs-number">1</span>])<br><span class="hljs-comment"># print p,q</span><br><br><span class="hljs-attr">n</span> = p*q<br><span class="hljs-attr">phi</span> = (p-<span class="hljs-number">1</span>)*(q-<span class="hljs-number">1</span>)<br><span class="hljs-attr">d</span> = libnum.invmod(e,phi)<br><span class="hljs-attr">m</span> = pow(c,d,n)<br><span class="hljs-attr">flag</span> = libnum.n2s(m)<br>print flag<br></code></pre></td></tr></table></figure><p>运行脚本，得到flag：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">flag</span>&#123;db<span class="hljs-number">0</span>f<span class="hljs-number">7</span>d<span class="hljs-number">6</span>f-da<span class="hljs-number">5</span>a-<span class="hljs-number">413</span>b-<span class="hljs-number">8</span>dfa-<span class="hljs-number">1</span>a<span class="hljs-number">82</span>a<span class="hljs-number">004</span>c<span class="hljs-number">083</span>&#125;<br></code></pre></td></tr></table></figure><p>BJD 2nd的Crypto题目全部求解，脑洞题目偏多，整体考察比较综合，难度相对较低。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title></title>
    <link href="/2021/06/21/post_16/"/>
    <url>/2021/06/21/post_16/</url>
    
    <content type="html"><![CDATA[<h1 id="BUUCTF-CRYPTO-33-48-writeup"><a href="#BUUCTF-CRYPTO-33-48-writeup" class="headerlink" title="BUUCTF-CRYPTO-[33-48] writeup"></a>BUUCTF-CRYPTO-[33-48] writeup</h1><p>同样的味道，同样的感觉，再看密码的世界！</p><p><a href="post_16.assets/image-136.png"><img src="post_16.assets/image-136.png" alt="img"></a>BUUCTF</p><p>来审视一下，本次的题目：</p><p><a href="post_16.assets/image-15.png"><img src="post_16.assets/image-15.png" alt="img"></a>题目列表</p><ol><li>Morse</li><li>Cipher</li><li>Dangerous RSA</li><li>basic rsa</li><li>达芬奇密码</li><li>Checkln</li><li>BabyRSA</li><li>rsa2</li><li>RSA5</li><li>密码学的心声</li><li>传感器</li><li>这是base？</li><li>rot</li><li>Keyboard</li><li>这是什么</li><li>childRSA</li></ol><p>也是同样满满的16道CTF题目，都是密码学题目哟！</p><h2 id="0x0-Morse"><a href="#0x0-Morse" class="headerlink" title="0x0 Morse"></a>0x0 Morse</h2><p>打开附件，直接就是Morse密码密文：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">-....<span class="hljs-regexp">/.----/</span>-....<span class="hljs-regexp">/-..../</span>-....<span class="hljs-regexp">/...--/</span>--...<span class="hljs-regexp">/....-/</span>-....<span class="hljs-regexp">/-..../</span>--...<span class="hljs-regexp">/-.../</span>...--<span class="hljs-regexp">/.----/</span>--...<span class="hljs-regexp">/...--/</span>..---<span class="hljs-regexp">/--.../</span>--...<span class="hljs-regexp">/....-/</span>.....<span class="hljs-regexp">/..-./</span>--...<span class="hljs-regexp">/...--/</span>...--<span class="hljs-regexp">/-----/</span>.....<span class="hljs-regexp">/..-./</span>...--<span class="hljs-regexp">/...--/</span>...--<span class="hljs-regexp">/....-/</span>...--<span class="hljs-regexp">/...../</span>--...<span class="hljs-regexp">/----./</span>--.../-..<br></code></pre></td></tr></table></figure><p>直接解密摩斯密码得到：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">61666374667B317327745F73305F333435797D<br></code></pre></td></tr></table></figure><p>得到的16进制密文，对密文进行解密：</p><p><a href="post_16.assets/image-6.png"><img src="post_16.assets/image-6.png" alt="img"></a></p><p>成功得到flag：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">afctf</span>&#123;<span class="hljs-number">1</span>s&#x27;t_s<span class="hljs-number">0</span>_<span class="hljs-number">345</span>y&#125;<br></code></pre></td></tr></table></figure><p>flag：afctf{1s’t_s0_345y}</p><h2 id="0x1-Cipher"><a href="#0x1-Cipher" class="headerlink" title="0x1 Cipher"></a>0x1 Cipher</h2><p>打开题目描述：</p><figure class="highlight sqf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sqf">还能提示什么呢？公平的玩吧（密钥自己找） Dncnoqqfliqrpgeklwmppu 注意：得到的 <span class="hljs-built_in">flag</span> 请包上 <span class="hljs-built_in">flag</span>&#123;&#125; 提交, <span class="hljs-built_in">flag</span>&#123;小写字母&#125;<br></code></pre></td></tr></table></figure><p>看的非常懵，考察古典密码的题目，唯一的提示就是“公平的玩吧（密钥自己找）”，实在是找不到头绪，看了大佬的WP发现是playfair加密，在网上找到了一个<a href="http://rumkin.com/tools/cipher/playfair.php">在线工具</a>可以求解playfair加密，这里就使用在线工具进行解密</p><p><a href="post_16.assets/image-7.png"><img src="post_16.assets/image-7-1024x516.png" alt="img"></a></p><p>得到解密结果：Itisnotaproblemhavefun</p><p>故得flag: flag{itisnotaproblemhavefun}</p><h2 id="0x2-Dangerous-RSA"><a href="#0x2-Dangerous-RSA" class="headerlink" title="0x2 Dangerous RSA"></a>0x2 Dangerous RSA</h2><p>应该是一道典型的RSA题目，直接下载附件</p><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs vala"><span class="hljs-meta">#n:  0x52d483c27cd806550fbe0e37a61af2e7cf5e0efb723dfc81174c918a27627779b21fa3c851e9e94188eaee3d5cd6f752406a43fbecb53e80836ff1e185d3ccd7782ea846c2e91a7b0808986666e0bdadbfb7bdd65670a589a4d2478e9adcafe97c6ee23614bcb2ecc23580f4d2e3cc1ecfec25c50da4bc754dde6c8bfd8d1fc16956c74d8e9196046a01dc9f3024e11461c294f29d7421140732fedacac97b8fe50999117d27943c953f18c4ff4f8c258d839764078d4b6ef6e8591e0ff5563b31a39e6374d0d41c8c46921c25e5904a817ef8e39e5c9b71225a83269693e0b7e3218fc5e5a1e8412ba16e588b3d6ac536dce39fcdfce81eec79979ea6872793L</span><br><span class="hljs-meta">#e:  0x3</span><br><span class="hljs-meta">#c:0x10652cdfaa6b63f6d7bd1109da08181e500e5643f5b240a9024bfa84d5f2cac9310562978347bb232d63e7289283871efab83d84ff5a7b64a94a79d34cfbd4ef121723ba1f663e514f83f6f01492b4e13e1bb4296d96ea5a353d3bf2edd2f449c03c4a3e995237985a596908adc741f32365</span><br>so,how to <span class="hljs-keyword">get</span> the message?<br></code></pre></td></tr></table></figure><p>e的值非常小，这道RSA题目应该是考察低加密指数攻击的，直接上脚本：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">import</span> gmpy<span class="hljs-number">2</span><br><span class="hljs-attribute">import</span> libnum<br><span class="hljs-attribute">c</span> = <span class="hljs-number">0</span>x<span class="hljs-number">10652</span>cdfaa<span class="hljs-number">6</span>b<span class="hljs-number">63</span>f<span class="hljs-number">6</span>d<span class="hljs-number">7</span>bd<span class="hljs-number">1109</span>da<span class="hljs-number">08181</span>e<span class="hljs-number">500</span>e<span class="hljs-number">5643</span>f<span class="hljs-number">5</span>b<span class="hljs-number">240</span>a<span class="hljs-number">9024</span>bfa<span class="hljs-number">84</span>d<span class="hljs-number">5</span>f<span class="hljs-number">2</span>cac<span class="hljs-number">9310562978347</span>bb<span class="hljs-number">232</span>d<span class="hljs-number">63</span>e<span class="hljs-number">7289283871</span>efab<span class="hljs-number">83</span>d<span class="hljs-number">84</span>ff<span class="hljs-number">5</span>a<span class="hljs-number">7</span>b<span class="hljs-number">64</span>a<span class="hljs-number">94</span>a<span class="hljs-number">79</span>d<span class="hljs-number">34</span>cfbd<span class="hljs-number">4</span>ef<span class="hljs-number">121723</span>ba<span class="hljs-number">1</span>f<span class="hljs-number">663</span>e<span class="hljs-number">514</span>f<span class="hljs-number">83</span>f<span class="hljs-number">6</span>f<span class="hljs-number">01492</span>b<span class="hljs-number">4</span>e<span class="hljs-number">13</span>e<span class="hljs-number">1</span>bb<span class="hljs-number">4296</span>d<span class="hljs-number">96</span>ea<span class="hljs-number">5</span>a<span class="hljs-number">353</span>d<span class="hljs-number">3</span>bf<span class="hljs-number">2</span>edd<span class="hljs-number">2</span>f<span class="hljs-number">449</span>c<span class="hljs-number">03</span>c<span class="hljs-number">4</span>a<span class="hljs-number">3</span>e<span class="hljs-number">995237985</span>a<span class="hljs-number">596908</span>adc<span class="hljs-number">741</span>f<span class="hljs-number">32365</span><br><span class="hljs-attribute">n</span> = <span class="hljs-number">0</span>x<span class="hljs-number">52</span>d<span class="hljs-number">483</span>c<span class="hljs-number">27</span>cd<span class="hljs-number">806550</span>fbe<span class="hljs-number">0</span>e<span class="hljs-number">37</span>a<span class="hljs-number">61</span>af<span class="hljs-number">2</span>e<span class="hljs-number">7</span>cf<span class="hljs-number">5</span>e<span class="hljs-number">0</span>efb<span class="hljs-number">723</span>dfc<span class="hljs-number">81174</span>c<span class="hljs-number">918</span>a<span class="hljs-number">27627779</span>b<span class="hljs-number">21</span>fa<span class="hljs-number">3</span>c<span class="hljs-number">851</span>e<span class="hljs-number">9</span>e<span class="hljs-number">94188</span>eaee<span class="hljs-number">3</span>d<span class="hljs-number">5</span>cd<span class="hljs-number">6</span>f<span class="hljs-number">752406</span>a<span class="hljs-number">43</span>fbecb<span class="hljs-number">53</span>e<span class="hljs-number">80836</span>ff<span class="hljs-number">1</span>e<span class="hljs-number">185</span>d<span class="hljs-number">3</span>ccd<span class="hljs-number">7782</span>ea<span class="hljs-number">846</span>c<span class="hljs-number">2</span>e<span class="hljs-number">91</span>a<span class="hljs-number">7</span>b<span class="hljs-number">0808986666</span>e<span class="hljs-number">0</span>bdadbfb<span class="hljs-number">7</span>bdd<span class="hljs-number">65670</span>a<span class="hljs-number">589</span>a<span class="hljs-number">4</span>d<span class="hljs-number">2478</span>e<span class="hljs-number">9</span>adcafe<span class="hljs-number">97</span>c<span class="hljs-number">6</span>ee<span class="hljs-number">23614</span>bcb<span class="hljs-number">2</span>ecc<span class="hljs-number">23580</span>f<span class="hljs-number">4</span>d<span class="hljs-number">2</span>e<span class="hljs-number">3</span>cc<span class="hljs-number">1</span>ecfec<span class="hljs-number">25</span>c<span class="hljs-number">50</span>da<span class="hljs-number">4</span>bc<span class="hljs-number">754</span>dde<span class="hljs-number">6</span>c<span class="hljs-number">8</span>bfd<span class="hljs-number">8</span>d<span class="hljs-number">1</span>fc<span class="hljs-number">16956</span>c<span class="hljs-number">74</span>d<span class="hljs-number">8</span>e<span class="hljs-number">9196046</span>a<span class="hljs-number">01</span>dc<span class="hljs-number">9</span>f<span class="hljs-number">3024</span>e<span class="hljs-number">11461</span>c<span class="hljs-number">294</span>f<span class="hljs-number">29</span>d<span class="hljs-number">7421140732</span>fedacac<span class="hljs-number">97</span>b<span class="hljs-number">8</span>fe<span class="hljs-number">50999117</span>d<span class="hljs-number">27943</span>c<span class="hljs-number">953</span>f<span class="hljs-number">18</span>c<span class="hljs-number">4</span>ff<span class="hljs-number">4</span>f<span class="hljs-number">8</span>c<span class="hljs-number">258</span>d<span class="hljs-number">839764078</span>d<span class="hljs-number">4</span>b<span class="hljs-number">6</span>ef<span class="hljs-number">6</span>e<span class="hljs-number">8591</span>e<span class="hljs-number">0</span>ff<span class="hljs-number">5563</span>b<span class="hljs-number">31</span>a<span class="hljs-number">39</span>e<span class="hljs-number">6374</span>d<span class="hljs-number">0</span>d<span class="hljs-number">41</span>c<span class="hljs-number">8</span>c<span class="hljs-number">46921</span>c<span class="hljs-number">25</span>e<span class="hljs-number">5904</span>a<span class="hljs-number">817</span>ef<span class="hljs-number">8</span>e<span class="hljs-number">39</span>e<span class="hljs-number">5</span>c<span class="hljs-number">9</span>b<span class="hljs-number">71225</span>a<span class="hljs-number">83269693</span>e<span class="hljs-number">0</span>b<span class="hljs-number">7</span>e<span class="hljs-number">3218</span>fc<span class="hljs-number">5</span>e<span class="hljs-number">5</span>a<span class="hljs-number">1</span>e<span class="hljs-number">8412</span>ba<span class="hljs-number">16</span>e<span class="hljs-number">588</span>b<span class="hljs-number">3</span>d<span class="hljs-number">6</span>ac<span class="hljs-number">536</span>dce<span class="hljs-number">39</span>fcdfce<span class="hljs-number">81</span>eec<span class="hljs-number">79979</span>ea<span class="hljs-number">6872793</span>L<br><span class="hljs-attribute">e</span> = <span class="hljs-number">0</span>x<span class="hljs-number">3</span><br><span class="hljs-attribute">m</span> = <span class="hljs-number">0</span><br><span class="hljs-attribute">i</span> = <span class="hljs-number">0</span><br><span class="hljs-attribute">while</span> <span class="hljs-number">1</span>:<br>    <span class="hljs-attribute">if</span>(gmpy<span class="hljs-number">2</span>.iroot(c+i*n,<span class="hljs-number">3</span>)[<span class="hljs-number">1</span>]==<span class="hljs-number">1</span>):<br>        <span class="hljs-attribute">m</span> = gmpy<span class="hljs-number">2</span>.iroot(c+i*n,<span class="hljs-number">3</span>)[<span class="hljs-number">0</span>]<br>        <span class="hljs-attribute">break</span><br>    <span class="hljs-attribute">i</span> += <span class="hljs-number">1</span><br><span class="hljs-attribute">flag</span> = libnum.n<span class="hljs-number">2</span>s(m)<br><span class="hljs-attribute">print</span> flag<br></code></pre></td></tr></table></figure><p>运行脚本，得到flag</p><p>flag：flag{25df8caf006ee5db94d48144c33b2c3b}</p><h2 id="0x3-basic-rsa"><a href="#0x3-basic-rsa" class="headerlink" title="0x3 basic rsa"></a>0x3 basic rsa</h2><p>应该是RSA加密算法的考察，直接看附件</p><figure class="highlight nix"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs nix"><span class="hljs-built_in">import</span> gmpy2<br>from Crypto.Util.number <span class="hljs-built_in">import</span> *<br>from binascii <span class="hljs-built_in">import</span> a2b_hex,b2a_hex<br><br><span class="hljs-attr">flag</span> = <span class="hljs-string">&quot;*****************&quot;</span><br><br><span class="hljs-attr">p</span> = <span class="hljs-number">262248800182277040650192055439906580479</span><br><span class="hljs-attr">q</span> = <span class="hljs-number">262854994239322828547925595487519915551</span><br><br><span class="hljs-attr">e</span> = <span class="hljs-number">65533</span><br><span class="hljs-attr">n</span> = p*q<br><br><br><span class="hljs-attr">c</span> = pow(int(b2a_hex(flag),<span class="hljs-number">16</span>),e,n)<br><br>print c<br><br><span class="hljs-comment"># 27565231154623519221597938803435789010285480123476977081867877272451638645710</span><br></code></pre></td></tr></table></figure><p>一个非常简单的加密脚本，简单审计一下就能得到结果。这里使用一个脚本解决：</p><figure class="highlight nix"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs nix"><span class="hljs-built_in">import</span> gmpy2<br><span class="hljs-built_in">import</span> libnum<br><br><span class="hljs-attr">c</span> = <span class="hljs-number">27565231154623519221597938803435789010285480123476977081867877272451638645710</span><br><span class="hljs-attr">e</span> = <span class="hljs-number">65533</span><br><span class="hljs-attr">p</span> = <span class="hljs-number">262248800182277040650192055439906580479</span><br><span class="hljs-attr">q</span> = <span class="hljs-number">262854994239322828547925595487519915551</span><br><br><span class="hljs-attr">n</span> = p*q<br><span class="hljs-attr">phi</span> = (p-<span class="hljs-number">1</span>)*(q-<span class="hljs-number">1</span>)<br><br><span class="hljs-attr">d</span> = gmpy2.invert(e,phi)<br><span class="hljs-attr">m</span> = pow(c,d,n)<br><span class="hljs-attr">flag</span> = libnum.n2s(m)<br>print flag<br></code></pre></td></tr></table></figure><p>运行脚本，获得flag</p><p>flag：flag{B4by_Rs4}</p><h2 id="0x4-达芬奇密码"><a href="#0x4-达芬奇密码" class="headerlink" title="0x4 达芬奇密码"></a>0x4 达芬奇密码</h2><p>查看题目描述：</p><figure class="highlight sqf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sqf">达芬奇一直是一个有争议的画家，科学家。。。小明为了研究他，从网上找到了名画蒙娜丽莎，一天深夜，小明突然从蒙娜丽莎背后的天空中看到了一串神秘的数字。顺带告诉小明达芬奇家窗台上有一串数字是关键。小明千里迢迢找到了这串数字，请将这个送分题做出来，亲，包邮哦（答案是一串<span class="hljs-number">32</span>位十进制数字） 注意：得到的 <span class="hljs-built_in">flag</span> 请包上 <span class="hljs-built_in">flag</span>&#123;&#125; 提交<br></code></pre></td></tr></table></figure><p>题目应该是和达芬奇有关系，下载附件，查看附件内容</p><figure class="highlight tap"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs tap">达芬奇隐藏在蒙娜丽莎中的数字列:1<span class="hljs-number"> 233 </span>3<span class="hljs-number"> 2584 </span>1346269<span class="hljs-number"> 144 </span>5<span class="hljs-number"> 196418 </span>21<span class="hljs-number"> 1597 </span>610<span class="hljs-number"> 377 </span>10946<span class="hljs-number"> 89 </span>514229<span class="hljs-number"> 987 </span>8<span class="hljs-number"> 55 </span>6765<span class="hljs-number"> 2178309 </span>121393<span class="hljs-number"> 317811 </span>46368<span class="hljs-number"> 4181 </span>1<span class="hljs-number"> 832040 </span>2<span class="hljs-number"> 28657 </span>75025<span class="hljs-number"> 34 </span>13<span class="hljs-number"> 17711 </span><br>记录在达芬奇窗台口的神秘数字串:36968853882116725547342176952286<br></code></pre></td></tr></table></figure><p>数字列非常像斐波那契数列，只不过是斐波那契数列进行了乱序而得到的结果。下面的密文应该是根据乱序的结果进行反向乱序得到明文，这里使用一个反乱序的脚本解决：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">True_c</span> = &#x27;<span class="hljs-number">1</span> <span class="hljs-number">1</span> <span class="hljs-number">2</span> <span class="hljs-number">3</span> <span class="hljs-number">5</span> <span class="hljs-number">8</span> <span class="hljs-number">13</span> <span class="hljs-number">21</span> <span class="hljs-number">34</span> <span class="hljs-number">55</span> <span class="hljs-number">89</span> <span class="hljs-number">144</span> <span class="hljs-number">233</span> <span class="hljs-number">377</span> <span class="hljs-number">610</span> <span class="hljs-number">987</span> <span class="hljs-number">1597</span> <span class="hljs-number">2584</span> <span class="hljs-number">4181</span> <span class="hljs-number">6765</span> <span class="hljs-number">10946</span> <span class="hljs-number">17711</span> <span class="hljs-number">28657</span> <span class="hljs-number">46368</span> <span class="hljs-number">75025</span> <span class="hljs-number">121393</span> <span class="hljs-number">196418</span> <span class="hljs-number">317811</span> <span class="hljs-number">514229</span> <span class="hljs-number">832040</span> <span class="hljs-number">1346269</span> <span class="hljs-number">2178309</span>&#x27;<br><span class="hljs-attribute">False_c</span> = &#x27;<span class="hljs-number">1</span> <span class="hljs-number">233</span> <span class="hljs-number">3</span> <span class="hljs-number">2584</span> <span class="hljs-number">1346269</span> <span class="hljs-number">144</span> <span class="hljs-number">5</span> <span class="hljs-number">196418</span> <span class="hljs-number">21</span> <span class="hljs-number">1597</span> <span class="hljs-number">610</span> <span class="hljs-number">377</span> <span class="hljs-number">10946</span> <span class="hljs-number">89</span> <span class="hljs-number">514229</span> <span class="hljs-number">987</span> <span class="hljs-number">8</span> <span class="hljs-number">55</span> <span class="hljs-number">6765</span> <span class="hljs-number">2178309</span> <span class="hljs-number">121393</span> <span class="hljs-number">317811</span> <span class="hljs-number">46368</span> <span class="hljs-number">4181</span> <span class="hljs-number">1</span> <span class="hljs-number">832040</span> <span class="hljs-number">2</span> <span class="hljs-number">28657</span> <span class="hljs-number">75025</span> <span class="hljs-number">34</span> <span class="hljs-number">13</span> <span class="hljs-number">17711</span>&#x27;<br><span class="hljs-attribute">cipher</span> = &#x27;<span class="hljs-number">36968853882116725547342176952286</span>&#x27;<br><span class="hljs-attribute">True_c</span> = True_c.split(&#x27; &#x27;)<br><span class="hljs-attribute">False_c</span> = False_c.split(&#x27; &#x27;)<br><span class="hljs-attribute">result</span> =<span class="hljs-meta"> [&#x27;a&#x27;]*32</span><br><span class="hljs-meta">for i in range(len(cipher)):</span><br><span class="hljs-meta">    if(i == 24):</span><br><span class="hljs-meta">        index = 1</span><br><span class="hljs-meta">    else:</span><br><span class="hljs-meta">        index = True_c.index(False_c[i])</span><br><span class="hljs-meta">    result[index] = cipher[i]</span><br><span class="hljs-attribute">for</span> i in result:<br>    <span class="hljs-attribute">print</span>(i,end=&#x27;&#x27;)<br></code></pre></td></tr></table></figure><p>运行脚本，得到明文</p><p>37995588256861228614165223347687</p><p>故本题的flag：flag{37995588256861228614165223347687}</p><h2 id="0x5-Checkln"><a href="#0x5-Checkln" class="headerlink" title="0x5 Checkln"></a>0x5 Checkln</h2><p>直接下载附件，查看附件</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">dikqTCpfRjA8fUBIMD5GNDkwMjNARkUwI0BFTg</span>==<br></code></pre></td></tr></table></figure><p>看样子，密文像是base64加密过的明文，首先尝试进行base64解密得到密文：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">v</span>)L_F<span class="hljs-number">0</span>&lt;&#125;@H<span class="hljs-number">0</span>&gt;F<span class="hljs-number">49023</span>@FE<span class="hljs-number">0</span>#@EN<br></code></pre></td></tr></table></figure><p>如果对这对古典密码熟悉，看到这一段应该就可以识别出这是ROT47加密的密文，使用ROT47进行解密得到FLAG：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">GXY</span>&#123;Y<span class="hljs-number">0</span>u_kNow_much_about_Rot&#125;<br></code></pre></td></tr></table></figure><p>成功得到flag：GXY{Y0u_kNow_much_about_Rot}</p><h2 id="0x6-BabyRSA"><a href="#0x6-BabyRSA" class="headerlink" title="0x6 BabyRSA"></a>0x6 BabyRSA</h2><p>RSA题目，直接下载附件，查看附件内容：</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs ada">p+q : 0<span class="hljs-type">x1232fecb92adead91613e7d9ae5e36fe6bb765317d6ed38ad890b4073539a6231a6620584cea5730b5af83a3e80cf30141282c97be4400e33307573af6b25e2ea</span><br>(p+<span class="hljs-number">1</span>)(q+<span class="hljs-number">1</span>) : 0<span class="hljs-type">x5248becef1d925d45705a7302700d6a0ffe5877fddf9451a9c1181c4d82365806085fd86fbaab08b6fc66a967b2566d743c626547203b34ea3fdb1bc06dd3bb765fd8b919e3bd2cb15bc175c9498f9d9a0e216c2dde64d81255fa4c05a1ee619fc1fc505285a239e7bc655ec6605d9693078b800ee80931a7a0c84f33c851740</span><br>e : 0<span class="hljs-type">xe6b1bee47bd63f615c7d0a43c529d219</span><br>d : 0<span class="hljs-type">x2dde7fbaed477f6d62838d55b0d0964868cf6efb2c282a5f13e6008ce7317a24cb57aec49ef0d738919f47cdcd9677cd52ac2293ec5938aa198f962678b5cd0da344453f521a69b2ac03647cdd8339f4e38cec452d54e60698833d67f9315c02ddaa4c79ebaa902c605d7bda32ce970541b2d9a17d62b52df813b2fb0c5ab1a5</span><br>enc_flag : 0<span class="hljs-type">x50ae00623211ba6089ddfae21e204ab616f6c9d294e913550af3d66e85d0c0693ed53ed55c46d8cca1d7c2ad44839030df26b70f22a8567171a759b76fe5f07b3c5a6ec89117ed0a36c0950956b9cde880c575737f779143f921d745ac3bb0e379c05d9a3cc6bf0bea8aa91e4d5e752c7eb46b2e023edbc07d24a7c460a34a9a</span><br></code></pre></td></tr></table></figure><p>应该是解方程的题目，使用python的sympy库或者sagemath库进行方程求解，这里使用一个脚本就行求解：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">import</span> sympy<br><span class="hljs-attribute">import</span> libnum<br><span class="hljs-attribute">import</span> gmpy<span class="hljs-number">2</span><br><br><span class="hljs-attribute">sum_pq</span> = <span class="hljs-number">0</span>x<span class="hljs-number">1232</span>fecb<span class="hljs-number">92</span>adead<span class="hljs-number">91613</span>e<span class="hljs-number">7</span>d<span class="hljs-number">9</span>ae<span class="hljs-number">5</span>e<span class="hljs-number">36</span>fe<span class="hljs-number">6</span>bb<span class="hljs-number">765317</span>d<span class="hljs-number">6</span>ed<span class="hljs-number">38</span>ad<span class="hljs-number">890</span>b<span class="hljs-number">4073539</span>a<span class="hljs-number">6231</span>a<span class="hljs-number">6620584</span>cea<span class="hljs-number">5730</span>b<span class="hljs-number">5</span>af<span class="hljs-number">83</span>a<span class="hljs-number">3</span>e<span class="hljs-number">80</span>cf<span class="hljs-number">30141282</span>c<span class="hljs-number">97</span>be<span class="hljs-number">4400</span>e<span class="hljs-number">33307573</span>af<span class="hljs-number">6</span>b<span class="hljs-number">25</span>e<span class="hljs-number">2</span>ea<br><span class="hljs-attribute">phi_r</span> = <span class="hljs-number">0</span>x<span class="hljs-number">5248</span>becef<span class="hljs-number">1</span>d<span class="hljs-number">925</span>d<span class="hljs-number">45705</span>a<span class="hljs-number">7302700</span>d<span class="hljs-number">6</span>a<span class="hljs-number">0</span>ffe<span class="hljs-number">5877</span>fddf<span class="hljs-number">9451</span>a<span class="hljs-number">9</span>c<span class="hljs-number">1181</span>c<span class="hljs-number">4</span>d<span class="hljs-number">82365806085</span>fd<span class="hljs-number">86</span>fbaab<span class="hljs-number">08</span>b<span class="hljs-number">6</span>fc<span class="hljs-number">66</span>a<span class="hljs-number">967</span>b<span class="hljs-number">2566</span>d<span class="hljs-number">743</span>c<span class="hljs-number">626547203</span>b<span class="hljs-number">34</span>ea<span class="hljs-number">3</span>fdb<span class="hljs-number">1</span>bc<span class="hljs-number">06</span>dd<span class="hljs-number">3</span>bb<span class="hljs-number">765</span>fd<span class="hljs-number">8</span>b<span class="hljs-number">919</span>e<span class="hljs-number">3</span>bd<span class="hljs-number">2</span>cb<span class="hljs-number">15</span>bc<span class="hljs-number">175</span>c<span class="hljs-number">9498</span>f<span class="hljs-number">9</span>d<span class="hljs-number">9</span>a<span class="hljs-number">0</span>e<span class="hljs-number">216</span>c<span class="hljs-number">2</span>dde<span class="hljs-number">64</span>d<span class="hljs-number">81255</span>fa<span class="hljs-number">4</span>c<span class="hljs-number">05</span>a<span class="hljs-number">1</span>ee<span class="hljs-number">619</span>fc<span class="hljs-number">1</span>fc<span class="hljs-number">505285</span>a<span class="hljs-number">239</span>e<span class="hljs-number">7</span>bc<span class="hljs-number">655</span>ec<span class="hljs-number">6605</span>d<span class="hljs-number">9693078</span>b<span class="hljs-number">800</span>ee<span class="hljs-number">80931</span>a<span class="hljs-number">7</span>a<span class="hljs-number">0</span>c<span class="hljs-number">84</span>f<span class="hljs-number">33</span>c<span class="hljs-number">851740</span><br><span class="hljs-attribute">e</span> = <span class="hljs-number">0</span>xe<span class="hljs-number">6</span>b<span class="hljs-number">1</span>bee<span class="hljs-number">47</span>bd<span class="hljs-number">63</span>f<span class="hljs-number">615</span>c<span class="hljs-number">7</span>d<span class="hljs-number">0</span>a<span class="hljs-number">43</span>c<span class="hljs-number">529</span>d<span class="hljs-number">219</span><br><span class="hljs-attribute">d</span> = <span class="hljs-number">0</span>x<span class="hljs-number">2</span>dde<span class="hljs-number">7</span>fbaed<span class="hljs-number">477</span>f<span class="hljs-number">6</span>d<span class="hljs-number">62838</span>d<span class="hljs-number">55</span>b<span class="hljs-number">0</span>d<span class="hljs-number">0964868</span>cf<span class="hljs-number">6</span>efb<span class="hljs-number">2</span>c<span class="hljs-number">282</span>a<span class="hljs-number">5</span>f<span class="hljs-number">13</span>e<span class="hljs-number">6008</span>ce<span class="hljs-number">7317</span>a<span class="hljs-number">24</span>cb<span class="hljs-number">57</span>aec<span class="hljs-number">49</span>ef<span class="hljs-number">0</span>d<span class="hljs-number">738919</span>f<span class="hljs-number">47</span>cdcd<span class="hljs-number">9677</span>cd<span class="hljs-number">52</span>ac<span class="hljs-number">2293</span>ec<span class="hljs-number">5938</span>aa<span class="hljs-number">198</span>f<span class="hljs-number">962678</span>b<span class="hljs-number">5</span>cd<span class="hljs-number">0</span>da<span class="hljs-number">344453</span>f<span class="hljs-number">521</span>a<span class="hljs-number">69</span>b<span class="hljs-number">2</span>ac<span class="hljs-number">03647</span>cdd<span class="hljs-number">8339</span>f<span class="hljs-number">4</span>e<span class="hljs-number">38</span>cec<span class="hljs-number">452</span>d<span class="hljs-number">54</span>e<span class="hljs-number">60698833</span>d<span class="hljs-number">67</span>f<span class="hljs-number">9315</span>c<span class="hljs-number">02</span>ddaa<span class="hljs-number">4</span>c<span class="hljs-number">79</span>ebaa<span class="hljs-number">902</span>c<span class="hljs-number">605</span>d<span class="hljs-number">7</span>bda<span class="hljs-number">32</span>ce<span class="hljs-number">970541</span>b<span class="hljs-number">2</span>d<span class="hljs-number">9</span>a<span class="hljs-number">17</span>d<span class="hljs-number">62</span>b<span class="hljs-number">52</span>df<span class="hljs-number">813</span>b<span class="hljs-number">2</span>fb<span class="hljs-number">0</span>c<span class="hljs-number">5</span>ab<span class="hljs-number">1</span>a<span class="hljs-number">5</span><br><span class="hljs-attribute">enc_flag</span> = <span class="hljs-number">0</span>x<span class="hljs-number">50</span>ae<span class="hljs-number">00623211</span>ba<span class="hljs-number">6089</span>ddfae<span class="hljs-number">21</span>e<span class="hljs-number">204</span>ab<span class="hljs-number">616</span>f<span class="hljs-number">6</span>c<span class="hljs-number">9</span>d<span class="hljs-number">294</span>e<span class="hljs-number">913550</span>af<span class="hljs-number">3</span>d<span class="hljs-number">66</span>e<span class="hljs-number">85</span>d<span class="hljs-number">0</span>c<span class="hljs-number">0693</span>ed<span class="hljs-number">53</span>ed<span class="hljs-number">55</span>c<span class="hljs-number">46</span>d<span class="hljs-number">8</span>cca<span class="hljs-number">1</span>d<span class="hljs-number">7</span>c<span class="hljs-number">2</span>ad<span class="hljs-number">44839030</span>df<span class="hljs-number">26</span>b<span class="hljs-number">70</span>f<span class="hljs-number">22</span>a<span class="hljs-number">8567171</span>a<span class="hljs-number">759</span>b<span class="hljs-number">76</span>fe<span class="hljs-number">5</span>f<span class="hljs-number">07</span>b<span class="hljs-number">3</span>c<span class="hljs-number">5</span>a<span class="hljs-number">6</span>ec<span class="hljs-number">89117</span>ed<span class="hljs-number">0</span>a<span class="hljs-number">36</span>c<span class="hljs-number">0950956</span>b<span class="hljs-number">9</span>cde<span class="hljs-number">880</span>c<span class="hljs-number">575737</span>f<span class="hljs-number">779143</span>f<span class="hljs-number">921</span>d<span class="hljs-number">745</span>ac<span class="hljs-number">3</span>bb<span class="hljs-number">0</span>e<span class="hljs-number">379</span>c<span class="hljs-number">05</span>d<span class="hljs-number">9</span>a<span class="hljs-number">3</span>cc<span class="hljs-number">6</span>bf<span class="hljs-number">0</span>bea<span class="hljs-number">8</span>aa<span class="hljs-number">91</span>e<span class="hljs-number">4</span>d<span class="hljs-number">5</span>e<span class="hljs-number">752</span>c<span class="hljs-number">7</span>eb<span class="hljs-number">46</span>b<span class="hljs-number">2</span>e<span class="hljs-number">023</span>edbc<span class="hljs-number">07</span>d<span class="hljs-number">24</span>a<span class="hljs-number">7</span>c<span class="hljs-number">460</span>a<span class="hljs-number">34</span>a<span class="hljs-number">9</span>a<br><span class="hljs-attribute">p</span> = sympy.Symbol(&#x27;p&#x27;)<br><span class="hljs-attribute">q</span> = sympy.Symbol(&#x27;q&#x27;)<br><span class="hljs-attribute">result</span> = sympy.solve([p+q-sum_pq,(p+<span class="hljs-number">1</span>)*(q+<span class="hljs-number">1</span>)-phi_r])<br><span class="hljs-attribute">q</span> = int(result[<span class="hljs-number">0</span>][q])<br><span class="hljs-attribute">p</span> = int(result[<span class="hljs-number">0</span>][p])<br><span class="hljs-attribute">n</span> = p*q<br><span class="hljs-attribute">m</span> = pow(enc_flag,d,n)<br><span class="hljs-attribute">flag</span> = libnum.n<span class="hljs-number">2</span>s(m)<br><span class="hljs-attribute">print</span> flag<br></code></pre></td></tr></table></figure><p>运行脚本，得到flag</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">flag</span>&#123;cc<span class="hljs-number">7490</span>e-<span class="hljs-number">78</span>ab-<span class="hljs-number">11</span>e<span class="hljs-number">9</span>-b<span class="hljs-number">422</span>-<span class="hljs-number">8</span>ba<span class="hljs-number">97</span>e<span class="hljs-number">5</span>da<span class="hljs-number">1</span>fd&#125;<br></code></pre></td></tr></table></figure><p>flag:flag{cc7490e-78ab-11e9-b422-8ba97e5da1fd}</p><h2 id="0x7-rsa2"><a href="#0x7-rsa2" class="headerlink" title="0x7 rsa2"></a>0x7 rsa2</h2><p>RSA题目，看看这次又有什么花样吧！直接下载附件，查看附件</p><figure class="highlight nix"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs nix"><span class="hljs-attr">N</span> = <span class="hljs-number">101991809777553253470276751399264740131157682329252673501792154507006158434432009141995367241962525705950046253400188884658262496534706438791515071885860897552736656899566915731297225817250639873643376310103992170646906557242832893914902053581087502512787303322747780420210884852166586717636559058152544979471</span><br><span class="hljs-attr">e</span> = <span class="hljs-number">46731919563265721307105180410302518676676135509737992912625092976849075262192092549323082367518264378630543338219025744820916471913696072050291990620486581719410354385121760761374229374847695148230596005409978383369740305816082770283909611956355972181848077519920922059268376958811713365106925235218265173085</span><br><br><span class="hljs-built_in">import</span> hashlib<br><span class="hljs-attr">flag</span> = <span class="hljs-string">&quot;flag&#123;&quot;</span> + hashlib.md5(hex(d)).hexdigest() + <span class="hljs-string">&quot;&#125;&quot;</span><br></code></pre></td></tr></table></figure><p>附件是一个python程序，简单审计一下，发现e的数值有不太正常，有些过大。应该是RSA低解密指数，采用<a href="https://github.com/pablocelayes/rsa-wiener-attack">rsa-wiener-attack</a>算法可以攻击得到d，拉一些github上的rsa-wiener-attack仓库，使用一个脚本解决：</p><figure class="highlight nix"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs nix"><span class="hljs-built_in">import</span> RSAwienerHacker<br><span class="hljs-built_in">import</span> hashlib<br><br><span class="hljs-attr">n</span> = <span class="hljs-number">101991809777553253470276751399264740131157682329252673501792154507006158434432009141995367241962525705950046253400188884658262496534706438791515071885860897552736656899566915731297225817250639873643376310103992170646906557242832893914902053581087502512787303322747780420210884852166586717636559058152544979471</span><br><span class="hljs-attr">e</span> = <span class="hljs-number">46731919563265721307105180410302518676676135509737992912625092976849075262192092549323082367518264378630543338219025744820916471913696072050291990620486581719410354385121760761374229374847695148230596005409978383369740305816082770283909611956355972181848077519920922059268376958811713365106925235218265173085</span><br><br><span class="hljs-attr">test_d</span> =  RSAwienerHacker.hack_RSA(e, n)<br><span class="hljs-keyword">if</span> test_d:<br>    <span class="hljs-attr">d</span> = test_d<br><br><span class="hljs-attr">flag</span> = <span class="hljs-string">&quot;flag&#123;&quot;</span> + hashlib.md5(hex(d)).hexdigest()+<span class="hljs-string">&quot;&#125;&quot;</span><br>print flag<br></code></pre></td></tr></table></figure><p>运行脚本，得到flag：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">flag</span>&#123;<span class="hljs-number">47</span>bf<span class="hljs-number">28</span>da<span class="hljs-number">384590448</span>e<span class="hljs-number">0</span>b<span class="hljs-number">0</span>d<span class="hljs-number">23909</span>a<span class="hljs-number">25</span>a<span class="hljs-number">4</span>&#125;<br></code></pre></td></tr></table></figure><p>flag:flag{47bf28da384590448e0b0d23909a25a4}</p><h2 id="0x8-RSA5"><a href="#0x8-RSA5" class="headerlink" title="0x8 RSA5"></a>0x8 RSA5</h2><p>RSA题目，看看这次又有什么有意思的变化，下载附件，查看附件：</p><figure class="highlight nix"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><code class="hljs nix"><span class="hljs-attr">m</span> = xxxxxxxx<br><span class="hljs-attr">e</span> = <span class="hljs-number">65537</span><br>========== n <span class="hljs-attr">c</span> ==========<br><span class="hljs-attr">n</span> = <span class="hljs-number">20474918894051778533305262345601880928088284471121823754049725354072477155873778848055073843345820697886641086842612486541250183965966001591342031562953561793332341641334302847996108417466360688139866505179689516589305636902137210185624650854906780037204412206309949199080005576922775773722438863762117750429327585792093447423980002401200613302943834212820909269713876683465817369158585822294675056978970612202885426436071950214538262921077409076160417436699836138801162621314845608796870206834704116707763169847387223307828908570944984416973019427529790029089766264949078038669523465243837675263858062854739083634207</span><br><span class="hljs-attr">c</span> = <span class="hljs-number">974463908243330865728978769213595400782053398596897741316275722596415018912929508637393850919224969271766388710025195039896961956062895570062146947736340342927974992616678893372744261954172873490878805483241196345881721164078651156067119957816422768524442025688079462656755605982104174001635345874022133045402344010045961111720151990412034477755851802769069309069018738541854130183692204758761427121279982002993939745343695671900015296790637464880337375511536424796890996526681200633086841036320395847725935744757993013352804650575068136129295591306569213300156333650910795946800820067494143364885842896291126137320</span><br><br><span class="hljs-attr">n</span> = <span class="hljs-number">20918819960648891349438263046954902210959146407860980742165930253781318759285692492511475263234242002509419079545644051755251311392635763412553499744506421566074721268822337321637265942226790343839856182100575539845358877493718334237585821263388181126545189723429262149630651289446553402190531135520836104217160268349688525168375213462570213612845898989694324269410202496871688649978370284661017399056903931840656757330859626183773396574056413017367606446540199973155630466239453637232936904063706551160650295031273385619470740593510267285957905801566362502262757750629162937373721291789527659531499435235261620309759</span><br><span class="hljs-attr">c</span> = <span class="hljs-number">15819636201971185538694880505120469332582151856714070824521803121848292387556864177196229718923770810072104155432038682511434979353089791861087415144087855679134383396897817458726543883093567600325204596156649305930352575274039425470836355002691145864435755333821133969266951545158052745938252574301327696822347115053614052423028835532509220641378760800693351542633860702225772638930501021571415907348128269681224178300248272689705308911282208685459668200507057183420662959113956077584781737983254788703048275698921427029884282557468334399677849962342196140864403989162117738206246183665814938783122909930082802031855</span><br><br><span class="hljs-attr">n</span> = <span class="hljs-number">25033254625906757272369609119214202033162128625171246436639570615263949157363273213121556825878737923265290579551873824374870957467163989542063489416636713654642486717219231225074115269684119428086352535471683359486248203644461465935500517901513233739152882943010177276545128308412934555830087776128355125932914846459470221102007666912211992310538890654396487111705385730502843589727289829692152177134753098649781412247065660637826282055169991824099110916576856188876975621376606634258927784025787142263367152947108720757222446686415627479703666031871635656314282727051189190889008763055811680040315277078928068816491</span><br><span class="hljs-attr">c</span> = <span class="hljs-number">4185308529416874005831230781014092407198451385955677399668501833902623478395669279404883990725184332709152443372583701076198786635291739356770857286702107156730020004358955622511061410661058982622055199736820808203841446796305284394651714430918690389486920560834672316158146453183789412140939029029324756035358081754426645160033262924330248675216108270980157049705488620263485129480952814764002865280019185127662449318324279383277766416258142275143923532168798413011028271543085249029048997452212503111742302302065401051458066585395360468447460658672952851643547193822775218387853623453638025492389122204507555908862</span><br><br><span class="hljs-attr">n</span> = <span class="hljs-number">21206968097314131007183427944486801953583151151443627943113736996776787181111063957960698092696800555044199156765677935373149598221184792286812213294617749834607696302116136745662816658117055427803315230042700695125718401646810484873064775005221089174056824724922160855810527236751389605017579545235876864998419873065217294820244730785120525126565815560229001887622837549118168081685183371092395128598125004730268910276024806808565802081366898904032509920453785997056150497645234925528883879419642189109649009132381586673390027614766605038951015853086721168018787523459264932165046816881682774229243688581614306480751</span><br><span class="hljs-attr">c</span> = <span class="hljs-number">4521038011044758441891128468467233088493885750850588985708519911154778090597136126150289041893454126674468141393472662337350361712212694867311622970440707727941113263832357173141775855227973742571088974593476302084111770625764222838366277559560887042948859892138551472680654517814916609279748365580610712259856677740518477086531592233107175470068291903607505799432931989663707477017904611426213770238397005743730386080031955694158466558475599751940245039167629126576784024482348452868313417471542956778285567779435940267140679906686531862467627238401003459101637191297209422470388121802536569761414457618258343550613</span><br><br><span class="hljs-attr">n</span> = <span class="hljs-number">22822039733049388110936778173014765663663303811791283234361230649775805923902173438553927805407463106104699773994158375704033093471761387799852168337898526980521753614307899669015931387819927421875316304591521901592823814417756447695701045846773508629371397013053684553042185725059996791532391626429712416994990889693732805181947970071429309599614973772736556299404246424791660679253884940021728846906344198854779191951739719342908761330661910477119933428550774242910420952496929605686154799487839923424336353747442153571678064520763149793294360787821751703543288696726923909670396821551053048035619499706391118145067</span><br><span class="hljs-attr">c</span> = <span class="hljs-number">15406498580761780108625891878008526815145372096234083936681442225155097299264808624358826686906535594853622687379268969468433072388149786607395396424104318820879443743112358706546753935215756078345959375299650718555759698887852318017597503074317356745122514481807843745626429797861463012940172797612589031686718185390345389295851075279278516147076602270178540690147808314172798987497259330037810328523464851895621851859027823681655934104713689539848047163088666896473665500158179046196538210778897730209572708430067658411755959866033531700460551556380993982706171848970460224304996455600503982223448904878212849412357</span><br><br><span class="hljs-attr">n</span> = <span class="hljs-number">21574139855341432908474064784318462018475296809327285532337706940126942575349507668289214078026102682252713757703081553093108823214063791518482289846780197329821139507974763780260290309600884920811959842925540583967085670848765317877441480914852329276375776405689784571404635852204097622600656222714808541872252335877037561388406257181715278766652824786376262249274960467193961956690974853679795249158751078422296580367506219719738762159965958877806187461070689071290948181949561254144310776943334859775121650186245846031720507944987838489723127897223416802436021278671237227993686791944711422345000479751187704426369</span><br><span class="hljs-attr">c</span> = <span class="hljs-number">20366856150710305124583065375297661819795242238376485264951185336996083744604593418983336285185491197426018595031444652123288461491879021096028203694136683203441692987069563513026001861435722117985559909692670907347563594578265880806540396777223906955491026286843168637367593400342814725694366078337030937104035993569672959361347287894143027186846856772983058328919716702982222142848848117768499996617588305301483085428547267337070998767412540225911508196842253134355901263861121500650240296746702967594224401650220168780537141654489215019142122284308116284129004257364769474080721001708734051264841350424152506027932</span><br><br><span class="hljs-attr">n</span> = <span class="hljs-number">25360227412666612490102161131174584819240931803196448481224305250583841439581008528535930814167338381983764991296575637231916547647970573758269411168219302370541684789125112505021148506809643081950237623703181025696585998044695691322012183660424636496897073045557400768745943787342548267386564625462143150176113656264450210023925571945961405709276631990731602198104287528528055650050486159837612279600415259486306154947514005408907590083747758953115486124865486720633820559135063440942528031402951958557630833503775112010715604278114325528993771081233535247118481765852273252404963430792898948219539473312462979849137</span><br><span class="hljs-attr">c</span> = <span class="hljs-number">19892772524651452341027595619482734356243435671592398172680379981502759695784087900669089919987705675899945658648623800090272599154590123082189645021800958076861518397325439521139995652026377132368232502108620033400051346127757698623886142621793423225749240286511666556091787851683978017506983310073524398287279737680091787333547538239920607761080988243639547570818363788673249582783015475682109984715293163137324439862838574460108793714172603672477766831356411304446881998674779501188163600664488032943639694828698984739492200699684462748922883550002652913518229322945040819064133350314536378694523704793396169065179</span><br><br><span class="hljs-attr">n</span> = <span class="hljs-number">22726855244632356029159691753451822163331519237547639938779517751496498713174588935566576167329576494790219360727877166074136496129927296296996970048082870488804456564986667129388136556137013346228118981936899510687589585286517151323048293150257036847475424044378109168179412287889340596394755257704938006162677656581509375471102546261355748251869048003600520034656264521931808651038524134185732929570384705918563982065684145766427962502261522481994191989820110575981906998431553107525542001187655703534683231777988419268338249547641335718393312295800044734534761692799403469497954062897856299031257454735945867491191</span><br><span class="hljs-attr">c</span> = <span class="hljs-number">6040119795175856407541082360023532204614723858688636724822712717572759793960246341800308149739809871234313049629732934797569781053000686185666374833978403290525072598774001731350244744590772795701065129561898116576499984185920661271123665356132719193665474235596884239108030605882777868856122378222681140570519180321286976947154042272622411303981011302586225630859892731724640574658125478287115198406253847367979883768000812605395482952698689604477719478947595442185921480652637868335673233200662100621025061500895729605305665864693122952557361871523165300206070325660353095592778037767395360329231331322823610060006</span><br><br><span class="hljs-attr">n</span> = <span class="hljs-number">23297333791443053297363000786835336095252290818461950054542658327484507406594632785712767459958917943095522594228205423428207345128899745800927319147257669773812669542782839237744305180098276578841929496345963997512244219376701787616046235397139381894837435562662591060768476997333538748065294033141610502252325292801816812268934171361934399951548627267791401089703937389012586581080223313060159456238857080740699528666411303029934807011214953984169785844714159627792016926490955282697877141614638806397689306795328344778478692084754216753425842557818899467945102646776342655167655384224860504086083147841252232760941</span><br><span class="hljs-attr">c</span> = <span class="hljs-number">5418120301208378713115889465579964257871814114515046096090960159737859076829258516920361577853903925954198406843757303687557848302302200229295916902430205737843601806700738234756698575708612424928480440868739120075888681672062206529156566421276611107802917418993625029690627196813830326369874249777619239603300605876865967515719079797115910578653562787899019310139945904958024882417833736304894765433489476234575356755275147256577387022873348906900149634940747104513850154118106991137072643308620284663108283052245750945228995387803432128842152251549292698947407663643895853432650029352092018372834457054271102816934</span><br><br><span class="hljs-attr">n</span> = <span class="hljs-number">28873667904715682722987234293493200306976947898711255064125115933666968678742598858722431426218914462903521596341771131695619382266194233561677824357379805303885993804266436810606263022097900266975250431575654686915049693091467864820512767070713267708993899899011156106766178906700336111712803362113039613548672937053397875663144794018087017731949087794894903737682383916173267421403408140967713071026001874733487295007501068871044649170615709891451856792232315526696220161842742664778581287321318748202431466508948902745314372299799561625186955234673012098210919745879882268512656931714326782335211089576897310591491</span><br><span class="hljs-attr">c</span> = <span class="hljs-number">9919880463786836684987957979091527477471444996392375244075527841865509160181666543016317634963512437510324198702416322841377489417029572388474450075801462996825244657530286107428186354172836716502817609070590929769261932324275353289939302536440310628698349244872064005700644520223727670950787924296004296883032978941200883362653993351638545860207179022472492671256630427228461852668118035317021428675954874947015197745916918197725121122236369382741533983023462255913924692806249387449016629865823316402366017657844166919846683497851842388058283856219900535567427103603869955066193425501385255322097901531402103883869</span><br><br><span class="hljs-attr">n</span> = <span class="hljs-number">22324685947539653722499932469409607533065419157347813961958075689047690465266404384199483683908594787312445528159635527833904475801890381455653807265501217328757871352731293000303438205315816792663917579066674842307743845261771032363928568844669895768092515658328756229245837025261744260614860746997931503548788509983868038349720225305730985576293675269073709022350700836510054067641753713212999954307022524495885583361707378513742162566339010134354907863733205921845038918224463903789841881400814074587261720283879760122070901466517118265422863420376921536734845502100251460872499122236686832189549698020737176683019</span><br><span class="hljs-attr">c</span> = <span class="hljs-number">1491527050203294989882829248560395184804977277747126143103957219164624187528441047837351263580440686474767380464005540264627910126483129930668344095814547592115061057843470131498075060420395111008619027199037019925701236660166563068245683975787762804359520164701691690916482591026138582705558246869496162759780878437137960823000043988227303003876410503121370163303711603359430764539337597866862508451528158285103251810058741879687875218384160282506172706613359477657215420734816049393339593755489218588796607060261897905233453268671411610631047340459487937479511933450369462213795738933019001471803157607791738538467</span><br><br><span class="hljs-attr">n</span> = <span class="hljs-number">27646746423759020111007828653264027999257847645666129907789026054594393648800236117046769112762641778865620892443423100189619327585811384883515424918752749559627553637785037359639801125213256163008431942593727931931898199727552768626775618479833029101249692573716030706695702510982283555740851047022672485743432464647772882314215176114732257497240284164016914018689044557218920300262234652840632406067273375269301008409860193180822366735877288205783314326102263756503786736122321348320031950012144905869556204017430593656052867939493633163499580242224763404338807022510136217187779084917996171602737036564991036724299</span><br><span class="hljs-attr">c</span> = <span class="hljs-number">21991524128957260536043771284854920393105808126700128222125856775506885721971193109361315961129190814674647136464887087893990660894961612838205086401018885457667488911898654270235561980111174603323721280911197488286585269356849579263043456316319476495888696219344219866516861187654180509247881251251278919346267129904739277386289240394384575124331135655943513831009934023397457082184699737734388823763306805326430395849935770213817533387235486307008892410920611669932693018165569417445885810825749609388627231235840912644654685819620931663346297596334834498661789016450371769203650109994771872404185770230172934013971</span><br><br><span class="hljs-attr">n</span> = <span class="hljs-number">20545487405816928731738988374475012686827933709789784391855706835136270270933401203019329136937650878386117187776530639342572123237188053978622697282521473917978282830432161153221216194169879669541998840691383025487220850872075436064308499924958517979727954402965612196081404341651517326364041519250125036424822634354268773895465698920883439222996581226358595873993976604699830613932320720554130011671297944433515047180565484495191003887599891289037982010216357831078328159028953222056918189365840711588671093333013117454034313622855082795813122338562446223041211192277089225078324682108033843023903550172891959673551</span><br><span class="hljs-attr">c</span> = <span class="hljs-number">14227439188191029461250476692790539654619199888487319429114414557975376308688908028140817157205579804059783807641305577385724758530138514972962209062230576107406142402603484375626077345190883094097636019771377866339531511965136650567412363889183159616188449263752475328663245311059988337996047359263288837436305588848044572937759424466586870280512424336807064729894515840552404756879590698797046333336445465120445087587621743906624279621779634772378802959109714400516183718323267273824736540168545946444437586299214110424738159957388350785999348535171553569373088251552712391288365295267665691357719616011613628772175</span><br><br><span class="hljs-attr">n</span> = <span class="hljs-number">27359727711584277234897157724055852794019216845229798938655814269460046384353568138598567755392559653460949444557879120040796798142218939251844762461270251672399546774067275348291003962551964648742053215424620256999345448398805278592777049668281558312871773979931343097806878701114056030041506690476954254006592555275342579529625231194321357904668512121539514880704046969974898412095675082585315458267591016734924646294357666924293908418345508902112711075232047998775303603175363964055048589769318562104883659754974955561725694779754279606726358588862479198815999276839234952142017210593887371950645418417355912567987</span><br><span class="hljs-attr">c</span> = <span class="hljs-number">3788529784248255027081674540877016372807848222776887920453488878247137930578296797437647922494510483767651150492933356093288965943741570268943861987024276610712717409139946409513963043114463933146088430004237747163422802959250296602570649363016151581364006795894226599584708072582696996740518887606785460775851029814280359385763091078902301957226484620428513604630585131511167015763190591225884202772840456563643159507805711004113901417503751181050823638207803533111429510911616160851391754754434764819568054850823810901159821297849790005646102129354035735350124476838786661542089045509656910348676742844957008857457</span><br><br><span class="hljs-attr">n</span> = <span class="hljs-number">27545937603751737248785220891735796468973329738076209144079921449967292572349424539010502287564030116831261268197384650511043068738911429169730640135947800885987171539267214611907687570587001933829208655100828045651391618089603288456570334500533178695238407684702251252671579371018651675054368606282524673369983034682330578308769886456335818733827237294570476853673552685361689144261552895758266522393004116017849397346259119221063821663280935820440671825601452417487330105280889520007917979115568067161590058277418371493228631232457972494285014767469893647892888681433965857496916110704944758070268626897045014782837</span><br><span class="hljs-attr">c</span> = <span class="hljs-number">14069112970608895732417039977542732665796601893762401500878786871680645798754783315693511261740059725171342404186571066972546332813667711135661176659424619936101038903439144294886379322591635766682645179888058617577572409307484708171144488708410543462972008179994594087473935638026612679389759756811490524127195628741262871304427908481214992471182859308828778119005750928935764927967212343526503410515793717201360360437981322576798056276657140363332700714732224848346808963992302409037706094588964170239521193589470070839790404597252990818583717869140229811712295005710540476356743378906642267045723633874011649259842</span><br><br><span class="hljs-attr">n</span> = <span class="hljs-number">25746162075697911560263181791216433062574178572424600336856278176112733054431463253903433128232709054141607100891177804285813783247735063753406524678030561284491481221681954564804141454666928657549670266775659862814924386584148785453647316864935942772919140563506305666207816897601862713092809234429096584753263707828899780979223118181009293655563146526792388913462557306433664296966331469906428665127438829399703002867800269947855869262036714256550075520193125987011945192273531732276641728008406855871598678936585324782438668746810516660152018244253008092470066555687277138937298747951929576231036251316270602513451</span><br><span class="hljs-attr">c</span> = <span class="hljs-number">17344284860275489477491525819922855326792275128719709401292545608122859829827462088390044612234967551682879954301458425842831995513832410355328065562098763660326163262033200347338773439095709944202252494552172589503915965931524326523663289777583152664722241920800537867331030623906674081852296232306336271542832728410803631170229642717524942332390842467035143631504401140727083270732464237443915263865880580308776111219718961746378842924644142127243573824972533819479079381023103585862099063382129757560124074676150622288706094110075567706403442920696472627797607697962873026112240527498308535903232663939028587036724</span><br><br><span class="hljs-attr">n</span> = <span class="hljs-number">23288486934117120315036919418588136227028485494137930196323715336208849327833965693894670567217971727921243839129969128783853015760155446770590696037582684845937132790047363216362087277861336964760890214059732779383020349204803205725870225429985939570141508220041286857810048164696707018663758416807708910671477407366098883430811861933014973409390179948577712579749352299440310543689035651465399867908428885541237776143404376333442949397063249223702355051571790555151203866821867908531733788784978667478707672984539512431549558672467752712004519300318999208102076732501412589104904734983789895358753664077486894529499</span><br><span class="hljs-attr">c</span> = <span class="hljs-number">10738254418114076548071448844964046468141621740603214384986354189105236977071001429271560636428075970459890958274941762528116445171161040040833357876134689749846940052619392750394683504816081193432350669452446113285638982551762586656329109007214019944975816434827768882704630460001209452239162896576191876324662333153835533956600295255158377025198426950944040643235430211011063586032467724329735785947372051759042138171054165854842472990583800899984893232549092766400510300083585513014171220423103452292891496141806956300396540682381668367564569427813092064053993103537635994311143010708814851867239706492577203899024</span><br><br><span class="hljs-attr">n</span> = <span class="hljs-number">19591441383958529435598729113936346657001352578357909347657257239777540424811749817783061233235817916560689138344041497732749011519736303038986277394036718790971374656832741054547056417771501234494768509780369075443550907847298246275717420562375114406055733620258777905222169702036494045086017381084272496162770259955811174440490126514747876661317750649488774992348005044389081101686016446219264069971370646319546429782904810063020324704138495608761532563310699753322444871060383693044481932265801505819646998535192083036872551683405766123968487907648980900712118052346174533513978009131757167547595857552370586353973</span><br><span class="hljs-attr">c</span> = <span class="hljs-number">3834917098887202931981968704659119341624432294759361919553937551053499607440333234018189141970246302299385742548278589896033282894981200353270637127213483172182529890495903425649116755901631101665876301799865612717750360089085179142750664603454193642053016384714515855868368723508922271767190285521137785688075622832924829248362774476456232826885801046969384519549385428259591566716890844604696258783639390854153039329480726205147199247183621535172450825979047132495439603840806501254997167051142427157381799890725323765558803808030109468048682252028720241357478614704610089120810367192414352034177484688502364022887</span><br><br><span class="hljs-attr">n</span> = <span class="hljs-number">19254242571588430171308191757871261075358521158624745702744057556054652332495961196795369630484782930292003238730267396462491733557715379956969694238267908985251699834707734400775311452868924330866502429576951934279223234676654749272932769107390976321208605516299532560054081301829440688796904635446986081691156842271268059970762004259219036753174909942343204432795076377432107630203621754552804124408792358220071862369443201584155711893388877350138023238624566616551246804054720492816226651467017802504094070614892556444425915920269485861799532473383304622064493223627552558344088839860178294589481899206318863310603</span><br><span class="hljs-attr">c</span> = <span class="hljs-number">6790553533991297205804561991225493105312398825187682250780197510784765226429663284220400480563039341938599783346724051076211265663468643826430109013245014035811178295081939958687087477312867720289964506097819762095244479129359998867671811819738196687884696680463458661374310994610760009474264115750204920875527434486437536623589684519411519100170291423367424938566820315486507444202022408003879118465761273916755290898112991525546114191064022991329724370064632569903856189236177894007766690782630247443895358893983735822824243487181851098787271270256780891094405121947631088729917398317652320497765101790132679171889</span><br><br><span class="hljs-attr">n</span> = <span class="hljs-number">26809700251171279102974962949184411136459372267620535198421449833298448092580497485301953796619185339316064387798092220298630428207556482805739803420279056191194360049651767412572609187680508073074653291350998253938793269214230457117194434853888765303403385824786231859450351212449404870776320297419712486574804794325602760347306432927281716160368830187944940128907971027838510079519466846176106565164730963988892400240063089397720414921398936399927948235195085202171264728816184532651138221862240969655185596628285814057082448321749567943946273776184657698104465062749244327092588237927996419620170254423837876806659</span><br><span class="hljs-attr">c</span> = <span class="hljs-number">386213556608434013769864727123879412041991271528990528548507451210692618986652870424632219424601677524265011043146748309774067894985069288067952546139416819404039688454756044862784630882833496090822568580572859029800646671301748901528132153712913301179254879877441322285914544974519727307311002330350534857867516466612474769753577858660075830592891403551867246057397839688329172530177187042229028685862036140779065771061933528137423019407311473581832405899089709251747002788032002094495379614686544672969073249309703482556386024622814731015767810042969813752548617464974915714425595351940266077021672409858645427346</span><br></code></pre></td></tr></table></figure><p>观察附件中的数据信息，发现有很多组n，c数据，应该是广播攻击。低加密指数广播攻击，是采用欧几里得算法对多组数据进行求解。这里使用一个脚本求解：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">import</span> gmpy<span class="hljs-number">2</span><br><span class="hljs-attribute">import</span> libnum<br><br><span class="hljs-attribute">m</span> = <span class="hljs-number">0</span><br><span class="hljs-attribute">e</span> = <span class="hljs-number">65537</span><br><br><span class="hljs-attribute">n1</span> = <span class="hljs-number">20474918894051778533305262345601880928088284471121823754049725354072477155873778848055073843345820697886641086842612486541250183965966001591342031562953561793332341641334302847996108417466360688139866505179689516589305636902137210185624650854906780037204412206309949199080005576922775773722438863762117750429327585792093447423980002401200613302943834212820909269713876683465817369158585822294675056978970612202885426436071950214538262921077409076160417436699836138801162621314845608796870206834704116707763169847387223307828908570944984416973019427529790029089766264949078038669523465243837675263858062854739083634207</span><br><span class="hljs-attribute">c1</span> = <span class="hljs-number">974463908243330865728978769213595400782053398596897741316275722596415018912929508637393850919224969271766388710025195039896961956062895570062146947736340342927974992616678893372744261954172873490878805483241196345881721164078651156067119957816422768524442025688079462656755605982104174001635345874022133045402344010045961111720151990412034477755851802769069309069018738541854130183692204758761427121279982002993939745343695671900015296790637464880337375511536424796890996526681200633086841036320395847725935744757993013352804650575068136129295591306569213300156333650910795946800820067494143364885842896291126137320</span><br><br><span class="hljs-attribute">n2</span> = <span class="hljs-number">20918819960648891349438263046954902210959146407860980742165930253781318759285692492511475263234242002509419079545644051755251311392635763412553499744506421566074721268822337321637265942226790343839856182100575539845358877493718334237585821263388181126545189723429262149630651289446553402190531135520836104217160268349688525168375213462570213612845898989694324269410202496871688649978370284661017399056903931840656757330859626183773396574056413017367606446540199973155630466239453637232936904063706551160650295031273385619470740593510267285957905801566362502262757750629162937373721291789527659531499435235261620309759</span><br><span class="hljs-attribute">c2</span> = <span class="hljs-number">15819636201971185538694880505120469332582151856714070824521803121848292387556864177196229718923770810072104155432038682511434979353089791861087415144087855679134383396897817458726543883093567600325204596156649305930352575274039425470836355002691145864435755333821133969266951545158052745938252574301327696822347115053614052423028835532509220641378760800693351542633860702225772638930501021571415907348128269681224178300248272689705308911282208685459668200507057183420662959113956077584781737983254788703048275698921427029884282557468334399677849962342196140864403989162117738206246183665814938783122909930082802031855</span><br><br><span class="hljs-attribute">n3</span> = <span class="hljs-number">25033254625906757272369609119214202033162128625171246436639570615263949157363273213121556825878737923265290579551873824374870957467163989542063489416636713654642486717219231225074115269684119428086352535471683359486248203644461465935500517901513233739152882943010177276545128308412934555830087776128355125932914846459470221102007666912211992310538890654396487111705385730502843589727289829692152177134753098649781412247065660637826282055169991824099110916576856188876975621376606634258927784025787142263367152947108720757222446686415627479703666031871635656314282727051189190889008763055811680040315277078928068816491</span><br><span class="hljs-attribute">c3</span> = <span class="hljs-number">4185308529416874005831230781014092407198451385955677399668501833902623478395669279404883990725184332709152443372583701076198786635291739356770857286702107156730020004358955622511061410661058982622055199736820808203841446796305284394651714430918690389486920560834672316158146453183789412140939029029324756035358081754426645160033262924330248675216108270980157049705488620263485129480952814764002865280019185127662449318324279383277766416258142275143923532168798413011028271543085249029048997452212503111742302302065401051458066585395360468447460658672952851643547193822775218387853623453638025492389122204507555908862</span><br><br><span class="hljs-attribute">n4</span> = <span class="hljs-number">21206968097314131007183427944486801953583151151443627943113736996776787181111063957960698092696800555044199156765677935373149598221184792286812213294617749834607696302116136745662816658117055427803315230042700695125718401646810484873064775005221089174056824724922160855810527236751389605017579545235876864998419873065217294820244730785120525126565815560229001887622837549118168081685183371092395128598125004730268910276024806808565802081366898904032509920453785997056150497645234925528883879419642189109649009132381586673390027614766605038951015853086721168018787523459264932165046816881682774229243688581614306480751</span><br><span class="hljs-attribute">c4</span> = <span class="hljs-number">4521038011044758441891128468467233088493885750850588985708519911154778090597136126150289041893454126674468141393472662337350361712212694867311622970440707727941113263832357173141775855227973742571088974593476302084111770625764222838366277559560887042948859892138551472680654517814916609279748365580610712259856677740518477086531592233107175470068291903607505799432931989663707477017904611426213770238397005743730386080031955694158466558475599751940245039167629126576784024482348452868313417471542956778285567779435940267140679906686531862467627238401003459101637191297209422470388121802536569761414457618258343550613</span><br><br><span class="hljs-attribute">n5</span> = <span class="hljs-number">22822039733049388110936778173014765663663303811791283234361230649775805923902173438553927805407463106104699773994158375704033093471761387799852168337898526980521753614307899669015931387819927421875316304591521901592823814417756447695701045846773508629371397013053684553042185725059996791532391626429712416994990889693732805181947970071429309599614973772736556299404246424791660679253884940021728846906344198854779191951739719342908761330661910477119933428550774242910420952496929605686154799487839923424336353747442153571678064520763149793294360787821751703543288696726923909670396821551053048035619499706391118145067</span><br><span class="hljs-attribute">c5</span> = <span class="hljs-number">15406498580761780108625891878008526815145372096234083936681442225155097299264808624358826686906535594853622687379268969468433072388149786607395396424104318820879443743112358706546753935215756078345959375299650718555759698887852318017597503074317356745122514481807843745626429797861463012940172797612589031686718185390345389295851075279278516147076602270178540690147808314172798987497259330037810328523464851895621851859027823681655934104713689539848047163088666896473665500158179046196538210778897730209572708430067658411755959866033531700460551556380993982706171848970460224304996455600503982223448904878212849412357</span><br><br><span class="hljs-attribute">n6</span> = <span class="hljs-number">21574139855341432908474064784318462018475296809327285532337706940126942575349507668289214078026102682252713757703081553093108823214063791518482289846780197329821139507974763780260290309600884920811959842925540583967085670848765317877441480914852329276375776405689784571404635852204097622600656222714808541872252335877037561388406257181715278766652824786376262249274960467193961956690974853679795249158751078422296580367506219719738762159965958877806187461070689071290948181949561254144310776943334859775121650186245846031720507944987838489723127897223416802436021278671237227993686791944711422345000479751187704426369</span><br><span class="hljs-attribute">c6</span> = <span class="hljs-number">20366856150710305124583065375297661819795242238376485264951185336996083744604593418983336285185491197426018595031444652123288461491879021096028203694136683203441692987069563513026001861435722117985559909692670907347563594578265880806540396777223906955491026286843168637367593400342814725694366078337030937104035993569672959361347287894143027186846856772983058328919716702982222142848848117768499996617588305301483085428547267337070998767412540225911508196842253134355901263861121500650240296746702967594224401650220168780537141654489215019142122284308116284129004257364769474080721001708734051264841350424152506027932</span><br><br><span class="hljs-attribute">n7</span> = <span class="hljs-number">25360227412666612490102161131174584819240931803196448481224305250583841439581008528535930814167338381983764991296575637231916547647970573758269411168219302370541684789125112505021148506809643081950237623703181025696585998044695691322012183660424636496897073045557400768745943787342548267386564625462143150176113656264450210023925571945961405709276631990731602198104287528528055650050486159837612279600415259486306154947514005408907590083747758953115486124865486720633820559135063440942528031402951958557630833503775112010715604278114325528993771081233535247118481765852273252404963430792898948219539473312462979849137</span><br><span class="hljs-attribute">c7</span> = <span class="hljs-number">19892772524651452341027595619482734356243435671592398172680379981502759695784087900669089919987705675899945658648623800090272599154590123082189645021800958076861518397325439521139995652026377132368232502108620033400051346127757698623886142621793423225749240286511666556091787851683978017506983310073524398287279737680091787333547538239920607761080988243639547570818363788673249582783015475682109984715293163137324439862838574460108793714172603672477766831356411304446881998674779501188163600664488032943639694828698984739492200699684462748922883550002652913518229322945040819064133350314536378694523704793396169065179</span><br><br><span class="hljs-attribute">n8</span> = <span class="hljs-number">22726855244632356029159691753451822163331519237547639938779517751496498713174588935566576167329576494790219360727877166074136496129927296296996970048082870488804456564986667129388136556137013346228118981936899510687589585286517151323048293150257036847475424044378109168179412287889340596394755257704938006162677656581509375471102546261355748251869048003600520034656264521931808651038524134185732929570384705918563982065684145766427962502261522481994191989820110575981906998431553107525542001187655703534683231777988419268338249547641335718393312295800044734534761692799403469497954062897856299031257454735945867491191</span><br><span class="hljs-attribute">c8</span> = <span class="hljs-number">6040119795175856407541082360023532204614723858688636724822712717572759793960246341800308149739809871234313049629732934797569781053000686185666374833978403290525072598774001731350244744590772795701065129561898116576499984185920661271123665356132719193665474235596884239108030605882777868856122378222681140570519180321286976947154042272622411303981011302586225630859892731724640574658125478287115198406253847367979883768000812605395482952698689604477719478947595442185921480652637868335673233200662100621025061500895729605305665864693122952557361871523165300206070325660353095592778037767395360329231331322823610060006</span><br><br><span class="hljs-attribute">n9</span> = <span class="hljs-number">23297333791443053297363000786835336095252290818461950054542658327484507406594632785712767459958917943095522594228205423428207345128899745800927319147257669773812669542782839237744305180098276578841929496345963997512244219376701787616046235397139381894837435562662591060768476997333538748065294033141610502252325292801816812268934171361934399951548627267791401089703937389012586581080223313060159456238857080740699528666411303029934807011214953984169785844714159627792016926490955282697877141614638806397689306795328344778478692084754216753425842557818899467945102646776342655167655384224860504086083147841252232760941</span><br><span class="hljs-attribute">c9</span> = <span class="hljs-number">5418120301208378713115889465579964257871814114515046096090960159737859076829258516920361577853903925954198406843757303687557848302302200229295916902430205737843601806700738234756698575708612424928480440868739120075888681672062206529156566421276611107802917418993625029690627196813830326369874249777619239603300605876865967515719079797115910578653562787899019310139945904958024882417833736304894765433489476234575356755275147256577387022873348906900149634940747104513850154118106991137072643308620284663108283052245750945228995387803432128842152251549292698947407663643895853432650029352092018372834457054271102816934</span><br><br><span class="hljs-attribute">n10</span> = <span class="hljs-number">28873667904715682722987234293493200306976947898711255064125115933666968678742598858722431426218914462903521596341771131695619382266194233561677824357379805303885993804266436810606263022097900266975250431575654686915049693091467864820512767070713267708993899899011156106766178906700336111712803362113039613548672937053397875663144794018087017731949087794894903737682383916173267421403408140967713071026001874733487295007501068871044649170615709891451856792232315526696220161842742664778581287321318748202431466508948902745314372299799561625186955234673012098210919745879882268512656931714326782335211089576897310591491</span><br><span class="hljs-attribute">c10</span> = <span class="hljs-number">9919880463786836684987957979091527477471444996392375244075527841865509160181666543016317634963512437510324198702416322841377489417029572388474450075801462996825244657530286107428186354172836716502817609070590929769261932324275353289939302536440310628698349244872064005700644520223727670950787924296004296883032978941200883362653993351638545860207179022472492671256630427228461852668118035317021428675954874947015197745916918197725121122236369382741533983023462255913924692806249387449016629865823316402366017657844166919846683497851842388058283856219900535567427103603869955066193425501385255322097901531402103883869</span><br><br><span class="hljs-attribute">n11</span> = <span class="hljs-number">22324685947539653722499932469409607533065419157347813961958075689047690465266404384199483683908594787312445528159635527833904475801890381455653807265501217328757871352731293000303438205315816792663917579066674842307743845261771032363928568844669895768092515658328756229245837025261744260614860746997931503548788509983868038349720225305730985576293675269073709022350700836510054067641753713212999954307022524495885583361707378513742162566339010134354907863733205921845038918224463903789841881400814074587261720283879760122070901466517118265422863420376921536734845502100251460872499122236686832189549698020737176683019</span><br><span class="hljs-attribute">c11</span> = <span class="hljs-number">1491527050203294989882829248560395184804977277747126143103957219164624187528441047837351263580440686474767380464005540264627910126483129930668344095814547592115061057843470131498075060420395111008619027199037019925701236660166563068245683975787762804359520164701691690916482591026138582705558246869496162759780878437137960823000043988227303003876410503121370163303711603359430764539337597866862508451528158285103251810058741879687875218384160282506172706613359477657215420734816049393339593755489218588796607060261897905233453268671411610631047340459487937479511933450369462213795738933019001471803157607791738538467</span><br><br><span class="hljs-attribute">n12</span> = <span class="hljs-number">27646746423759020111007828653264027999257847645666129907789026054594393648800236117046769112762641778865620892443423100189619327585811384883515424918752749559627553637785037359639801125213256163008431942593727931931898199727552768626775618479833029101249692573716030706695702510982283555740851047022672485743432464647772882314215176114732257497240284164016914018689044557218920300262234652840632406067273375269301008409860193180822366735877288205783314326102263756503786736122321348320031950012144905869556204017430593656052867939493633163499580242224763404338807022510136217187779084917996171602737036564991036724299</span><br><span class="hljs-attribute">c12</span> = <span class="hljs-number">21991524128957260536043771284854920393105808126700128222125856775506885721971193109361315961129190814674647136464887087893990660894961612838205086401018885457667488911898654270235561980111174603323721280911197488286585269356849579263043456316319476495888696219344219866516861187654180509247881251251278919346267129904739277386289240394384575124331135655943513831009934023397457082184699737734388823763306805326430395849935770213817533387235486307008892410920611669932693018165569417445885810825749609388627231235840912644654685819620931663346297596334834498661789016450371769203650109994771872404185770230172934013971</span><br><br><span class="hljs-attribute">n13</span> = <span class="hljs-number">20545487405816928731738988374475012686827933709789784391855706835136270270933401203019329136937650878386117187776530639342572123237188053978622697282521473917978282830432161153221216194169879669541998840691383025487220850872075436064308499924958517979727954402965612196081404341651517326364041519250125036424822634354268773895465698920883439222996581226358595873993976604699830613932320720554130011671297944433515047180565484495191003887599891289037982010216357831078328159028953222056918189365840711588671093333013117454034313622855082795813122338562446223041211192277089225078324682108033843023903550172891959673551</span><br><span class="hljs-attribute">c13</span> = <span class="hljs-number">14227439188191029461250476692790539654619199888487319429114414557975376308688908028140817157205579804059783807641305577385724758530138514972962209062230576107406142402603484375626077345190883094097636019771377866339531511965136650567412363889183159616188449263752475328663245311059988337996047359263288837436305588848044572937759424466586870280512424336807064729894515840552404756879590698797046333336445465120445087587621743906624279621779634772378802959109714400516183718323267273824736540168545946444437586299214110424738159957388350785999348535171553569373088251552712391288365295267665691357719616011613628772175</span><br><br><span class="hljs-attribute">n14</span> = <span class="hljs-number">27359727711584277234897157724055852794019216845229798938655814269460046384353568138598567755392559653460949444557879120040796798142218939251844762461270251672399546774067275348291003962551964648742053215424620256999345448398805278592777049668281558312871773979931343097806878701114056030041506690476954254006592555275342579529625231194321357904668512121539514880704046969974898412095675082585315458267591016734924646294357666924293908418345508902112711075232047998775303603175363964055048589769318562104883659754974955561725694779754279606726358588862479198815999276839234952142017210593887371950645418417355912567987</span><br><span class="hljs-attribute">c14</span> = <span class="hljs-number">3788529784248255027081674540877016372807848222776887920453488878247137930578296797437647922494510483767651150492933356093288965943741570268943861987024276610712717409139946409513963043114463933146088430004237747163422802959250296602570649363016151581364006795894226599584708072582696996740518887606785460775851029814280359385763091078902301957226484620428513604630585131511167015763190591225884202772840456563643159507805711004113901417503751181050823638207803533111429510911616160851391754754434764819568054850823810901159821297849790005646102129354035735350124476838786661542089045509656910348676742844957008857457</span><br><br><span class="hljs-attribute">n15</span> = <span class="hljs-number">27545937603751737248785220891735796468973329738076209144079921449967292572349424539010502287564030116831261268197384650511043068738911429169730640135947800885987171539267214611907687570587001933829208655100828045651391618089603288456570334500533178695238407684702251252671579371018651675054368606282524673369983034682330578308769886456335818733827237294570476853673552685361689144261552895758266522393004116017849397346259119221063821663280935820440671825601452417487330105280889520007917979115568067161590058277418371493228631232457972494285014767469893647892888681433965857496916110704944758070268626897045014782837</span><br><span class="hljs-attribute">c15</span> = <span class="hljs-number">14069112970608895732417039977542732665796601893762401500878786871680645798754783315693511261740059725171342404186571066972546332813667711135661176659424619936101038903439144294886379322591635766682645179888058617577572409307484708171144488708410543462972008179994594087473935638026612679389759756811490524127195628741262871304427908481214992471182859308828778119005750928935764927967212343526503410515793717201360360437981322576798056276657140363332700714732224848346808963992302409037706094588964170239521193589470070839790404597252990818583717869140229811712295005710540476356743378906642267045723633874011649259842</span><br><br><span class="hljs-attribute">n16</span> = <span class="hljs-number">25746162075697911560263181791216433062574178572424600336856278176112733054431463253903433128232709054141607100891177804285813783247735063753406524678030561284491481221681954564804141454666928657549670266775659862814924386584148785453647316864935942772919140563506305666207816897601862713092809234429096584753263707828899780979223118181009293655563146526792388913462557306433664296966331469906428665127438829399703002867800269947855869262036714256550075520193125987011945192273531732276641728008406855871598678936585324782438668746810516660152018244253008092470066555687277138937298747951929576231036251316270602513451</span><br><span class="hljs-attribute">c16</span> = <span class="hljs-number">17344284860275489477491525819922855326792275128719709401292545608122859829827462088390044612234967551682879954301458425842831995513832410355328065562098763660326163262033200347338773439095709944202252494552172589503915965931524326523663289777583152664722241920800537867331030623906674081852296232306336271542832728410803631170229642717524942332390842467035143631504401140727083270732464237443915263865880580308776111219718961746378842924644142127243573824972533819479079381023103585862099063382129757560124074676150622288706094110075567706403442920696472627797607697962873026112240527498308535903232663939028587036724</span><br><br><span class="hljs-attribute">n17</span> = <span class="hljs-number">23288486934117120315036919418588136227028485494137930196323715336208849327833965693894670567217971727921243839129969128783853015760155446770590696037582684845937132790047363216362087277861336964760890214059732779383020349204803205725870225429985939570141508220041286857810048164696707018663758416807708910671477407366098883430811861933014973409390179948577712579749352299440310543689035651465399867908428885541237776143404376333442949397063249223702355051571790555151203866821867908531733788784978667478707672984539512431549558672467752712004519300318999208102076732501412589104904734983789895358753664077486894529499</span><br><span class="hljs-attribute">c17</span> = <span class="hljs-number">10738254418114076548071448844964046468141621740603214384986354189105236977071001429271560636428075970459890958274941762528116445171161040040833357876134689749846940052619392750394683504816081193432350669452446113285638982551762586656329109007214019944975816434827768882704630460001209452239162896576191876324662333153835533956600295255158377025198426950944040643235430211011063586032467724329735785947372051759042138171054165854842472990583800899984893232549092766400510300083585513014171220423103452292891496141806956300396540682381668367564569427813092064053993103537635994311143010708814851867239706492577203899024</span><br><br><span class="hljs-attribute">n18</span> = <span class="hljs-number">19591441383958529435598729113936346657001352578357909347657257239777540424811749817783061233235817916560689138344041497732749011519736303038986277394036718790971374656832741054547056417771501234494768509780369075443550907847298246275717420562375114406055733620258777905222169702036494045086017381084272496162770259955811174440490126514747876661317750649488774992348005044389081101686016446219264069971370646319546429782904810063020324704138495608761532563310699753322444871060383693044481932265801505819646998535192083036872551683405766123968487907648980900712118052346174533513978009131757167547595857552370586353973</span><br><span class="hljs-attribute">c18</span> = <span class="hljs-number">3834917098887202931981968704659119341624432294759361919553937551053499607440333234018189141970246302299385742548278589896033282894981200353270637127213483172182529890495903425649116755901631101665876301799865612717750360089085179142750664603454193642053016384714515855868368723508922271767190285521137785688075622832924829248362774476456232826885801046969384519549385428259591566716890844604696258783639390854153039329480726205147199247183621535172450825979047132495439603840806501254997167051142427157381799890725323765558803808030109468048682252028720241357478614704610089120810367192414352034177484688502364022887</span><br><br><span class="hljs-attribute">n19</span> = <span class="hljs-number">19254242571588430171308191757871261075358521158624745702744057556054652332495961196795369630484782930292003238730267396462491733557715379956969694238267908985251699834707734400775311452868924330866502429576951934279223234676654749272932769107390976321208605516299532560054081301829440688796904635446986081691156842271268059970762004259219036753174909942343204432795076377432107630203621754552804124408792358220071862369443201584155711893388877350138023238624566616551246804054720492816226651467017802504094070614892556444425915920269485861799532473383304622064493223627552558344088839860178294589481899206318863310603</span><br><span class="hljs-attribute">c19</span> = <span class="hljs-number">6790553533991297205804561991225493105312398825187682250780197510784765226429663284220400480563039341938599783346724051076211265663468643826430109013245014035811178295081939958687087477312867720289964506097819762095244479129359998867671811819738196687884696680463458661374310994610760009474264115750204920875527434486437536623589684519411519100170291423367424938566820315486507444202022408003879118465761273916755290898112991525546114191064022991329724370064632569903856189236177894007766690782630247443895358893983735822824243487181851098787271270256780891094405121947631088729917398317652320497765101790132679171889</span><br><br><span class="hljs-attribute">n20</span> = <span class="hljs-number">26809700251171279102974962949184411136459372267620535198421449833298448092580497485301953796619185339316064387798092220298630428207556482805739803420279056191194360049651767412572609187680508073074653291350998253938793269214230457117194434853888765303403385824786231859450351212449404870776320297419712486574804794325602760347306432927281716160368830187944940128907971027838510079519466846176106565164730963988892400240063089397720414921398936399927948235195085202171264728816184532651138221862240969655185596628285814057082448321749567943946273776184657698104465062749244327092588237927996419620170254423837876806659</span><br><span class="hljs-attribute">c20</span> = <span class="hljs-number">386213556608434013769864727123879412041991271528990528548507451210692618986652870424632219424601677524265011043146748309774067894985069288067952546139416819404039688454756044862784630882833496090822568580572859029800646671301748901528132153712913301179254879877441322285914544974519727307311002330350534857867516466612474769753577858660075830592891403551867246057397839688329172530177187042229028685862036140779065771061933528137423019407311473581832405899089709251747002788032002094495379614686544672969073249309703482556386024622814731015767810042969813752548617464974915714425595351940266077021672409858645427346</span><br><br><span class="hljs-attribute">n</span> =<span class="hljs-meta"> [n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n16, n17,</span><br><span class="hljs-meta">        n18, n19, n20]</span><br><span class="hljs-attribute">c</span> =<span class="hljs-meta"> [c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16, c17,</span><br><span class="hljs-meta">        c18, c19, c20]</span><br><span class="hljs-attribute">for</span> i in range(len(n)):<br>    <span class="hljs-attribute">for</span> j in range(len(n)):<br>        <span class="hljs-attribute">if</span>(i!=j):<br>            <span class="hljs-attribute">if</span>(gmpy<span class="hljs-number">2</span>.gcd(n[i],n[j])!=<span class="hljs-number">1</span>):<br>                <span class="hljs-attribute">p</span> = gmpy<span class="hljs-number">2</span>.gcd(n[i],n[j])<br>                <span class="hljs-attribute">q</span> = n[i] // p<br>                <span class="hljs-attribute">d</span> = gmpy<span class="hljs-number">2</span>.invert(e , (p-<span class="hljs-number">1</span>)*(q-<span class="hljs-number">1</span>))<br>                <span class="hljs-attribute">m</span> = pow(c[i],d,n[i])<br><br><span class="hljs-attribute">flag</span> = libnum.n<span class="hljs-number">2</span>s(int(m))<br><span class="hljs-attribute">print</span> flag<br></code></pre></td></tr></table></figure><p>运行脚本，得到flag:</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">flag</span>&#123;abdcbe<span class="hljs-number">5</span>fd<span class="hljs-number">94</span>e<span class="hljs-number">23</span>b<span class="hljs-number">3</span>de<span class="hljs-number">429223</span>ab<span class="hljs-number">9</span>c<span class="hljs-number">2</span>fdf&#125;<br></code></pre></td></tr></table></figure><p>flag:flag{abdcbe5fd94e23b3de429223ab9c2fdf}</p><h2 id="0x9-密码学的心声"><a href="#0x9-密码学的心声" class="headerlink" title="0x9 密码学的心声"></a>0x9 密码学的心声</h2><p>看题目应该是挺有意思的题目，看看题目描述：</p><figure class="highlight sqf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sqf">二战时期，某国军官与一个音乐家情妇相好，然而自从那时起，他屡战屡败，敌人似乎料事如神。他也有怀疑过他的情妇，但是他经过<span class="hljs-number">24</span>小时观察他的情妇，发现她每天都只是作曲，然后弹奏给战地电台，为士兵们鼓气，并未有任何逾越。那么，间谍到底是谁？这张曲谱是否有猫腻？ (答案为一个明文字符串，提交获得的有意义语句通顺字符串即可) 注意：得到的 <span class="hljs-built_in">flag</span> 请包上 <span class="hljs-built_in">flag</span>&#123;&#125; 提交<br></code></pre></td></tr></table></figure><p>下载附件，查看附件内容：</p><p><a href="post_16.assets/image-8.png"><img src="post_16.assets/image-8-723x1024.png" alt="img"></a>附件内容</p><p>发现，附件是一个图片，解密的提示和思维应该就藏在图片里面</p><p>大致分析一下，图片提供的照片，可以知道是ASCII编码，进制是八进制，八进制一般而言是三个一组，数字以八进制为一组。这样思路就非常明确了，编写Python脚本直接求解：</p><figure class="highlight tap"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs tap">c = &quot;111<span class="hljs-number"> 114 </span>157<span class="hljs-number"> 166 </span>145<span class="hljs-number"> 123 </span>145<span class="hljs-number"> 143 </span>165<span class="hljs-number"> 162 </span>151<span class="hljs-number"> 164 </span>171<span class="hljs-number"> 126 </span>145<span class="hljs-number"> 162 </span>171<span class="hljs-number"> 115 </span>165<span class="hljs-number"> 143 </span>150&quot;<br>c_list = c.split(&quot; &quot;)<br>m = &quot;&quot;<br>for i in c_list:<br>    m += chr(int(i,8))<br>flag = &quot;flag&#123;&quot;+m+&quot;&#125;&quot;<br>print flag<br></code></pre></td></tr></table></figure><p>运行脚本，得到flag：</p><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dust"><span class="xml">flag</span><span class="hljs-template-variable">&#123;ILoveSecurityVeryMuch&#125;</span><br></code></pre></td></tr></table></figure><p>flag:flag{ILoveSecurityVeryMuch}</p><h2 id="0xA-传感器"><a href="#0xA-传感器" class="headerlink" title="0xA 传感器"></a>0xA 传感器</h2><p>直接下载附件，查看附件：</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs autoit"><span class="hljs-number">5555555595555</span>A65556AA696AA6666666955<br>这是某压力传感器无线数据包解调后但未解码的报文(<span class="hljs-built_in">hex</span>)<br>  <br>已知其ID为<span class="hljs-number">0xFED31F</span>，请继续将报文完整解码，提交<span class="hljs-built_in">hex</span>。<br><br>提示<span class="hljs-number">1</span>：曼联<br></code></pre></td></tr></table></figure><p>提示是曼联，又是考察古典密码的题目，真是头疼。经过查询发现是曼彻斯特编码，在wiki百科上面找到曼彻斯特编码的相关信息：</p><p>在电信与数据存储中, 曼彻斯特编码（Manchester coding），又称自同步码、相位编码（phase encoding，PE），能够用信号的变化来保持发送设备和接收设备之间的同步。它用电压的变化来分辨0和1，从高电平到低电平的跳变代表1，而从低电平到高电平的跳变代表0(as per G.E.Tomas编码方式)。从高电平到低电平的跳变代表0，而从低电平到高电平的跳变代表1(as per IEEE 802.3编码方式)，下方有所展示。信号的保持不会超过一个比特位的时间间隔。即使是0或1的序列，信号也将在每个时间间隔的中间发生跳变。这种跳变将允许接收设备的时钟与发送设备的时钟保持一致。1</p><p><img src="post_16.assets/image.png" alt="img"></p><p>根据曼彻斯特编码的原理进行归纳，得到一个异或数据表</p><p><a href="post_16.assets/image-9.png"><img src="post_16.assets/image-9.png" alt="img"></a></p><p>这个异或数据表应该就是曼彻斯特编码的具体原理，根据这个原理编写python脚本进行解密：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs python">cipher=<span class="hljs-string">&#x27;5555555595555A65556AA696AA6666666955&#x27;</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">decrypto</span>(<span class="hljs-params">cipher</span>):</span><br>    tmp=<span class="hljs-string">&#x27;&#x27;</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(cipher)):<br>        a=<span class="hljs-built_in">bin</span>(<span class="hljs-built_in">eval</span>(<span class="hljs-string">&#x27;0x&#x27;</span>+cipher[i]))[<span class="hljs-number">2</span>:].zfill(<span class="hljs-number">4</span>)<br>        tmp=tmp+a[<span class="hljs-number">1</span>]+a[<span class="hljs-number">3</span>]<br><span class="hljs-comment">#        print(tmp)</span><br>    plain = [ <span class="hljs-built_in">hex</span>(<span class="hljs-built_in">int</span>(tmp[i:i+<span class="hljs-number">8</span>][::-<span class="hljs-number">1</span>],<span class="hljs-number">2</span>))[<span class="hljs-number">2</span>:] <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>,<span class="hljs-built_in">len</span>(tmp),<span class="hljs-number">8</span>)]<br>    m =  <span class="hljs-string">&#x27;&#x27;</span>.join(plain).upper()<br>    <span class="hljs-keyword">return</span> m<br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&quot;__main__&quot;</span>:<br>    flag = <span class="hljs-string">&quot;flag&#123;&quot;</span>+decrypto(cipher)+<span class="hljs-string">&quot;&#125;&quot;</span><br>    <span class="hljs-built_in">print</span> flag<br></code></pre></td></tr></table></figure><p>运行脚本，得到flag</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">flag</span>&#123;FFFFFED<span class="hljs-number">31</span>F<span class="hljs-number">645055</span>F<span class="hljs-number">9</span>&#125;<br></code></pre></td></tr></table></figure><p>flag:flag{FFFFFED31F645055F9}</p><h2 id="0xB-这是base？"><a href="#0xB-这是base？" class="headerlink" title="0xB 这是base？"></a>0xB 这是base？</h2><p>应该是考察base的，直接下载附件查看附件：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">dict</span>:&#123;<span class="hljs-number">0</span>: &#x27;J&#x27;, <span class="hljs-number">1</span>: &#x27;K&#x27;, <span class="hljs-number">2</span>: &#x27;L&#x27;, <span class="hljs-number">3</span>: &#x27;M&#x27;, <span class="hljs-number">4</span>: &#x27;N&#x27;, <span class="hljs-number">5</span>: &#x27;O&#x27;, <span class="hljs-number">6</span>: &#x27;x&#x27;, <span class="hljs-number">7</span>: &#x27;y&#x27;, <span class="hljs-number">8</span>: &#x27;U&#x27;, <span class="hljs-number">9</span>: &#x27;V&#x27;, <span class="hljs-number">10</span>: &#x27;z&#x27;, <span class="hljs-number">11</span>: &#x27;A&#x27;, <span class="hljs-number">12</span>: &#x27;B&#x27;, <span class="hljs-number">13</span>: &#x27;C&#x27;, <span class="hljs-number">14</span>: &#x27;D&#x27;, <span class="hljs-number">15</span>: &#x27;E&#x27;, <span class="hljs-number">16</span>: &#x27;F&#x27;, <span class="hljs-number">17</span>: &#x27;G&#x27;, <span class="hljs-number">18</span>: &#x27;H&#x27;, <span class="hljs-number">19</span>: &#x27;<span class="hljs-number">7</span>&#x27;, <span class="hljs-number">20</span>: &#x27;<span class="hljs-number">8</span>&#x27;, <span class="hljs-number">21</span>: &#x27;<span class="hljs-number">9</span>&#x27;, <span class="hljs-number">22</span>: &#x27;P&#x27;, <span class="hljs-number">23</span>: &#x27;Q&#x27;, <span class="hljs-number">24</span>: &#x27;I&#x27;, <span class="hljs-number">25</span>: &#x27;a&#x27;, <span class="hljs-number">26</span>: &#x27;b&#x27;, <span class="hljs-number">27</span>: &#x27;c&#x27;, <span class="hljs-number">28</span>: &#x27;d&#x27;, <span class="hljs-number">29</span>: &#x27;e&#x27;, <span class="hljs-number">30</span>: &#x27;f&#x27;, <span class="hljs-number">31</span>: &#x27;g&#x27;, <span class="hljs-number">32</span>: &#x27;h&#x27;, <span class="hljs-number">33</span>: &#x27;i&#x27;, <span class="hljs-number">34</span>: &#x27;j&#x27;, <span class="hljs-number">35</span>: &#x27;k&#x27;, <span class="hljs-number">36</span>: &#x27;l&#x27;, <span class="hljs-number">37</span>: &#x27;m&#x27;, <span class="hljs-number">38</span>: &#x27;W&#x27;, <span class="hljs-number">39</span>: &#x27;X&#x27;, <span class="hljs-number">40</span>: &#x27;Y&#x27;, <span class="hljs-number">41</span>: &#x27;Z&#x27;, <span class="hljs-number">42</span>: &#x27;<span class="hljs-number">0</span>&#x27;, <span class="hljs-number">43</span>: &#x27;<span class="hljs-number">1</span>&#x27;, <span class="hljs-number">44</span>: &#x27;<span class="hljs-number">2</span>&#x27;, <span class="hljs-number">45</span>: &#x27;<span class="hljs-number">3</span>&#x27;, <span class="hljs-number">46</span>: &#x27;<span class="hljs-number">4</span>&#x27;, <span class="hljs-number">47</span>: &#x27;<span class="hljs-number">5</span>&#x27;, <span class="hljs-number">48</span>: &#x27;<span class="hljs-number">6</span>&#x27;, <span class="hljs-number">49</span>: &#x27;R&#x27;, <span class="hljs-number">50</span>: &#x27;S&#x27;, <span class="hljs-number">51</span>: &#x27;T&#x27;, <span class="hljs-number">52</span>: &#x27;n&#x27;, <span class="hljs-number">53</span>: &#x27;o&#x27;, <span class="hljs-number">54</span>: &#x27;p&#x27;, <span class="hljs-number">55</span>: &#x27;q&#x27;, <span class="hljs-number">56</span>: &#x27;r&#x27;, <span class="hljs-number">57</span>: &#x27;s&#x27;, <span class="hljs-number">58</span>: &#x27;t&#x27;, <span class="hljs-number">59</span>: &#x27;u&#x27;, <span class="hljs-number">60</span>: &#x27;v&#x27;, <span class="hljs-number">61</span>: &#x27;w&#x27;, <span class="hljs-number">62</span>: &#x27;+&#x27;, <span class="hljs-number">63</span>: &#x27;/&#x27;, <span class="hljs-number">64</span>: &#x27;=&#x27;&#125;<br><br><span class="hljs-attribute">chipertext</span>:<br><span class="hljs-attribute">FlZNfnF6Qol6e9w17WwQQoGYBQCgIkGTa9w3IQKw</span><br></code></pre></td></tr></table></figure><p>给出了base64的编码表，但不是标准的base64编码表，首先需要了解base标准的编码表：</p><p><a href="post_16.assets/image-10.png"><img src="post_16.assets/image-10.png" alt="img"></a>标准的base64表</p><p>给出的字典数据和标准的base64表有很大的出出入，需要python脚本简单处理一下转换为标准的base64编码格式，然后再使用base64进行解密。python脚本：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">import</span> base<span class="hljs-number">64</span><br><span class="hljs-attribute">file_dict</span> = &#123;<span class="hljs-number">0</span>: &#x27;J&#x27;, <span class="hljs-number">1</span>: &#x27;K&#x27;, <span class="hljs-number">2</span>: &#x27;L&#x27;, <span class="hljs-number">3</span>: &#x27;M&#x27;, <span class="hljs-number">4</span>: &#x27;N&#x27;, <span class="hljs-number">5</span>: &#x27;O&#x27;, <span class="hljs-number">6</span>: &#x27;x&#x27;, <span class="hljs-number">7</span>: &#x27;y&#x27;, <span class="hljs-number">8</span>: &#x27;U&#x27;, <span class="hljs-number">9</span>: &#x27;V&#x27;, <span class="hljs-number">10</span>: &#x27;z&#x27;, <span class="hljs-number">11</span>: &#x27;A&#x27;, <span class="hljs-number">12</span>: &#x27;B&#x27;, <span class="hljs-number">13</span>: &#x27;C&#x27;, <span class="hljs-number">14</span>: &#x27;D&#x27;, <span class="hljs-number">15</span>: &#x27;E&#x27;, <span class="hljs-number">16</span>: &#x27;F&#x27;, <span class="hljs-number">17</span>: &#x27;G&#x27;, <span class="hljs-number">18</span>: &#x27;H&#x27;, <span class="hljs-number">19</span>: &#x27;<span class="hljs-number">7</span>&#x27;, <span class="hljs-number">20</span>: &#x27;<span class="hljs-number">8</span>&#x27;, <span class="hljs-number">21</span>: &#x27;<span class="hljs-number">9</span>&#x27;, <span class="hljs-number">22</span>: &#x27;P&#x27;, <span class="hljs-number">23</span>: &#x27;Q&#x27;, <span class="hljs-number">24</span>: &#x27;I&#x27;, <span class="hljs-number">25</span>: &#x27;a&#x27;, <span class="hljs-number">26</span>: &#x27;b&#x27;, <span class="hljs-number">27</span>: &#x27;c&#x27;, <span class="hljs-number">28</span>: &#x27;d&#x27;, <span class="hljs-number">29</span>: &#x27;e&#x27;, <span class="hljs-number">30</span>: &#x27;f&#x27;, <span class="hljs-number">31</span>: &#x27;g&#x27;, <span class="hljs-number">32</span>: &#x27;h&#x27;, <span class="hljs-number">33</span>: &#x27;i&#x27;, <span class="hljs-number">34</span>: &#x27;j&#x27;, <span class="hljs-number">35</span>: &#x27;k&#x27;, <span class="hljs-number">36</span>: &#x27;l&#x27;, <span class="hljs-number">37</span>: &#x27;m&#x27;, <span class="hljs-number">38</span>: &#x27;W&#x27;, <span class="hljs-number">39</span>: &#x27;X&#x27;, <span class="hljs-number">40</span>: &#x27;Y&#x27;, <span class="hljs-number">41</span>: &#x27;Z&#x27;, <span class="hljs-number">42</span>: &#x27;<span class="hljs-number">0</span>&#x27;, <span class="hljs-number">43</span>: &#x27;<span class="hljs-number">1</span>&#x27;, <span class="hljs-number">44</span>: &#x27;<span class="hljs-number">2</span>&#x27;, <span class="hljs-number">45</span>: &#x27;<span class="hljs-number">3</span>&#x27;, <span class="hljs-number">46</span>: &#x27;<span class="hljs-number">4</span>&#x27;, <span class="hljs-number">47</span>: &#x27;<span class="hljs-number">5</span>&#x27;, <span class="hljs-number">48</span>: &#x27;<span class="hljs-number">6</span>&#x27;, <span class="hljs-number">49</span>: &#x27;R&#x27;, <span class="hljs-number">50</span>: &#x27;S&#x27;, <span class="hljs-number">51</span>: &#x27;T&#x27;, <span class="hljs-number">52</span>: &#x27;n&#x27;, <span class="hljs-number">53</span>: &#x27;o&#x27;, <span class="hljs-number">54</span>: &#x27;p&#x27;, <span class="hljs-number">55</span>: &#x27;q&#x27;, <span class="hljs-number">56</span>: &#x27;r&#x27;, <span class="hljs-number">57</span>: &#x27;s&#x27;, <span class="hljs-number">58</span>: &#x27;t&#x27;, <span class="hljs-number">59</span>: &#x27;u&#x27;, <span class="hljs-number">60</span>: &#x27;v&#x27;, <span class="hljs-number">61</span>: &#x27;w&#x27;, <span class="hljs-number">62</span>: &#x27;+&#x27;, <span class="hljs-number">63</span>: &#x27;/&#x27;, <span class="hljs-number">64</span>: &#x27;=&#x27;&#125;<br><span class="hljs-attribute">base64_dict</span> =&#123;&#125;<br><span class="hljs-attribute">index</span> = <span class="hljs-number">0</span><br><span class="hljs-attribute">for</span> i in (range(<span class="hljs-number">65</span>,<span class="hljs-number">91</span>) + range(<span class="hljs-number">97</span>,<span class="hljs-number">123</span>)+range(<span class="hljs-number">48</span>,<span class="hljs-number">58</span>)+range(<span class="hljs-number">43</span>,<span class="hljs-number">44</span>)+range(<span class="hljs-number">47</span>,<span class="hljs-number">48</span>)):<br>    <span class="hljs-attribute">base64_dict</span>[index] = chr(i)<br>    <span class="hljs-attribute">index</span> += <span class="hljs-number">1</span><br><br><span class="hljs-attribute">chipertext</span> = <span class="hljs-string">&quot;FlZNfnF6Qol6e9w17WwQQoGYBQCgIkGTa9w3IQKw&quot;</span><br><span class="hljs-attribute">m</span> = <span class="hljs-string">&quot;&quot;</span><br><br><span class="hljs-attribute">for</span> i in range(len(chipertext)):<br>    <span class="hljs-attribute">for</span> j in range(<span class="hljs-number">64</span>):<br>        <span class="hljs-attribute">if</span>(file_dict[j] == chipertext[i]):<br>            <span class="hljs-attribute">m</span> += base<span class="hljs-number">64</span>_dict[j]<br><br><span class="hljs-attribute">flag</span> = base<span class="hljs-number">64</span>.b<span class="hljs-number">64</span>decode(m)<br><span class="hljs-attribute">print</span> flag<br></code></pre></td></tr></table></figure><p>运行脚本，得到flag：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">BJD</span>&#123;D<span class="hljs-number">0</span>_Y<span class="hljs-number">0</span>u_kNoW_Th<span class="hljs-number">1</span>s_b<span class="hljs-number">4</span>se_map&#125;<br></code></pre></td></tr></table></figure><p>flag:flag{D0_Y0u_kNoW_Th1s_b4se_map}</p><h2 id="0xC-rot"><a href="#0xC-rot" class="headerlink" title="0xC rot"></a>0xC rot</h2><p>直接下载附件，查看附件：</p><figure class="highlight tap"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs tap">破解下面的密文：<br><br>83<span class="hljs-number"> 89 </span>78<span class="hljs-number"> 84 </span>45<span class="hljs-number"> 86 </span>96<span class="hljs-number"> 45 </span>115<span class="hljs-number"> 121 </span>110<span class="hljs-number"> 116 </span>136<span class="hljs-number"> 132 </span>132<span class="hljs-number"> 132 </span>108<span class="hljs-number"> 128 </span>117<span class="hljs-number"> 118 </span>134<span class="hljs-number"> 110 </span>123<span class="hljs-number"> 111 </span>110<span class="hljs-number"> 127 </span>108<span class="hljs-number"> 112 </span>124<span class="hljs-number"> 122 </span>108<span class="hljs-number"> 118 </span>128<span class="hljs-number"> 108 </span>131<span class="hljs-number"> 114 </span>127<span class="hljs-number"> 134 </span>108<span class="hljs-number"> 116 </span>124<span class="hljs-number"> 124 </span>113<span class="hljs-number"> 108 </span>76<span class="hljs-number"> 76 </span>76<span class="hljs-number"> 76 </span>138<span class="hljs-number"> 23 </span>90<span class="hljs-number"> 81 </span>66<span class="hljs-number"> 71 </span>64<span class="hljs-number"> 69 </span>114<span class="hljs-number"> 65 </span>112<span class="hljs-number"> 64 </span>66<span class="hljs-number"> 63 </span>69<span class="hljs-number"> 61 </span>70<span class="hljs-number"> 114 </span>62<span class="hljs-number"> 66 </span>61<span class="hljs-number"> 62 </span>69<span class="hljs-number"> 67 </span>70<span class="hljs-number"> 63 </span>61<span class="hljs-number"> 110 </span>110<span class="hljs-number"> 112 </span>64<span class="hljs-number"> 68 </span>62<span class="hljs-number"> 70 </span>61<span class="hljs-number"> 112 </span>111 112<br><br>flag格式flag&#123;&#125;<br></code></pre></td></tr></table></figure><p>看密文应该是ASCII码，结合题目应该是rot加密，应该是比较常规的rot13加密需要对数据进行-13操作，因为观察一下就可以非常清楚地发现有些ASCII数字超过123，可显示字符，因此可以推断是rot13加密。这里先用一个脚本处理一下：</p><figure class="highlight tap"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs tap">c = &quot;83<span class="hljs-number"> 89 </span>78<span class="hljs-number"> 84 </span>45<span class="hljs-number"> 86 </span>96<span class="hljs-number"> 45 </span>115<span class="hljs-number"> 121 </span>110<span class="hljs-number"> 116 </span>136<span class="hljs-number"> 132 </span>132<span class="hljs-number"> 132 </span>108<span class="hljs-number"> 128 </span>117<span class="hljs-number"> 118 </span>134<span class="hljs-number"> 110 </span>123<span class="hljs-number"> 111 </span>110<span class="hljs-number"> 127 </span>108<span class="hljs-number"> 112 </span>124<span class="hljs-number"> 122 </span>108<span class="hljs-number"> 118 </span>128<span class="hljs-number"> 108 </span>131<span class="hljs-number"> 114 </span>127<span class="hljs-number"> 134 </span>108<span class="hljs-number"> 116 </span>124<span class="hljs-number"> 124 </span>113<span class="hljs-number"> 108 </span>76<span class="hljs-number"> 76 </span>76<span class="hljs-number"> 76 </span>138<span class="hljs-number"> 23 </span>90<span class="hljs-number"> 81 </span>66<span class="hljs-number"> 71 </span>64<span class="hljs-number"> 69 </span>114<span class="hljs-number"> 65 </span>112<span class="hljs-number"> 64 </span>66<span class="hljs-number"> 63 </span>69<span class="hljs-number"> 61 </span>70<span class="hljs-number"> 114 </span>62<span class="hljs-number"> 66 </span>61<span class="hljs-number"> 62 </span>69<span class="hljs-number"> 67 </span>70<span class="hljs-number"> 63 </span>61<span class="hljs-number"> 110 </span>110<span class="hljs-number"> 112 </span>64<span class="hljs-number"> 68 </span>62<span class="hljs-number"> 70 </span>61<span class="hljs-number"> 112 </span>111 112&quot;<br>c_list = c.split(&quot; &quot;)<br>c_str = &quot;&quot;<br>for i in c_list:<br>    c_str += chr(int(i)-13)<br><br>print c_str<br></code></pre></td></tr></table></figure><p>运行脚本，得到一个残缺的flag和MD5信息：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">FLAG</span> IS flag&#123;www_shiyanbar_com_is_very_good_????&#125;<br><span class="hljs-attribute">MD5</span>:<span class="hljs-number">38</span>e<span class="hljs-number">4</span>c<span class="hljs-number">352809</span>e<span class="hljs-number">150186920</span>aac<span class="hljs-number">37190</span>cbc<br></code></pre></td></tr></table></figure><p>MD5值应该是校验flag信息的，需要对MD5进行爆破来得到真实的flag，这里使用一个总的python脚本来求解：</p><figure class="highlight tap"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs tap">import hashlib<br>c = &quot;83<span class="hljs-number"> 89 </span>78<span class="hljs-number"> 84 </span>45<span class="hljs-number"> 86 </span>96<span class="hljs-number"> 45 </span>115<span class="hljs-number"> 121 </span>110<span class="hljs-number"> 116 </span>136<span class="hljs-number"> 132 </span>132<span class="hljs-number"> 132 </span>108<span class="hljs-number"> 128 </span>117<span class="hljs-number"> 118 </span>134<span class="hljs-number"> 110 </span>123<span class="hljs-number"> 111 </span>110<span class="hljs-number"> 127 </span>108<span class="hljs-number"> 112 </span>124<span class="hljs-number"> 122 </span>108<span class="hljs-number"> 118 </span>128<span class="hljs-number"> 108 </span>131<span class="hljs-number"> 114 </span>127<span class="hljs-number"> 134 </span>108<span class="hljs-number"> 116 </span>124<span class="hljs-number"> 124 </span>113<span class="hljs-number"> 108 </span>76<span class="hljs-number"> 76 </span>76<span class="hljs-number"> 76 </span>138<span class="hljs-number"> 23 </span>90<span class="hljs-number"> 81 </span>66<span class="hljs-number"> 71 </span>64<span class="hljs-number"> 69 </span>114<span class="hljs-number"> 65 </span>112<span class="hljs-number"> 64 </span>66<span class="hljs-number"> 63 </span>69<span class="hljs-number"> 61 </span>70<span class="hljs-number"> 114 </span>62<span class="hljs-number"> 66 </span>61<span class="hljs-number"> 62 </span>69<span class="hljs-number"> 67 </span>70<span class="hljs-number"> 63 </span>61<span class="hljs-number"> 110 </span>110<span class="hljs-number"> 112 </span>64<span class="hljs-number"> 68 </span>62<span class="hljs-number"> 70 </span>61<span class="hljs-number"> 112 </span>111 112&quot;<br>c_list = c.split(&quot; &quot;)<br>c_str = &quot;&quot;<br>for i in c_list:<br>    c_str += chr(int(i)-13)<br><br><span class="hljs-comment"># print c_str</span><br><span class="hljs-comment"># print c_str.find(&quot;&#123;&quot;)</span><br><span class="hljs-comment"># print c_str.find(&quot;&#125;&quot;)</span><br><span class="hljs-comment"># print c_str.find(&quot;3&quot;)</span><br>little_flag = c_str[8:49]<br>flag_md5 = c_str[54:]<br>flag_str = little_flag[:-5]<br>flag = &quot;&quot;<br><span class="hljs-comment"># print flag_str</span><br>for i in range(49,123):<br>    for j in range(49,123):<br>        for k in range(49,123):<br>            for l in range(49,123):<br>                result = flag_str + chr(i) + chr(j) + chr(k) + chr(l) + &quot;&#125;&quot;<br>                if hashlib.md5(result).hexdigest() == flag_md5:<br>                    flag = result<br>                    break<br>print flag<br></code></pre></td></tr></table></figure><p>运行脚本，得到flag：</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs angelscript">flag&#123;<span class="hljs-symbol">www_shiyanbar_com_is_very_good_@</span><span class="hljs-number">8</span>Mu&#125;<br></code></pre></td></tr></table></figure><p>flag:flag{www_shiyanbar_com_is_very_good_@8Mu}</p><h2 id="0xD-Keyboard"><a href="#0xD-Keyboard" class="headerlink" title="0xD Keyboard"></a>0xD Keyboard</h2><p>会是键盘密码吗？下载附件，瞧一瞧吧！</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css">ooo yyy ii w uuu ee uuuu yyy uuuu y w uuu <span class="hljs-selector-tag">i</span> <span class="hljs-selector-tag">i</span> rr w <span class="hljs-selector-tag">i</span> <span class="hljs-selector-tag">i</span> rr rrr uuuu rrr uuuu t ii uuuu <span class="hljs-selector-tag">i</span> w u rrr ee www ee yyy eee www w tt ee<br></code></pre></td></tr></table></figure><p>果真是键盘密码，出现的字符都是26键键盘上面那一排对应的字符，而字符对应0-9的数字正好又对应着九键键盘的数字，而出现的次数代表九键键盘一个键的第几个字符，这样解密思路就非常流畅了。</p><p><img src="post_16.assets/l93LrR.png" alt="img"></p><p>根据图示内容编写一个python脚本：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">str_26</span> = <span class="hljs-string">&quot;pqwertyuio&quot;</span><br><span class="hljs-attribute">str_9</span> = <span class="hljs-string">&quot;abc def ghi jkl mno pqrs tuv wxyz&quot;</span><br><br><span class="hljs-attribute">list_9</span> = str_<span class="hljs-number">9</span>.split(<span class="hljs-string">&quot; &quot;</span>)<br><span class="hljs-attribute">dict_26</span> = &#123;&#125;<br><span class="hljs-attribute">dict_9</span> = &#123;&#125;<br><br><span class="hljs-attribute">index_26</span> = <span class="hljs-number">0</span><br><span class="hljs-attribute">index_9</span> = <span class="hljs-number">0</span><br><br><span class="hljs-attribute">for</span> i in str_<span class="hljs-number">26</span>:<br>    <span class="hljs-attribute">dict_26</span>[index_<span class="hljs-number">26</span>] = i<br>    <span class="hljs-attribute">index_26</span> += <span class="hljs-number">1</span><br><span class="hljs-attribute">for</span> i in range(<span class="hljs-number">10</span>):<br>    <span class="hljs-attribute">if</span> i &lt; <span class="hljs-number">2</span>:<br>        <span class="hljs-attribute">dict_9</span>[i] = None;<br>    <span class="hljs-attribute">else</span>:<br>        <span class="hljs-attribute">dict_9</span>[i] = list_<span class="hljs-number">9</span>[index_<span class="hljs-number">9</span>]<br>        <span class="hljs-attribute">index_9</span> += <span class="hljs-number">1</span><br><br><span class="hljs-comment"># print dict_26</span><br><span class="hljs-comment"># print dict_9</span><br><br><span class="hljs-attribute">c</span> = <span class="hljs-string">&quot;ooo yyy ii w uuu ee uuuu yyy uuuu y w uuu i i rr w i i rr rrr uuuu rrr uuuu t ii uuuu i w u rrr ee www ee yyy eee www w tt ee&quot;</span><br><span class="hljs-attribute">c_list</span> = c.split(<span class="hljs-string">&quot; &quot;</span>)<br><span class="hljs-attribute">result</span> = <span class="hljs-string">&quot;&quot;</span><br><span class="hljs-attribute">for</span> i in c_list:<br>    <span class="hljs-attribute">for</span> j in range(<span class="hljs-number">10</span>):<br>        <span class="hljs-attribute">if</span> i[<span class="hljs-number">0</span>] == dict_<span class="hljs-number">26</span>[j]:<br>            <span class="hljs-attribute">result</span> += dict_<span class="hljs-number">9</span>[j][len(i)-<span class="hljs-number">1</span>]<br><br><span class="hljs-attribute">flag</span> = <span class="hljs-string">&quot;flag&#123;&quot;</span>+ result +<span class="hljs-string">&quot;&#125;&quot;</span><br><span class="hljs-attribute">print</span> flag<br></code></pre></td></tr></table></figure><p>运行脚本，得到flag：</p><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dust"><span class="xml">flag</span><span class="hljs-template-variable">&#123;youaresosmartthatthisisjustapieceofcake&#125;</span><br></code></pre></td></tr></table></figure><p>flag:flag{youaresosmartthatthisisjustapieceofcake}</p><h2 id="0xE-这是什么"><a href="#0xE-这是什么" class="headerlink" title="0xE 这是什么"></a>0xE 这是什么</h2><p>查看题目描述：</p><figure class="highlight sqf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sqf">小明是一个软件专业的高材生，但是老师布置的这次的作业似乎不怎么靠谱，因为他们老师以前是学物理的！喜欢乱七八糟命名文件，还喜欢奇奇怪怪的编码。你快帮小明看一下这题，小明准备好了一箱子辣条。 注意：得到的 <span class="hljs-built_in">flag</span> 请包上 <span class="hljs-built_in">flag</span>&#123;&#125; 提交<br></code></pre></td></tr></table></figure><p>题目描述可以看到明显的提示：喜欢乱七八糟命名文件，还喜欢奇奇怪怪的编码。</p><p>这道题目应该考察的是奇奇怪怪的编码，下载附件，发现附件是一个apk文件，使用file命令简单查看一下apk文件的类型：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">94f5b952</span>-<span class="hljs-number">3710</span>-<span class="hljs-number">4609</span>-ab<span class="hljs-number">6</span>f-bc<span class="hljs-number">11609</span>fdc<span class="hljs-number">67</span>.apk: Composite Document File V<span class="hljs-number">2</span> Document, Little Endian, Os: Windows, Version <span class="hljs-number">6</span>.<span class="hljs-number">1</span>, Code page: <span class="hljs-number">936</span>, Author: Administrator, Template: Normal.dotm, Last Saved By: Administrator, Revision Number: <span class="hljs-number">5</span>, Name of Creating Application: Microsoft Office Word, Total Editing Time: <span class="hljs-number">07</span>:<span class="hljs-number">00</span>, Create Time/Date: Tue Dec <span class="hljs-number">30</span> <span class="hljs-number">03</span>:<span class="hljs-number">15</span>:<span class="hljs-number">00</span> <span class="hljs-number">2014</span>, Last Saved Time/Date: Tue Dec <span class="hljs-number">30</span> <span class="hljs-number">03</span>:<span class="hljs-number">42</span>:<span class="hljs-number">00</span> <span class="hljs-number">2014</span>, Number of Pages: <span class="hljs-number">3</span>, Number of Words: <span class="hljs-number">1921</span>, Number of Characters: <span class="hljs-number">10950</span>, Security: <span class="hljs-number">0</span><br></code></pre></td></tr></table></figure><p>发现文件应该是一个document文件，可以修改成txt文件查看文件内容</p><figure class="highlight inform7"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><code class="hljs inform7">邢唷??                &gt;  ?               H          J      ?    G   欹? €  餜?             U:   bjbj肴肴                   8@  墷  墷  G2      <br>                                                          ?     P      P  ?      ?      ?      ?      ?                 ?      ?      ?  8   ?     ?     ?      N  l  ?      ?      ?      ?      ?      1      1      1      ?     ?      ?      ?      ?      ?      ?  $   ?  ?    ^   ?                     ?      1                      1      1      1      1      ?              ?      ?      ?              ?  4       ?      ?      ?      1  X   ?      ?      ?      ?      ?              ?                                                      1      ?              ?              ?                                                                              ?      ?          癴櫄??        ?      ?      ?              ?       0   N      ?      ?      ?      ?      ?                                                                              ?              ?      ?  0   1      1      ?      1      1                                      1      1      1      ?      ?                                      ?                                      1      1      1      N      1      1      1      1                                                                                      span class="hljs-comment">[]</span><span class="hljs-comment">[(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(<span class="hljs-comment">[!<span class="hljs-comment">[]</span>]</span>+<span class="hljs-comment">[]</span><span class="hljs-comment">[<span class="hljs-comment">[]</span>]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>+<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>]</span>+(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>]</span>]</span><span class="hljs-comment">[(<span class="hljs-comment">[]</span><span class="hljs-comment">[(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(<span class="hljs-comment">[!<span class="hljs-comment">[]</span>]</span>+<span class="hljs-comment">[]</span><span class="hljs-comment">[<span class="hljs-comment">[]</span>]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>+<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>]</span>+(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>]</span>]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span><span class="hljs-comment">[(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(<span class="hljs-comment">[!<span class="hljs-comment">[]</span>]</span>+<span class="hljs-comment">[]</span><span class="hljs-comment">[<span class="hljs-comment">[]</span>]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>+<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>]</span>+(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>]</span>]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>+<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>]</span>+(<span class="hljs-comment">[]</span><span class="hljs-comment">[<span class="hljs-comment">[]</span>]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>]</span>+(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>]</span>+(<span class="hljs-comment">[]</span><span class="hljs-comment">[<span class="hljs-comment">[]</span>]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(<span class="hljs-comment">[]</span><span class="hljs-comment">[(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(<span class="hljs-comment">[!<span class="hljs-comment">[]</span>]</span>+<span class="hljs-comment">[]</span><span class="hljs-comment">[<span class="hljs-comment">[]</span>]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>+<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>]</span>+(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>]</span>]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span><span class="hljs-comment">[(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(<span class="hljs-comment">[!<span class="hljs-comment">[]</span>]</span>+<span class="hljs-comment">[]</span><span class="hljs-comment">[<span class="hljs-comment">[]</span>]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>+<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>]</span>+(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>]</span>]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>+<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>]</span>]</span>((!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>]</span>+(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span><span class="hljs-comment">[(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(<span class="hljs-comment">[!<span class="hljs-comment">[]</span>]</span>+<span class="hljs-comment">[]</span><span class="hljs-comment">[<span class="hljs-comment">[]</span>]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>+<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>]</span>+(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>]</span>]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>]</span>+(<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span><span class="hljs-comment">[(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(<span class="hljs-comment">[!<span class="hljs-comment">[]</span>]</span>+<span class="hljs-comment">[]</span><span class="hljs-comment">[<span class="hljs-comment">[]</span>]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>+<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>]</span>+(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>]</span>]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>+<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>]</span>+(<span class="hljs-comment">[]</span><span class="hljs-comment">[<span class="hljs-comment">[]</span>]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(<span class="hljs-comment">[]</span><span class="hljs-comment">[(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(<span class="hljs-comment">[!<span class="hljs-comment">[]</span>]</span>+<span class="hljs-comment">[]</span><span class="hljs-comment">[<span class="hljs-comment">[]</span>]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>+<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>]</span>+(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>]</span>]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span><span class="hljs-comment">[(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(<span class="hljs-comment">[!<span class="hljs-comment">[]</span>]</span>+<span class="hljs-comment">[]</span><span class="hljs-comment">[<span class="hljs-comment">[]</span>]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>+<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>]</span>+(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>]</span>]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>+<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>]</span>+(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span><span class="hljs-comment">[(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(<span class="hljs-comment">[!<span class="hljs-comment">[]</span>]</span>+<span class="hljs-comment">[]</span><span class="hljs-comment">[<span class="hljs-comment">[]</span>]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>+<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>]</span>+(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>]</span>]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>+<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>]</span>]</span>()<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>+<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>]</span>+(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>]</span>+(+!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[!<span class="hljs-comment">[]</span>]</span>+(<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[(<span class="hljs-comment">[]</span><span class="hljs-comment">[(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(<span class="hljs-comment">[!<span class="hljs-comment">[]</span>]</span>+<span class="hljs-comment">[]</span><span class="hljs-comment">[<span class="hljs-comment">[]</span>]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>+<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>]</span>+(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>]</span>]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span><span class="hljs-comment">[(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(<span class="hljs-comment">[!<span class="hljs-comment">[]</span>]</span>+<span class="hljs-comment">[]</span><span class="hljs-comment">[<span class="hljs-comment">[]</span>]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>+<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>]</span>+(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>]</span>]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>+<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>]</span>+(<span class="hljs-comment">[]</span><span class="hljs-comment">[<span class="hljs-comment">[]</span>]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>]</span>+(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>]</span>+(<span class="hljs-comment">[]</span><span class="hljs-comment">[<span class="hljs-comment">[]</span>]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(<span class="hljs-comment">[]</span><span class="hljs-comment">[(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(<span class="hljs-comment">[!<span class="hljs-comment">[]</span>]</span>+<span class="hljs-comment">[]</span><span class="hljs-comment">[<span class="hljs-comment">[]</span>]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>+<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>]</span>+(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>]</span>]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span><span class="hljs-comment">[(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(<span class="hljs-comment">[!<span class="hljs-comment">[]</span>]</span>+<span class="hljs-comment">[]</span><span class="hljs-comment">[<span class="hljs-comment">[]</span>]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>+<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>]</span>+(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>]</span>]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>+<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>]</span>]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>]</span>+(+<span class="hljs-comment">[!<span class="hljs-comment">[]</span>]</span>+<span class="hljs-comment">[]</span><span class="hljs-comment">[(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(<span class="hljs-comment">[!<span class="hljs-comment">[]</span>]</span>+<span class="hljs-comment">[]</span><span class="hljs-comment">[<span class="hljs-comment">[]</span>]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>+<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>]</span>+(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>]</span>]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>]</span>]</span>+(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>]</span>+<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(<span class="hljs-comment">[]</span><span class="hljs-comment">[<span class="hljs-comment">[]</span>]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(+(+!+<span class="hljs-comment">[]</span>+<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>]</span>))<span class="hljs-comment">[(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span><span class="hljs-comment">[(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(<span class="hljs-comment">[!<span class="hljs-comment">[]</span>]</span>+<span class="hljs-comment">[]</span><span class="hljs-comment">[<span class="hljs-comment">[]</span>]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>+<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>]</span>+(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>]</span>]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>+<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>]</span>+(+!<span class="hljs-comment">[]</span>+(<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[(<span class="hljs-comment">[]</span><span class="hljs-comment">[(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(<span class="hljs-comment">[!<span class="hljs-comment">[]</span>]</span>+<span class="hljs-comment">[]</span><span class="hljs-comment">[<span class="hljs-comment">[]</span>]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>+<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>]</span>+(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>]</span>]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span><span class="hljs-comment">[(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(<span class="hljs-comment">[!<span class="hljs-comment">[]</span>]</span>+<span class="hljs-comment">[]</span><span class="hljs-comment">[<span class="hljs-comment">[]</span>]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>+<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>]</span>+(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>]</span>]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>+<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>]</span>+(<span class="hljs-comment">[]</span><span class="hljs-comment">[<span class="hljs-comment">[]</span>]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>]</span>+(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>]</span>+(<span class="hljs-comment">[]</span><span class="hljs-comment">[<span class="hljs-comment">[]</span>]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(<span class="hljs-comment">[]</span><span class="hljs-comment">[(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(<span class="hljs-comment">[!<span class="hljs-comment">[]</span>]</span>+<span class="hljs-comment">[]</span><span class="hljs-comment">[<span class="hljs-comment">[]</span>]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>+<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>]</span>+(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>]</span>]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span><span class="hljs-comment">[(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(<span class="hljs-comment">[!<span class="hljs-comment">[]</span>]</span>+<span class="hljs-comment">[]</span><span class="hljs-comment">[<span class="hljs-comment">[]</span>]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>+<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>]</span>+(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>]</span>]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>+<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>]</span>]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>+<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>]</span>+(<span class="hljs-comment">[!<span class="hljs-comment">[]</span>]</span>+<span class="hljs-comment">[]</span><span class="hljs-comment">[<span class="hljs-comment">[]</span>]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>+<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>]</span>+(<span class="hljs-comment">[]</span><span class="hljs-comment">[<span class="hljs-comment">[]</span>]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>]</span>+(+!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[!<span class="hljs-comment">[]</span>]</span>+(<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[(<span class="hljs-comment">[]</span><span class="hljs-comment">[(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(<span class="hljs-comment">[!<span class="hljs-comment">[]</span>]</span>+<span class="hljs-comment">[]</span><span class="hljs-comment">[<span class="hljs-comment">[]</span>]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>+<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>]</span>+(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>]</span>]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span><span class="hljs-comment">[(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(<span class="hljs-comment">[!<span class="hljs-comment">[]</span>]</span>+<span class="hljs-comment">[]</span><span class="hljs-comment">[<span class="hljs-comment">[]</span>]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>+<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>]</span>+(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>]</span>]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>+<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>]</span>+(<span class="hljs-comment">[]</span><span class="hljs-comment">[<span class="hljs-comment">[]</span>]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>]</span>+(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>]</span>+(<span class="hljs-comment">[]</span><span class="hljs-comment">[<span class="hljs-comment">[]</span>]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(<span class="hljs-comment">[]</span><span class="hljs-comment">[(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(<span class="hljs-comment">[!<span class="hljs-comment">[]</span>]</span>+<span class="hljs-comment">[]</span><span class="hljs-comment">[<span class="hljs-comment">[]</span>]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>+<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>]</span>+(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>]</span>]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span><span class="hljs-comment">[(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(<span class="hljs-comment">[!<span class="hljs-comment">[]</span>]</span>+<span class="hljs-comment">[]</span><span class="hljs-comment">[<span class="hljs-comment">[]</span>]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>+<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>]</span>+(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>]</span>]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>+<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>]</span>]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>]</span>]</span>(!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>)+<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(<span class="hljs-comment">[]</span><span class="hljs-comment">[(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(<span class="hljs-comment">[!<span class="hljs-comment">[]</span>]</span>+<span class="hljs-comment">[]</span><span class="hljs-comment">[<span class="hljs-comment">[]</span>]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>+<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>]</span>+(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>]</span>]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>]</span>+<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(<span class="hljs-comment">[]</span><span class="hljs-comment">[(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(<span class="hljs-comment">[!<span class="hljs-comment">[]</span>]</span>+<span class="hljs-comment">[]</span><span class="hljs-comment">[<span class="hljs-comment">[]</span>]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>+<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>]</span>+(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>]</span>]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>]</span>+<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(<span class="hljs-comment">[]</span><span class="hljs-comment">[(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(<span class="hljs-comment">[!<span class="hljs-comment">[]</span>]</span>+<span class="hljs-comment">[]</span><span class="hljs-comment">[<span class="hljs-comment">[]</span>]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>+<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>]</span>+(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>]</span>]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(<span class="hljs-comment">[]</span><span class="hljs-comment">[<span class="hljs-comment">[]</span>]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>]</span>+(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>]</span>+<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+<span class="hljs-comment">[]</span><span class="hljs-comment">[(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(<span class="hljs-comment">[!<span class="hljs-comment">[]</span>]</span>+<span class="hljs-comment">[]</span><span class="hljs-comment">[<span class="hljs-comment">[]</span>]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>+<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>]</span>+(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>]</span>]</span><span class="hljs-comment">[(<span class="hljs-comment">[]</span><span class="hljs-comment">[(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(<span class="hljs-comment">[!<span class="hljs-comment">[]</span>]</span>+<span class="hljs-comment">[]</span><span class="hljs-comment">[<span class="hljs-comment">[]</span>]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>+<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>]</span>+(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>]</span>]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span><span class="hljs-comment">[(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(<span class="hljs-comment">[!<span class="hljs-comment">[]</span>]</span>+<span class="hljs-comment">[]</span><span class="hljs-comment">[<span class="hljs-comment">[]</span>]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>+<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>]</span>+(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>]</span>]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>+<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>]</span>+(<span class="hljs-comment">[]</span><span class="hljs-comment">[<span class="hljs-comment">[]</span>]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>]</span>+(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>]</span>+(<span class="hljs-comment">[]</span><span class="hljs-comment">[<span class="hljs-comment">[]</span>]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(<span class="hljs-comment">[]</span><span class="hljs-comment">[(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(<span class="hljs-comment">[!<span class="hljs-comment">[]</span>]</span>+<span class="hljs-comment">[]</span><span class="hljs-comment">[<span class="hljs-comment">[]</span>]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>+<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>]</span>+(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>]</span>]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span><span class="hljs-comment">[(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(<span class="hljs-comment">[!<span class="hljs-comment">[]</span>]</span>+<span class="hljs-comment">[]</span><span class="hljs-comment">[<span class="hljs-comment">[]</span>]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>+<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>]</span>+(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>]</span>]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>+<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>]</span>]</span>((!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(<span class="hljs-comment">[]</span><span class="hljs-comment">[<span class="hljs-comment">[]</span>]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>]</span>+(<span class="hljs-comment">[]</span><span class="hljs-comment">[<span class="hljs-comment">[]</span>]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>]</span>+(+<span class="hljs-comment">[!<span class="hljs-comment">[]</span>]</span>+<span class="hljs-comment">[]</span><span class="hljs-comment">[(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(<span class="hljs-comment">[!<span class="hljs-comment">[]</span>]</span>+<span class="hljs-comment">[]</span><span class="hljs-comment">[<span class="hljs-comment">[]</span>]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>+<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>]</span>+(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>]</span>]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>+<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>]</span>]</span>+(<span class="hljs-comment">[]</span><span class="hljs-comment">[<span class="hljs-comment">[]</span>]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(<span class="hljs-comment">[]</span><span class="hljs-comment">[<span class="hljs-comment">[]</span>]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(<span class="hljs-comment">[]</span><span class="hljs-comment">[(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(<span class="hljs-comment">[!<span class="hljs-comment">[]</span>]</span>+<span class="hljs-comment">[]</span><span class="hljs-comment">[<span class="hljs-comment">[]</span>]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>+<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>]</span>+(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>]</span>]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>]</span>+(+(!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>]</span>+<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>]</span>))<span class="hljs-comment">[(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span><span class="hljs-comment">[(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(<span class="hljs-comment">[!<span class="hljs-comment">[]</span>]</span>+<span class="hljs-comment">[]</span><span class="hljs-comment">[<span class="hljs-comment">[]</span>]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>+<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>]</span>+(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>]</span>]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>+<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>]</span>+(+!<span class="hljs-comment">[]</span>+(<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[(<span class="hljs-comment">[]</span><span class="hljs-comment">[(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(<span class="hljs-comment">[!<span class="hljs-comment">[]</span>]</span>+<span class="hljs-comment">[]</span><span class="hljs-comment">[<span class="hljs-comment">[]</span>]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>+<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>]</span>+(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>]</span>]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span><span class="hljs-comment">[(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(<span class="hljs-comment">[!<span class="hljs-comment">[]</span>]</span>+<span class="hljs-comment">[]</span><span class="hljs-comment">[<span class="hljs-comment">[]</span>]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>+<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>]</span>+(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>]</span>]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>+<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>]</span>+(<span class="hljs-comment">[]</span><span class="hljs-comment">[<span class="hljs-comment">[]</span>]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>]</span>+(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>]</span>+(<span class="hljs-comment">[]</span><span class="hljs-comment">[<span class="hljs-comment">[]</span>]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(<span class="hljs-comment">[]</span><span class="hljs-comment">[(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(<span class="hljs-comment">[!<span class="hljs-comment">[]</span>]</span>+<span class="hljs-comment">[]</span><span class="hljs-comment">[<span class="hljs-comment">[]</span>]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>+<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>]</span>+(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>]</span>]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span><span class="hljs-comment">[(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(<span class="hljs-comment">[!<span class="hljs-comment">[]</span>]</span>+<span class="hljs-comment">[]</span><span class="hljs-comment">[<span class="hljs-comment">[]</span>]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>+<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>]</span>+(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>]</span>]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>+<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>]</span>]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>+<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>]</span>+(<span class="hljs-comment">[!<span class="hljs-comment">[]</span>]</span>+<span class="hljs-comment">[]</span><span class="hljs-comment">[<span class="hljs-comment">[]</span>]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>+<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>]</span>+(<span class="hljs-comment">[]</span><span class="hljs-comment">[<span class="hljs-comment">[]</span>]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>]</span>+(+!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[!<span class="hljs-comment">[]</span>]</span>+(<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[(<span class="hljs-comment">[]</span><span class="hljs-comment">[(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(<span class="hljs-comment">[!<span class="hljs-comment">[]</span>]</span>+<span class="hljs-comment">[]</span><span class="hljs-comment">[<span class="hljs-comment">[]</span>]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>+<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>]</span>+(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>]</span>]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span><span class="hljs-comment">[(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(<span class="hljs-comment">[!<span class="hljs-comment">[]</span>]</span>+<span class="hljs-comment">[]</span><span class="hljs-comment">[<span class="hljs-comment">[]</span>]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>+<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>]</span>+(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>]</span>]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>+<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>]</span>+(<span class="hljs-comment">[]</span><span class="hljs-comment">[<span class="hljs-comment">[]</span>]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>]</span>+(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>]</span>+(<span class="hljs-comment">[]</span><span class="hljs-comment">[<span class="hljs-comment">[]</span>]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(<span class="hljs-comment">[]</span><span class="hljs-comment">[(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(<span class="hljs-comment">[!<span class="hljs-comment">[]</span>]</span>+<span class="hljs-comment">[]</span><span class="hljs-comment">[<span class="hljs-comment">[]</span>]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>+<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>]</span>+(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>]</span>]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span><span class="hljs-comment">[(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(<span class="hljs-comment">[!<span class="hljs-comment">[]</span>]</span>+<span class="hljs-comment">[]</span><span class="hljs-comment">[<span class="hljs-comment">[]</span>]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>+<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>]</span>+(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>]</span>]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>+<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>]</span>]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>]</span>]</span>(!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>)()(<span class="hljs-comment">[]</span><span class="hljs-comment">[(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(<span class="hljs-comment">[!<span class="hljs-comment">[]</span>]</span>+<span class="hljs-comment">[]</span><span class="hljs-comment">[<span class="hljs-comment">[]</span>]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>+<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>]</span>+(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>]</span>]</span><span class="hljs-comment">[(<span class="hljs-comment">[]</span><span class="hljs-comment">[(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(<span class="hljs-comment">[!<span class="hljs-comment">[]</span>]</span>+<span class="hljs-comment">[]</span><span class="hljs-comment">[<span class="hljs-comment">[]</span>]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>+<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>]</span>+(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>]</span>]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span><span class="hljs-comment">[(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(<span class="hljs-comment">[!<span class="hljs-comment">[]</span>]</span>+<span class="hljs-comment">[]</span><span class="hljs-comment">[<span class="hljs-comment">[]</span>]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>+<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>]</span>+(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>]</span>]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>+<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>]</span>+(<span class="hljs-comment">[]</span><span class="hljs-comment">[<span class="hljs-comment">[]</span>]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>]</span>+(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>]</span>+(<span class="hljs-comment">[]</span><span class="hljs-comment">[<span class="hljs-comment">[]</span>]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(<span class="hljs-comment">[]</span><span class="hljs-comment">[(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(<span class="hljs-comment">[!<span class="hljs-comment">[]</span>]</span>+<span class="hljs-comment">[]</span><span class="hljs-comment">[<span class="hljs-comment">[]</span>]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>+<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>]</span>+(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>]</span>]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span><span class="hljs-comment">[(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(<span class="hljs-comment">[!<span class="hljs-comment">[]</span>]</span>+<span class="hljs-comment">[]</span><span class="hljs-comment">[<span class="hljs-comment">[]</span>]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>+<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>]</span>+(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>]</span>]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>+<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>]</span>]</span>((!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(<span class="hljs-comment">[]</span><span class="hljs-comment">[<span class="hljs-comment">[]</span>]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>]</span>+(<span class="hljs-comment">[]</span><span class="hljs-comment">[<span class="hljs-comment">[]</span>]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>]</span>+(+<span class="hljs-comment">[!<span class="hljs-comment">[]</span>]</span>+<span class="hljs-comment">[]</span><span class="hljs-comment">[(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(<span class="hljs-comment">[!<span class="hljs-comment">[]</span>]</span>+<span class="hljs-comment">[]</span><span class="hljs-comment">[<span class="hljs-comment">[]</span>]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>+<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>]</span>+(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>]</span>]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>+<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(<span class="hljs-comment">[]</span><span class="hljs-comment">[(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(<span class="hljs-comment">[!<span class="hljs-comment">[]</span>]</span>+<span class="hljs-comment">[]</span><span class="hljs-comment">[<span class="hljs-comment">[]</span>]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>+<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>]</span>+(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>]</span>]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>]</span>+(+(!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>]</span>+<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>]</span>))<span class="hljs-comment">[(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span><span class="hljs-comment">[(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(<span class="hljs-comment">[!<span class="hljs-comment">[]</span>]</span>+<span class="hljs-comment">[]</span><span class="hljs-comment">[<span class="hljs-comment">[]</span>]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>+<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>]</span>+(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>]</span>]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>+<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>]</span>+(+!<span class="hljs-comment">[]</span>+(<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[(<span class="hljs-comment">[]</span><span class="hljs-comment">[(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(<span class="hljs-comment">[!<span class="hljs-comment">[]</span>]</span>+<span class="hljs-comment">[]</span><span class="hljs-comment">[<span class="hljs-comment">[]</span>]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>+<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>]</span>+(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>]</span>]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span><span class="hljs-comment">[(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(<span class="hljs-comment">[!<span class="hljs-comment">[]</span>]</span>+<span class="hljs-comment">[]</span><span class="hljs-comment">[<span class="hljs-comment">[]</span>]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>+<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>]</span>+(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>]</span>]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>+<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>]</span>+(<span class="hljs-comment">[]</span><span class="hljs-comment">[<span class="hljs-comment">[]</span>]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>]</span>+(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>]</span>+(<span class="hljs-comment">[]</span><span class="hljs-comment">[<span class="hljs-comment">[]</span>]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(<span class="hljs-comment">[]</span><span class="hljs-comment">[(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(<span class="hljs-comment">[!<span class="hljs-comment">[]</span>]</span>+<span class="hljs-comment">[]</span><span class="hljs-comment">[<span class="hljs-comment">[]</span>]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>+<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>]</span>+(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>]</span>]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span><span class="hljs-comment">[(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(<span class="hljs-comment">[!<span class="hljs-comment">[]</span>]</span>+<span class="hljs-comment">[]</span><span class="hljs-comment">[<span class="hljs-comment">[]</span>]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>+<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>]</span>+(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>]</span>]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>+<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>]</span>]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>+<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>]</span>+(<span class="hljs-comment">[!<span class="hljs-comment">[]</span>]</span>+<span class="hljs-comment">[]</span><span class="hljs-comment">[<span class="hljs-comment">[]</span>]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>+<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>]</span>+(<span class="hljs-comment">[]</span><span class="hljs-comment">[<span class="hljs-comment">[]</span>]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>]</span>+(+!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[!<span class="hljs-comment">[]</span>]</span>+(<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[(<span class="hljs-comment">[]</span><span class="hljs-comment">[(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(<span class="hljs-comment">[!<span class="hljs-comment">[]</span>]</span>+<span class="hljs-comment">[]</span><span class="hljs-comment">[<span class="hljs-comment">[]</span>]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>+<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>]</span>+(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>]</span>]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span><span class="hljs-comment">[(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(<span class="hljs-comment">[!<span class="hljs-comment">[]</span>]</span>+<span class="hljs-comment">[]</span><span class="hljs-comment">[<span class="hljs-comment">[]</span>]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>+<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>]</span>+(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>]</span>]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>+<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>]</span>+(<span class="hljs-comment">[]</span><span class="hljs-comment">[<span class="hljs-comment">[]</span>]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>]</span>+(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>]</span>+(<span class="hljs-comment">[]</span><span class="hljs-comment">[<span class="hljs-comment">[]</span>]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(<span class="hljs-comment">[]</span><span class="hljs-comment">[(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(<span class="hljs-comment">[!<span class="hljs-comment">[]</span>]</span>+<span class="hljs-comment">[]</span><span class="hljs-comment">[<span class="hljs-comment">[]</span>]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>+<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>]</span>+(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>]</span>]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span><span class="hljs-comment">[(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(<span class="hljs-comment">[!<span class="hljs-comment">[]</span>]</span>+<span class="hljs-comment">[]</span><span class="hljs-comment">[<span class="hljs-comment">[]</span>]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>+<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>]</span>+(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>]</span>]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>+<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>]</span>]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>]</span>]</span>(!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>)()((<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[(<span class="hljs-comment">[!<span class="hljs-comment">[]</span>]</span>+<span class="hljs-comment">[]</span><span class="hljs-comment">[<span class="hljs-comment">[]</span>]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>+<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>]</span>+(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(<span class="hljs-comment">[!<span class="hljs-comment">[]</span>]</span>+<span class="hljs-comment">[]</span><span class="hljs-comment">[<span class="hljs-comment">[]</span>]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>+<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>]</span>+(<span class="hljs-comment">[]</span><span class="hljs-comment">[(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(<span class="hljs-comment">[!<span class="hljs-comment">[]</span>]</span>+<span class="hljs-comment">[]</span><span class="hljs-comment">[<span class="hljs-comment">[]</span>]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>+<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>]</span>+(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>]</span>]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>]</span>()<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(<span class="hljs-comment">[]</span><span class="hljs-comment">[<span class="hljs-comment">[]</span>]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>)+(<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span><span class="hljs-comment">[(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(<span class="hljs-comment">[!<span class="hljs-comment">[]</span>]</span>+<span class="hljs-comment">[]</span><span class="hljs-comment">[<span class="hljs-comment">[]</span>]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>+<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>]</span>+(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>]</span>]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>+<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>]</span>+(<span class="hljs-comment">[]</span><span class="hljs-comment">[<span class="hljs-comment">[]</span>]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(<span class="hljs-comment">[]</span><span class="hljs-comment">[(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(<span class="hljs-comment">[!<span class="hljs-comment">[]</span>]</span>+<span class="hljs-comment">[]</span><span class="hljs-comment">[<span class="hljs-comment">[]</span>]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>+<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>]</span>+(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>]</span>]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span><span class="hljs-comment">[(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(<span class="hljs-comment">[!<span class="hljs-comment">[]</span>]</span>+<span class="hljs-comment">[]</span><span class="hljs-comment">[<span class="hljs-comment">[]</span>]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>+<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>]</span>+(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>]</span>]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>+<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>]</span>+(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span><span class="hljs-comment">[(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(<span class="hljs-comment">[!<span class="hljs-comment">[]</span>]</span>+<span class="hljs-comment">[]</span><span class="hljs-comment">[<span class="hljs-comment">[]</span>]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>+<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>]</span>+(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>]</span>]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>+<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>]</span>]</span>()<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>+<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span><span class="hljs-comment">[(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(<span class="hljs-comment">[!<span class="hljs-comment">[]</span>]</span>+<span class="hljs-comment">[]</span><span class="hljs-comment">[<span class="hljs-comment">[]</span>]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>+<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>]</span>+(!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>]</span>+(!!<span class="hljs-comment">[]</span>+<span class="hljs-comment">[]</span>)<span class="hljs-comment">[+!+<span class="hljs-comment">[]</span>]</span>]</span>)<span class="hljs-comment">[!+<span class="hljs-comment">[]</span>+!+<span class="hljs-comment">[]</span>+<span class="hljs-comment">[+<span class="hljs-comment">[]</span>]</span>]</span>)()<br><br><br><br><br><br><br><br><br><br><br>                                                                                                                                                                                                                                                                                                                                                                                                                                              F:  G:  H:  J:  K:  M:  N:  P:  Q:  T:  U:  赕赕赕赕?                                                                                                                                                                                                                                                                                                                                                                                                                 h韖?  j    h韖? Uho`? h??  ho`? ho`?    G:  I:  J:  L:  M:  O:  P:  R:  S:  T:  U:  ?            ?            ?            ?            ?            ?            ?            ?            ?            ?            ?                                                                                                                                                                                                                                                                                                                         gdo    gdo`?  6 1?2P :p?? 皞. 捌A!?<span class="hljs-string">&quot;?#悹$悹%?  癝班惄j              ?   ?   ?   ?   ?   ?   ?   ?   ?   6  6  6  6  6  6  6  6  6  v  v  v  v  v  v  v  v  v  6  6  6  6  6  6  &gt;  6  6  6  6  6  6  6  6  6  6  6  6  6  6  6  6  6  6  6  6  6  6  6  6  6  6  6  ?   6  6     6  6  6  6  6  6  6  6  ?   6  6  6  6  6  6  6  6  6  6  6  6  h  H  6  6  6  6  6  6  6  6  6  6  6  6  6  6  6  6  6  6  6  6  6  6  6  6  6  6  6  6  6  6  6  6  6  6  6  6  6  6  6  6  6  6  6  6  6  6  6  6  6  6  6  6  6  6  6  6  6  6  6  6  6  6  6  6  6  ?  6  2     ?  ?  ?  ?          0  @  P  `  p  €  ?  ?  ?  ?  ?       2  (  ?  ?     0  @  P  `  p  €  ?  ?  ?  ?  ?          0  @  P  `  p  €  ?  ?  ?  ?  ?          0  @  P  `  p  €  ?  ?  ?  ?  ?          0  @  P  `  p  €  ?  ?  ?  ?  ?          0  @  P  `  p  €  ?  ?  ?  ?  ?          0  @  P  `  p  €  ?  8  X  ?      V  ~      OJ PJ QJ _HmHnHsHtH    J  `? J   ??    ck噀     $1$ a$   CJ KH _HaJ mHnHsHtH                  $ A ?? $ </span><br><span class="hljs-string">        貫祂=刉<span class="hljs-subst">[SO    B i ?? B       0 nf恏?h   ?  4? </span></span><br><span class="hljs-subst"><span class="hljs-string">l 4?   a?        k ??    </span></span><br><span class="hljs-subst"><span class="hljs-string">      0 鄀Rh?        N   ? N </span></span><br><span class="hljs-subst"><span class="hljs-string"> o 0 u?w  &#x27;  $</span></span><br><span class="hljs-subst"><span class="hljs-string">? 9r &amp;d G$ P?    a$  CJ aJ 2 ?? 2  o 0 u?w  C h a r    CJ KH aJ &lt;    &lt; </span></span><br><span class="hljs-subst"><span class="hljs-string"> o 0 u??    $ </span></span><br><span class="hljs-subst"><span class="hljs-string">? 9r G$ a$  CJ aJ 2 ?? !2  o 0 u?? C h a r    CJ KH aJ PK     ! 倞??        [Content_Types]</span>.xml瑧薺?E鲄卸豶?ヘ微Iw&#125;,?浔-j弰4蛇w旄P?-t#b螜&#123;U畯銧擉T閁^h卍&#125;悒)蛔*1P?揯鬃W孱0)櫐T闉9&lt;搇?ぼ$yi&#125;佸;纞@囨?顚跄H滖男u?D谞z內/0娗盃瘥?$€?X3aZ⒁锣,癉0j~?叨蝏沩~i&gt;?赝3縗`???<span class="hljs-subst">[?G殁??跼k.搒粣..椃碼婵?   PK     ! ブх?   6     _rels/.rels剰蟡?囷吔冄&#125;Q颐%v/C/ ?h&quot;?脎O?</span></span><br><span class="hljs-subst"><span class="hljs-string">?劋秣?孂釘?毆免C?薶醰=?偵叅?[xp啠&#123;鄣_糚眩&lt;???堎O糝瓸d焉襃E?b$q_?槥?L吁R?`畯ㄉ趁0虨O??錏n7擫i鋌〃/鉙綈╡械根铸   PK     ! ky??   ?      theme/theme/themeManager.xml蘉</span></span><br><span class="hljs-subst"><span class="hljs-string">?@醹愘7c?Eb菜? C?A菭覠圩邈?芜諞K</span></span><br><span class="hljs-subst"><span class="hljs-string">Y,?</span></span><br><span class="hljs-subst"><span class="hljs-string">奺?埛饇,?ㄚH?l崆骈x纱?逫萻Q&#125;#諓叚递 值+??較?j=婫W栌?釫?&amp;</span></span><br><span class="hljs-subst"><span class="hljs-string">8?   PK     ! ?m?  Q     theme/theme/theme1.xml靁MoE??F&#123;oc&#x27;vGu?h覨盵糟x=逎zvg53N?j廐H垈z?饴昛$石I)*E阓酀欇鮊?IA?裎&gt;秣羌3緓镹男&gt;掤搁U蟇&lt;Db?i4??I呫!f&lt;&amp;MoJi泯?鈛拡 爮?nz生覓鬭梭&lt;!1?qa?X</span></span><br><span class="hljs-subst"><span class="hljs-string">| |#洞┈.E樒妐l瘡F?栀峡鉴鎭窇q?+?|&amp;z?qHv8甹劀?h肠倖鼱O?1,糷z篑?..狨攬??寒t)羛糽d奰?璿k?[9`j组t跐j蜗 帮儱V?蟌w蕏@鲭&lt;飗┕???璙Hu盠</span></span><br><span class="hljs-subst"><span class="hljs-string">葉嶙*蚭o@_熋譠涰霆? 媉澝w/4Vk.迉BF泷Z篡M圭?g邾?€疷R?賽g?1獗Z攌就E 劝?R觿尠i芷袬P?鄒?o鞉/鐤?$&#125;A蒸&gt;L0斈屵呖z?迃rx鳔脅?稔h9T?奣/魁煜???鍃Y?雒&#x27;蟸?S琦棌~蜩鶅O_|w??馉镉圚t??乤?d NG?1-Rl苼?諶J鴚T锠疢1Kｃ柩&quot;?o</span></span><br><span class="hljs-subst"><span class="hljs-string">he浪撣幝絇L-憒%??绗臙?甴Y7?qP.L姼=岟薲穛炷?I爋fi??墸?帽?墘B?Rb?J款P_p蒅</span></span><br><span class="hljs-subst"><span class="hljs-string">茛▍i㎏鷗郿訉h汧梚櫷o?;7Q嫵2染媱珼?a?/銐翾?嶺厌W?藬霱卂膗H剄?)薶?胺?:Vi豾?r態裶汐橌&quot;r嫃?帓2l徠a麃C奲此U|嚮!8^顩???軤仯?A魶壭眲V韙鄨?讕厏ls囔?4犁_=,涩返o聻TV跥陲&quot;苎鎎H唼灮???熯x薜躻-戏蹺鮸褾;氕衯踯`嘼3&quot;G&#x27;?e昮H柊O话ㄩ恬愪&#x27;?劘i_wp伬???靺8?魂i&amp;丩Y%铝?楎謝視=瞩伭?壵阱綔?r6f?提3储淭厥厰)橗:陋Z?K?誏玸ゅ&amp;C鏜兣軟0€ [浪玴@注醏?j扣?媺耏咹唜H?i荤cT5A蕆跑@顢腍驇馴AZC硙i&#x27;RQm伕,zo?僩Q襲&#123;?Y,Nψ??溷ら嵿L_??跆嘫 7C?6韽-fS宄h62密&quot;5咍麥罭H凾[X?5太4X?Y龡豚殖2纅鷎h辈绅痠~tCKF#猥b?+趙?m鑵?4`眹!?U翞!昿5a:倊€&#123;4韒笫m蝘?o?萎c杽8m泛D矹秔S枪姗?豓1铘?#S奿?3E?pS??疳W`る甸q]</span>(┻08樲?w别?n撏A鲺<span class="hljs-subst">[s枃)k8皓= Aa?R?d趻删c楿咏瞬d)#換ueb?恾满?捷C!ず?i0福&gt;?4魫S?鋥?z虮?F箎?4?sKvUKo瘸椒h垀1砵YU€奥V蠬塔5U8錠k;譁潘鮈9堚寂皹D荀 ??*|FL?迪鳡?A3兇伂&gt;g?类dm2iV值殍そ杕謌&lt;殒r?[kv抶熞蠃p鎶sj?潩z伛礭[鑚堨?叆Qv??縤u鈨??高?%M2羙J描?u 舘%覎?    PK     ! </span></span><br><span class="hljs-subst"><span class="hljs-string">褠煻     &#x27;   theme/theme/_rels/themeManager.xml.rels剰M</span></span><br><span class="hljs-subst"><span class="hljs-string">?匃倃oo雍?輬协?勪5</span></span><br><span class="hljs-subst"><span class="hljs-string">6?$Q祉</span></span><br><span class="hljs-subst"><span class="hljs-string">?.嘺緳i粭澤c2?h?:闀q毩m胳嶡RN壻;d癭値o7?g慘(M&amp;$R(.1榬&#x27;J摐袏T鶂?V?＆A然蠬鱱&#125;狇?|?絙&#123;? 朠?除8塯/]</span>As賲(⑵锑#洩L蔥汉倪    PK-      ! 倞??                      <span class="hljs-subst">[Content_Types]</span>.xmlPK-      ! ブх?   6               +  _rels/.relsPK-      ! ky??   ?                  theme/theme/themeManager.xmlPK-      ! ?m?  Q               ?  theme/theme/theme1.xmlPK-      ! </span><br><span class="hljs-string">褠煻     &#x27;             ?  theme/theme/_rels/themeManager.xml.relsPK      ]  ?    &lt;?xml version=&quot;</span>1.0<span class="hljs-string">&quot; encoding=&quot;</span>UTF-8<span class="hljs-string">&quot; standalone=&quot;</span>yes<span class="hljs-string">&quot;?&gt;</span><br><span class="hljs-string">&lt;a:clrMap xmlns:a=&quot;</span>http://schemas.openxmlformats.org/drawingml/2006/main<span class="hljs-string">&quot; bg1=&quot;</span>lt1<span class="hljs-string">&quot; tx1=&quot;</span>dk1<span class="hljs-string">&quot; bg2=&quot;</span>lt2<span class="hljs-string">&quot; tx2=&quot;</span>dk2<span class="hljs-string">&quot; accent1=&quot;</span>accent1<span class="hljs-string">&quot; accent2=&quot;</span>accent2<span class="hljs-string">&quot; accent3=&quot;</span>accent3<span class="hljs-string">&quot; accent4=&quot;</span>accent4<span class="hljs-string">&quot; accent5=&quot;</span>accent5<span class="hljs-string">&quot; accent6=&quot;</span>accent6<span class="hljs-string">&quot; hlink=&quot;</span>hlink<span class="hljs-string">&quot; folHlink=&quot;</span>folHlink<span class="hljs-string">&quot;/&gt;    U2    @                                                  U:        U:       餈     ?                          @ ?        €€€ ?    饞     ?         ?    ?    ?                    </span><br><span class="hljs-string">?          養    </span><br><span class="hljs-string">?        S ?   ?   ?          ?    ?       餒    ?          ?    ?    ?                    </span><br><span class="hljs-string">?             ?   G2  G2  I2  I2  J2  J2  L2  M2  O2  P2  R2  S2  V2                         ?          両F o ?? o`? 漼? 韖?     G2  I2         @€ F2  F2   (?  F2      F2             U2  `   @      U n k n o w n                                   G?  * 郃x ?             T i m e s   N e w   R o m a n   5?                   €    S y m b o l   3.?  * 郈x ?             A r i a l   7.?   ?? @       ?      C a l i b r i   ;??      ?             媅SO  S i m S u n   A?   ?$ B        ?      C a m b r i a   M a t h      1?  ?  h    向,G牝,G        ?  ?       怺   ?  ?      <span class="hljs-subst">[       q       ?  ! % ) , . : ; &gt; ? ]</span> &#125; ? ? ? ? ??    &amp; 0 2 3 : !6&quot;</span>00000<br>0000006??兀﨑?=@]^?                                                                            $ ( <span class="hljs-comment">[ &#123; ? ? ?   0</span><br><span class="hljs-comment">0000000Y?;<span class="hljs-comment">[??                                                ?? ? 個     d      .2  .2                                                                        2?                              HX    ?$P  ?  両F    2                     !                             x   x           ?                 </span></span><br><span class="hljs-comment"><span class="hljs-comment"> A d m i n i s t r a t o r </span></span><br><span class="hljs-comment"><span class="hljs-comment"> A d m i n i s t r a t o r                                                                                                                                                                                                                                                                                                                                                           ?                      鄥燆鵒h珣 +&#x27;迟0   h        ?      ?      ?      ?      ?      ?      ?      ?        </span></span><br><span class="hljs-comment"><span class="hljs-comment">   $     0  </span></span><br><span class="hljs-comment"><span class="hljs-comment">   &lt;     H     P     X     `     ?                            Administrator                   Normal.dotm       Administrator         5         Microsoft Office Word   @    闢?    @    Rに??@    ?戔胀諟.摋 +,0   ?   </span></span><br><span class="hljs-comment"><span class="hljs-comment">      X      `      l      t      |      ?      ?      ?      ?      ?      ?               <span class="hljs-commentspan></span></span><br><span class="hljs-comment"><span class="hljs-comment"><span class="hljs-comment">         </span></span></span><br><span class="hljs-comment"><span class="hljs-comment"><span class="hljs-comment">                                                             ?&quot;   #   $   %   &amp;   &#x27;   (   ?*   +   ,   -   .   /   0   1   2   3   4   5   6   ?8   9   :   ;   &lt;   =   &gt;   ?@   A   B   C   D   E   F   ??I   ???R o o t   E n t r y                                                      ?      F            P氣#?K   €       D a t a                                                         </span></span></span><br><span class="hljs-comment"><span class="hljs-comment"><span class="hljs-comment">                                     !          1 T a b l e                                                                                                )   ?      W o r d D o c u m e n t                                                                                        8@       S u m m a r y I n f o r m a t i o n                           (                                     7           D o c u m e n t S u m m a r y I n f o r m a t i o n           8                                        ?           C o m p O b j                                                                                           e                                                                                                                              ? ?</span></span></span><br><span class="hljs-comment"><span class="hljs-comment"><span class="hljs-comment">       ?      F#   Microsoft Office Word 97-2003 文档 </span></span></span><br><span class="hljs-comment"><span class="hljs-comment"><span class="hljs-comment">   MSWordDoc     ?瞦                                                                                                                                                                                                                                                                                                                                                                                                                                       </span></span></span><br></code></pre></td></tr></table></figure><p>发现文件中间有一堆奇奇怪怪的编码：</p><figure class="highlight scheme"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs scheme">[][(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+([<span class="hljs-name">!</span>[]]+[][[]])[<span class="hljs-name">+!+</span>[]+[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]]+(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">+!+</span>[]]][([][(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+([<span class="hljs-name">!</span>[]]+[][[]])[<span class="hljs-name">+!+</span>[]+[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]]+(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">+!+</span>[]]]+[])[<span class="hljs-name">!+</span>[]+!+[]+!+[]]+(<span class="hljs-name">!!</span>[]+[][(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+([<span class="hljs-name">!</span>[]]+[][[]])[<span class="hljs-name">+!+</span>[]+[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]]+(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">+!+</span>[]]])[<span class="hljs-name">+!+</span>[]+[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]]+([][[]]+[])[<span class="hljs-name">+!+</span>[]]+(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">+!+</span>[]]+([][[]]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+([][(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+([<span class="hljs-name">!</span>[]]+[][[]])[<span class="hljs-name">+!+</span>[]+[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]]+(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">+!+</span>[]]]+[])[<span class="hljs-name">!+</span>[]+!+[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+(<span class="hljs-name">!!</span>[]+[][(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+([<span class="hljs-name">!</span>[]]+[][[]])[<span class="hljs-name">+!+</span>[]+[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]]+(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">+!+</span>[]]])[<span class="hljs-name">+!+</span>[]+[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">+!+</span>[]]]((<span class="hljs-name">!</span>[]+[])[<span class="hljs-name">+!+</span>[]]+(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">+!+</span>[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+(<span class="hljs-name">!</span>[]+[][(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+([<span class="hljs-name">!</span>[]]+[][[]])[<span class="hljs-name">+!+</span>[]+[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]]+(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">+!+</span>[]]])[<span class="hljs-name">!+</span>[]+!+[]+[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]]+([]+[])[(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+(<span class="hljs-name">!!</span>[]+[][(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+([<span class="hljs-name">!</span>[]]+[][[]])[<span class="hljs-name">+!+</span>[]+[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]]+(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">+!+</span>[]]])[<span class="hljs-name">+!+</span>[]+[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]]+([][[]]+[])[<span class="hljs-name">+!+</span>[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+([][(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+([<span class="hljs-name">!</span>[]]+[][[]])[<span class="hljs-name">+!+</span>[]+[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]]+(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">+!+</span>[]]]+[])[<span class="hljs-name">!+</span>[]+!+[]+!+[]]+(<span class="hljs-name">!!</span>[]+[][(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+([<span class="hljs-name">!</span>[]]+[][[]])[<span class="hljs-name">+!+</span>[]+[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]]+(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">+!+</span>[]]])[<span class="hljs-name">+!+</span>[]+[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]]+(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]]+(<span class="hljs-name">!!</span>[]+[][(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+([<span class="hljs-name">!</span>[]]+[][[]])[<span class="hljs-name">+!+</span>[]+[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]]+(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">+!+</span>[]]])[<span class="hljs-name">+!+</span>[]+[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">+!+</span>[]]]()[<span class="hljs-name">+!+</span>[]+[<span class="hljs-name">!+</span>[]+!+[]]]+(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]]+(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name">+!+</span>[]]+(<span class="hljs-name">+!</span>[]+[<span class="hljs-name">!</span>[]]+([]+[])[([][(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+([<span class="hljs-name">!</span>[]]+[][[]])[<span class="hljs-name">+!+</span>[]+[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]]+(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">+!+</span>[]]]+[])[<span class="hljs-name">!+</span>[]+!+[]+!+[]]+(<span class="hljs-name">!!</span>[]+[][(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+([<span class="hljs-name">!</span>[]]+[][[]])[<span class="hljs-name">+!+</span>[]+[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]]+(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">+!+</span>[]]])[<span class="hljs-name">+!+</span>[]+[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]]+([][[]]+[])[<span class="hljs-name">+!+</span>[]]+(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">+!+</span>[]]+([][[]]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+([][(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+([<span class="hljs-name">!</span>[]]+[][[]])[<span class="hljs-name">+!+</span>[]+[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]]+(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">+!+</span>[]]]+[])[<span class="hljs-name">!+</span>[]+!+[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+(<span class="hljs-name">!!</span>[]+[][(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+([<span class="hljs-name">!</span>[]]+[][[]])[<span class="hljs-name">+!+</span>[]+[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]]+(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">+!+</span>[]]])[<span class="hljs-name">+!+</span>[]+[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">+!+</span>[]]])[<span class="hljs-name">!+</span>[]+!+[]+[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]]+(<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[<span class="hljs-name">!</span>[]]+[][(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+([<span class="hljs-name">!</span>[]]+[][[]])[<span class="hljs-name">+!+</span>[]+[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]]+(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">+!+</span>[]]])[<span class="hljs-name">!+</span>[]+!+[]+[<span class="hljs-name">+!+</span>[]]]+(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name">+!+</span>[]]+[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+[<span class="hljs-name">!+</span>[]+!+[]+!+[]+!+[]]+[<span class="hljs-name">!+</span>[]+!+[]+!+[]+!+[]]+[<span class="hljs-name">!+</span>[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]+(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+([][[]]+[])[<span class="hljs-name">!+</span>[]+!+[]]+[<span class="hljs-name">!+</span>[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]+[<span class="hljs-name">!+</span>[]+!+[]+!+[]]+[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+(<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>(<span class="hljs-name">+!+</span>[]+[<span class="hljs-name">+!+</span>[]]))[(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+(<span class="hljs-name">!!</span>[]+[][(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+([<span class="hljs-name">!</span>[]]+[][[]])[<span class="hljs-name">+!+</span>[]+[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]]+(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">+!+</span>[]]])[<span class="hljs-name">+!+</span>[]+[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]]+(<span class="hljs-name">+!</span>[]+([]+[])[([][(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+([<span class="hljs-name">!</span>[]]+[][[]])[<span class="hljs-name">+!+</span>[]+[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]]+(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">+!+</span>[]]]+[])[<span class="hljs-name">!+</span>[]+!+[]+!+[]]+(<span class="hljs-name">!!</span>[]+[][(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+([<span class="hljs-name">!</span>[]]+[][[]])[<span class="hljs-name">+!+</span>[]+[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]]+(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">+!+</span>[]]])[<span class="hljs-name">+!+</span>[]+[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]]+([][[]]+[])[<span class="hljs-name">+!+</span>[]]+(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">+!+</span>[]]+([][[]]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+([][(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+([<span class="hljs-name">!</span>[]]+[][[]])[<span class="hljs-name">+!+</span>[]+[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]]+(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">+!+</span>[]]]+[])[<span class="hljs-name">!+</span>[]+!+[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+(<span class="hljs-name">!!</span>[]+[][(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+([<span class="hljs-name">!</span>[]]+[][[]])[<span class="hljs-name">+!+</span>[]+[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]]+(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">+!+</span>[]]])[<span class="hljs-name">+!+</span>[]+[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">+!+</span>[]]])[<span class="hljs-name">+!+</span>[]+[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">+!+</span>[]]+([<span class="hljs-name">!</span>[]]+[][[]])[<span class="hljs-name">+!+</span>[]+[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]]+([][[]]+[])[<span class="hljs-name">+!+</span>[]]+(<span class="hljs-name">+!</span>[]+[<span class="hljs-name">!</span>[]]+([]+[])[([][(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+([<span class="hljs-name">!</span>[]]+[][[]])[<span class="hljs-name">+!+</span>[]+[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]]+(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">+!+</span>[]]]+[])[<span class="hljs-name">!+</span>[]+!+[]+!+[]]+(<span class="hljs-name">!!</span>[]+[][(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+([<span class="hljs-name">!</span>[]]+[][[]])[<span class="hljs-name">+!+</span>[]+[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]]+(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">+!+</span>[]]])[<span class="hljs-name">+!+</span>[]+[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]]+([][[]]+[])[<span class="hljs-name">+!+</span>[]]+(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">+!+</span>[]]+([][[]]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+([][(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+([<span class="hljs-name">!</span>[]]+[][[]])[<span class="hljs-name">+!+</span>[]+[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]]+(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">+!+</span>[]]]+[])[<span class="hljs-name">!+</span>[]+!+[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+(<span class="hljs-name">!!</span>[]+[][(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+([<span class="hljs-name">!</span>[]]+[][[]])[<span class="hljs-name">+!+</span>[]+[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]]+(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">+!+</span>[]]])[<span class="hljs-name">+!+</span>[]+[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">+!+</span>[]]])[<span class="hljs-name">!+</span>[]+!+[]+[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]]](<span class="hljs-name">!+</span>[]+!+[]+[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]])+[<span class="hljs-name">!+</span>[]+!+[]+!+[]+!+[]+!+[]+!+[]]+[<span class="hljs-name">!+</span>[]+!+[]]+([][(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+([<span class="hljs-name">!</span>[]]+[][[]])[<span class="hljs-name">+!+</span>[]+[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]]+(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">+!+</span>[]]]+[])[<span class="hljs-name">!+</span>[]+!+[]+!+[]]+[<span class="hljs-name">+!+</span>[]]+[<span class="hljs-name">!+</span>[]+!+[]+!+[]]+([][(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+([<span class="hljs-name">!</span>[]]+[][[]])[<span class="hljs-name">+!+</span>[]+[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]]+(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">+!+</span>[]]]+[])[<span class="hljs-name">!+</span>[]+!+[]+!+[]]+(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name">+!+</span>[]]+[<span class="hljs-name">!+</span>[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]+[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+[<span class="hljs-name">!+</span>[]+!+[]]+[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+([][(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+([<span class="hljs-name">!</span>[]]+[][[]])[<span class="hljs-name">+!+</span>[]+[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]]+(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">+!+</span>[]]]+[])[<span class="hljs-name">!+</span>[]+!+[]+!+[]]+[<span class="hljs-name">!+</span>[]+!+[]+!+[]+!+[]]+[<span class="hljs-name">!+</span>[]+!+[]+!+[]+!+[]+!+[]]+[<span class="hljs-name">!+</span>[]+!+[]]+[<span class="hljs-name">!+</span>[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]+([][[]]+[])[<span class="hljs-name">!+</span>[]+!+[]]+(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name">+!+</span>[]]+(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name">+!+</span>[]]+[<span class="hljs-name">!+</span>[]+!+[]]+[][(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+([<span class="hljs-name">!</span>[]]+[][[]])[<span class="hljs-name">+!+</span>[]+[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]]+(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">+!+</span>[]]][([][(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+([<span class="hljs-name">!</span>[]]+[][[]])[<span class="hljs-name">+!+</span>[]+[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]]+(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">+!+</span>[]]]+[])[<span class="hljs-name">!+</span>[]+!+[]+!+[]]+(<span class="hljs-name">!!</span>[]+[][(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+([<span class="hljs-name">!</span>[]]+[][[]])[<span class="hljs-name">+!+</span>[]+[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]]+(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">+!+</span>[]]])[<span class="hljs-name">+!+</span>[]+[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]]+([][[]]+[])[<span class="hljs-name">+!+</span>[]]+(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">+!+</span>[]]+([][[]]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+([][(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+([<span class="hljs-name">!</span>[]]+[][[]])[<span class="hljs-name">+!+</span>[]+[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]]+(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">+!+</span>[]]]+[])[<span class="hljs-name">!+</span>[]+!+[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+(<span class="hljs-name">!!</span>[]+[][(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+([<span class="hljs-name">!</span>[]]+[][[]])[<span class="hljs-name">+!+</span>[]+[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]]+(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">+!+</span>[]]])[<span class="hljs-name">+!+</span>[]+[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">+!+</span>[]]]((<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">+!+</span>[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+([][[]]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">+!+</span>[]]+([][[]]+[])[<span class="hljs-name">+!+</span>[]]+(<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[<span class="hljs-name">!</span>[]]+[][(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+([<span class="hljs-name">!</span>[]]+[][[]])[<span class="hljs-name">+!+</span>[]+[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]]+(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">+!+</span>[]]])[<span class="hljs-name">+!+</span>[]+[<span class="hljs-name">+!+</span>[]]]+([][[]]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+([][[]]+[])[<span class="hljs-name">+!+</span>[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]+!+[]]+(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]+!+[]]+([][(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+([<span class="hljs-name">!</span>[]]+[][[]])[<span class="hljs-name">+!+</span>[]+[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]]+(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">+!+</span>[]]]+[])[<span class="hljs-name">!+</span>[]+!+[]+!+[]]+(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name">+!+</span>[]]+(<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>(<span class="hljs-name">!+</span>[]+!+[]+[<span class="hljs-name">+!+</span>[]]+[<span class="hljs-name">+!+</span>[]]))[(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+(<span class="hljs-name">!!</span>[]+[][(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+([<span class="hljs-name">!</span>[]]+[][[]])[<span class="hljs-name">+!+</span>[]+[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]]+(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">+!+</span>[]]])[<span class="hljs-name">+!+</span>[]+[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]]+(<span class="hljs-name">+!</span>[]+([]+[])[([][(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+([<span class="hljs-name">!</span>[]]+[][[]])[<span class="hljs-name">+!+</span>[]+[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]]+(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">+!+</span>[]]]+[])[<span class="hljs-name">!+</span>[]+!+[]+!+[]]+(<span class="hljs-name">!!</span>[]+[][(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+([<span class="hljs-name">!</span>[]]+[][[]])[<span class="hljs-name">+!+</span>[]+[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]]+(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">+!+</span>[]]])[<span class="hljs-name">+!+</span>[]+[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]]+([][[]]+[])[<span class="hljs-name">+!+</span>[]]+(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">+!+</span>[]]+([][[]]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+([][(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+([<span class="hljs-name">!</span>[]]+[][[]])[<span class="hljs-name">+!+</span>[]+[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]]+(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">+!+</span>[]]]+[])[<span class="hljs-name">!+</span>[]+!+[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+(<span class="hljs-name">!!</span>[]+[][(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+([<span class="hljs-name">!</span>[]]+[][[]])[<span class="hljs-name">+!+</span>[]+[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]]+(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">+!+</span>[]]])[<span class="hljs-name">+!+</span>[]+[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">+!+</span>[]]])[<span class="hljs-name">+!+</span>[]+[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">+!+</span>[]]+([<span class="hljs-name">!</span>[]]+[][[]])[<span class="hljs-name">+!+</span>[]+[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]]+([][[]]+[])[<span class="hljs-name">+!+</span>[]]+(<span class="hljs-name">+!</span>[]+[<span class="hljs-name">!</span>[]]+([]+[])[([][(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+([<span class="hljs-name">!</span>[]]+[][[]])[<span class="hljs-name">+!+</span>[]+[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]]+(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">+!+</span>[]]]+[])[<span class="hljs-name">!+</span>[]+!+[]+!+[]]+(<span class="hljs-name">!!</span>[]+[][(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+([<span class="hljs-name">!</span>[]]+[][[]])[<span class="hljs-name">+!+</span>[]+[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]]+(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">+!+</span>[]]])[<span class="hljs-name">+!+</span>[]+[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]]+([][[]]+[])[<span class="hljs-name">+!+</span>[]]+(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">+!+</span>[]]+([][[]]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+([][(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+([<span class="hljs-name">!</span>[]]+[][[]])[<span class="hljs-name">+!+</span>[]+[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]]+(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">+!+</span>[]]]+[])[<span class="hljs-name">!+</span>[]+!+[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+(<span class="hljs-name">!!</span>[]+[][(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+([<span class="hljs-name">!</span>[]]+[][[]])[<span class="hljs-name">+!+</span>[]+[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]]+(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">+!+</span>[]]])[<span class="hljs-name">+!+</span>[]+[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">+!+</span>[]]])[<span class="hljs-name">!+</span>[]+!+[]+[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]]](<span class="hljs-name">!+</span>[]+!+[]+!+[]+[<span class="hljs-name">+!+</span>[]])[<span class="hljs-name">+!+</span>[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]+!+[]])()([][(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+([<span class="hljs-name">!</span>[]]+[][[]])[<span class="hljs-name">+!+</span>[]+[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]]+(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">+!+</span>[]]][([][(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+([<span class="hljs-name">!</span>[]]+[][[]])[<span class="hljs-name">+!+</span>[]+[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]]+(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">+!+</span>[]]]+[])[<span class="hljs-name">!+</span>[]+!+[]+!+[]]+(<span class="hljs-name">!!</span>[]+[][(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+([<span class="hljs-name">!</span>[]]+[][[]])[<span class="hljs-name">+!+</span>[]+[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]]+(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">+!+</span>[]]])[<span class="hljs-name">+!+</span>[]+[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]]+([][[]]+[])[<span class="hljs-name">+!+</span>[]]+(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">+!+</span>[]]+([][[]]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+([][(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+([<span class="hljs-name">!</span>[]]+[][[]])[<span class="hljs-name">+!+</span>[]+[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]]+(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">+!+</span>[]]]+[])[<span class="hljs-name">!+</span>[]+!+[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+(<span class="hljs-name">!!</span>[]+[][(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+([<span class="hljs-name">!</span>[]]+[][[]])[<span class="hljs-name">+!+</span>[]+[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]]+(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">+!+</span>[]]])[<span class="hljs-name">+!+</span>[]+[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">+!+</span>[]]]((<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">+!+</span>[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+([][[]]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">+!+</span>[]]+([][[]]+[])[<span class="hljs-name">+!+</span>[]]+(<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[<span class="hljs-name">!</span>[]]+[][(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+([<span class="hljs-name">!</span>[]]+[][[]])[<span class="hljs-name">+!+</span>[]+[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]]+(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">+!+</span>[]]])[<span class="hljs-name">+!+</span>[]+[<span class="hljs-name">+!+</span>[]]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]+!+[]]+(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]+!+[]]+([][(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+([<span class="hljs-name">!</span>[]]+[][[]])[<span class="hljs-name">+!+</span>[]+[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]]+(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">+!+</span>[]]]+[])[<span class="hljs-name">!+</span>[]+!+[]+!+[]]+(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name">+!+</span>[]]+(<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>(<span class="hljs-name">!+</span>[]+!+[]+[<span class="hljs-name">+!+</span>[]]+[<span class="hljs-name">+!+</span>[]]))[(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+(<span class="hljs-name">!!</span>[]+[][(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+([<span class="hljs-name">!</span>[]]+[][[]])[<span class="hljs-name">+!+</span>[]+[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]]+(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">+!+</span>[]]])[<span class="hljs-name">+!+</span>[]+[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]]+(<span class="hljs-name">+!</span>[]+([]+[])[([][(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+([<span class="hljs-name">!</span>[]]+[][[]])[<span class="hljs-name">+!+</span>[]+[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]]+(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">+!+</span>[]]]+[])[<span class="hljs-name">!+</span>[]+!+[]+!+[]]+(<span class="hljs-name">!!</span>[]+[][(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+([<span class="hljs-name">!</span>[]]+[][[]])[<span class="hljs-name">+!+</span>[]+[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]]+(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">+!+</span>[]]])[<span class="hljs-name">+!+</span>[]+[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]]+([][[]]+[])[<span class="hljs-name">+!+</span>[]]+(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">+!+</span>[]]+([][[]]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+([][(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+([<span class="hljs-name">!</span>[]]+[][[]])[<span class="hljs-name">+!+</span>[]+[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]]+(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">+!+</span>[]]]+[])[<span class="hljs-name">!+</span>[]+!+[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+(<span class="hljs-name">!!</span>[]+[][(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+([<span class="hljs-name">!</span>[]]+[][[]])[<span class="hljs-name">+!+</span>[]+[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]]+(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">+!+</span>[]]])[<span class="hljs-name">+!+</span>[]+[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">+!+</span>[]]])[<span class="hljs-name">+!+</span>[]+[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">+!+</span>[]]+([<span class="hljs-name">!</span>[]]+[][[]])[<span class="hljs-name">+!+</span>[]+[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]]+([][[]]+[])[<span class="hljs-name">+!+</span>[]]+(<span class="hljs-name">+!</span>[]+[<span class="hljs-name">!</span>[]]+([]+[])[([][(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+([<span class="hljs-name">!</span>[]]+[][[]])[<span class="hljs-name">+!+</span>[]+[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]]+(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">+!+</span>[]]]+[])[<span class="hljs-name">!+</span>[]+!+[]+!+[]]+(<span class="hljs-name">!!</span>[]+[][(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+([<span class="hljs-name">!</span>[]]+[][[]])[<span class="hljs-name">+!+</span>[]+[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]]+(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">+!+</span>[]]])[<span class="hljs-name">+!+</span>[]+[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]]+([][[]]+[])[<span class="hljs-name">+!+</span>[]]+(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">+!+</span>[]]+([][[]]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+([][(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+([<span class="hljs-name">!</span>[]]+[][[]])[<span class="hljs-name">+!+</span>[]+[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]]+(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">+!+</span>[]]]+[])[<span class="hljs-name">!+</span>[]+!+[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+(<span class="hljs-name">!!</span>[]+[][(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+([<span class="hljs-name">!</span>[]]+[][[]])[<span class="hljs-name">+!+</span>[]+[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]]+(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">+!+</span>[]]])[<span class="hljs-name">+!+</span>[]+[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">+!+</span>[]]])[<span class="hljs-name">!+</span>[]+!+[]+[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]]](<span class="hljs-name">!+</span>[]+!+[]+!+[]+[<span class="hljs-name">+!+</span>[]])[<span class="hljs-name">+!+</span>[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]+!+[]])()(([]+[])[([<span class="hljs-name">!</span>[]]+[][[]])[<span class="hljs-name">+!+</span>[]+[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name">+!+</span>[]]+(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]]+([<span class="hljs-name">!</span>[]]+[][[]])[<span class="hljs-name">+!+</span>[]+[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]]+([][(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+([<span class="hljs-name">!</span>[]]+[][[]])[<span class="hljs-name">+!+</span>[]+[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]]+(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">+!+</span>[]]]+[])[<span class="hljs-name">!+</span>[]+!+[]+!+[]]+(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]+!+[]]]()[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+[<span class="hljs-name">!+</span>[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]+([][[]]+[])[<span class="hljs-name">!+</span>[]+!+[]])+([]+[])[(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+(<span class="hljs-name">!!</span>[]+[][(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+([<span class="hljs-name">!</span>[]]+[][[]])[<span class="hljs-name">+!+</span>[]+[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]]+(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">+!+</span>[]]])[<span class="hljs-name">+!+</span>[]+[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]]+([][[]]+[])[<span class="hljs-name">+!+</span>[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+([][(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+([<span class="hljs-name">!</span>[]]+[][[]])[<span class="hljs-name">+!+</span>[]+[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]]+(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">+!+</span>[]]]+[])[<span class="hljs-name">!+</span>[]+!+[]+!+[]]+(<span class="hljs-name">!!</span>[]+[][(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+([<span class="hljs-name">!</span>[]]+[][[]])[<span class="hljs-name">+!+</span>[]+[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]]+(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">+!+</span>[]]])[<span class="hljs-name">+!+</span>[]+[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]]+(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]]+(<span class="hljs-name">!!</span>[]+[][(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+([<span class="hljs-name">!</span>[]]+[][[]])[<span class="hljs-name">+!+</span>[]+[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]]+(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">+!+</span>[]]])[<span class="hljs-name">+!+</span>[]+[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">+!+</span>[]]]()[<span class="hljs-name">+!+</span>[]+[<span class="hljs-name">!+</span>[]+!+[]]]+(<span class="hljs-name">!!</span>[]+[][(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+([<span class="hljs-name">!</span>[]]+[][[]])[<span class="hljs-name">+!+</span>[]+[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]]+(<span class="hljs-name">!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">!+</span>[]+!+[]+!+[]]+(<span class="hljs-name">!!</span>[]+[])[<span class="hljs-name">+!+</span>[]]])[<span class="hljs-name">!+</span>[]+!+[]+[<span class="hljs-name"><span class="hljs-builtin-name">+</span></span>[]]])()<br></code></pre></td></tr></table></figure><p>应该可以非常容易地看出这种编码格式是JSFuck编码，可以去J<a href="http://www.jsfuck.com/">SFuck官方网站</a>进行解密：</p><p><a href="post_16.assets/image-11.png"><img src="post_16.assets/image-11-1024x305.png" alt="img"></a></p><p>成功拿到flag，flag：flag{a0448fd730b62c13ca80200c4529daa2}</p><h2 id="0xF-childRSA"><a href="#0xF-childRSA" class="headerlink" title="0xF childRSA"></a>0xF childRSA</h2><p>RSA题目，有趣，直接下载附件，查看附件内容：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> random <span class="hljs-keyword">import</span> choice<br><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> isPrime, sieve_base <span class="hljs-keyword">as</span> primes<br><span class="hljs-keyword">from</span> flag <span class="hljs-keyword">import</span> flag<br><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">getPrime</span>(<span class="hljs-params">bits</span>):</span><br>    <span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:<br>        n = <span class="hljs-number">2</span><br>        <span class="hljs-keyword">while</span> n.bit_length() &lt; bits:<br>            n *= choice(primes)<br>        <span class="hljs-keyword">if</span> isPrime(n + <span class="hljs-number">1</span>):<br>            <span class="hljs-keyword">return</span> n + <span class="hljs-number">1</span><br><br>e = <span class="hljs-number">0x10001</span><br>m = <span class="hljs-built_in">int</span>.from_bytes(flag.encode(), <span class="hljs-string">&#x27;big&#x27;</span>)<br>p, q = [getPrime(<span class="hljs-number">2048</span>) <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">2</span>)]<br>n = p * q<br>c = <span class="hljs-built_in">pow</span>(m, e, n)<br><br><span class="hljs-comment"># n = 32849718197337581823002243717057659218502519004386996660885100592872201948834155543125924395614928962750579667346279456710633774501407292473006312537723894221717638059058796679686953564471994009285384798450493756900459225040360430847240975678450171551048783818642467506711424027848778367427338647282428667393241157151675410661015044633282064056800913282016363415202171926089293431012379261585078566301060173689328363696699811123592090204578098276704877408688525618732848817623879899628629300385790344366046641825507767709276622692835393219811283244303899850483748651722336996164724553364097066493953127153066970594638491950199605713033004684970381605908909693802373826516622872100822213645899846325022476318425889580091613323747640467299866189070780620292627043349618839126919699862580579994887507733838561768581933029077488033326056066378869170169389819542928899483936705521710423905128732013121538495096959944889076705471928490092476616709838980562233255542325528398956185421193665359897664110835645928646616337700617883946369110702443135980068553511927115723157704586595844927607636003501038871748639417378062348085980873502535098755568810971926925447913858894180171498580131088992227637341857123607600275137768132347158657063692388249513</span><br><span class="hljs-comment"># c = 26308018356739853895382240109968894175166731283702927002165268998773708335216338997058314157717147131083296551313334042509806229853341488461087009955203854253313827608275460592785607739091992591431080342664081962030557042784864074533380701014585315663218783130162376176094773010478159362434331787279303302718098735574605469803801873109982473258207444342330633191849040553550708886593340770753064322410889048135425025715982196600650740987076486540674090923181664281515197679745907830107684777248532278645343716263686014941081417914622724906314960249945105011301731247324601620886782967217339340393853616450077105125391982689986178342417223392217085276465471102737594719932347242482670320801063191869471318313514407997326350065187904154229557706351355052446027159972546737213451422978211055778164578782156428466626894026103053360431281644645515155471301826844754338802352846095293421718249819728205538534652212984831283642472071669494851823123552827380737798609829706225744376667082534026874483482483127491533474306552210039386256062116345785870668331513725792053302188276682550672663353937781055621860101624242216671635824311412793495965628876036344731733142759495348248970313655381407241457118743532311394697763283681852908564387282605279108</span><br></code></pre></td></tr></table></figure><p>发现附件文件是一个python程序，可以看到rsa加密算法的具体细节，可以看到一个关键函数：</p><figure class="highlight isbl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs isbl"><span class="hljs-variable">def</span> <span class="hljs-function"><span class="hljs-title">getPrime</span>(<span class="hljs-variable">bits</span>):</span><br><span class="hljs-function">    <span class="hljs-variable"><span class="hljs-keyword">while</span></span> <span class="hljs-variable"><span class="hljs-literal">True</span></span>:</span><br><span class="hljs-function">        <span class="hljs-variable">n</span> = <span class="hljs-number">2</span></span><br><span class="hljs-function">        <span class="hljs-variable"><span class="hljs-keyword">while</span></span> <span class="hljs-variable">n.bit_length</span>() &lt; <span class="hljs-variable">bits</span>:</span><br><span class="hljs-function">            <span class="hljs-variable">n</span> *= <span class="hljs-title">choice</span>(<span class="hljs-variable">primes</span>)</span><br>        <span class="hljs-variable"><span class="hljs-keyword">if</span></span> <span class="hljs-function"><span class="hljs-title">isPrime</span>(<span class="hljs-variable">n</span> + <span class="hljs-number">1</span>):</span><br><span class="hljs-function">            <span class="hljs-variable">return</span> <span class="hljs-variable">n</span> + <span class="hljs-number">1</span></span><br></code></pre></td></tr></table></figure><p>对函数进行审计发现大素数生成的细节并不是很清晰，需要对Crypto.Util.number库的sieve_base模块进行检索，来获取更多的信息。经过查询发现，sieve_base模块是一个前10000个素数的素数表，可以节约素数生成的时间。使用<a href="https://www.wolframalpha.com/">数学工具</a>查询第10000个素数是104729，但是知道这个好像也没什么用的样子。仅仅知道p和q是生成算法是由小于104729的数随机生成的。这里需要引入一个smooth number的概念：3</p><p>光滑数（smooth number），或译脆数，是一个可以约数分解为小素数乘积的正整数。光滑数一词是是伦纳德·阿德曼所提出。光滑数在以约数分解为基础的密码学中扮演重要角色。2</p><p>现在有了两个材料，没有工具，要想解决这道题目，还需要有个工具来处理，费马小定理。这道题目主要是在考察大数分解的方法——Pollard’s p-1 method，这个大数分解方法非常巧妙，其数学证明也非常优美。回到题目来，现在我们有这些信息，该如何处理这道题目呢？这里先利用已有的信息进行简单的数学演绎：</p><p>首先来康康费马小定理：</p><p>[ a^{p-1} equiv 1 quad (text{mod} p) ]</p><p>也就是说，指数那边每增加( p-1 ) ，其结果仍然不变。指数以( p-1 ) 为一个循环。</p><p>我们将其变形一下：</p><p>[ a^{p-1} – 1 equiv 0 quad (text{mod} p) ]</p><p>模p同余0，也就是说( a^{p-1} – 1 ) 是 ( p ) 的倍数。将同余式改写为等式：</p><p>[ a^{t times (p-1)} – 1 = ktimes p ]</p><blockquote><p>其中 $t, k$ 是两个整数。</p></blockquote><p>如果指数( exp )是 ( p-1 ) 的倍数，那么( a^{exp} – 1 )就会是 ( p ) 的倍数。</p><blockquote><p>上面的( p )均指某一个质数，而非( N=pq )中的( p )</p></blockquote><p>这里很关键。</p><p>如果我们能够找到一个指数( L )，使得对于某一个底数( a )，( a^{L} – 1 ) 是( p )的倍数，但不是( q )的倍数。</p><p>这时，我们只要去计算<br>[ gcd(a^{L}-1, N) ]<br>得到的结果，必定是( p )。也就是说，我们成功地分解了( N )。</p><p>那么该怎么去寻找这个( L )呢，这个时候就需要用到光滑数的概念了，需要使用一下光滑数这个不错的材料来进行求解：</p><p>对于每一个$n = 2, 3, 4, …$，我们任意选择一个底数$a$（事实上，我们可以简单地选择为2），并计算<br>[ gcd(a^{n!-1}, N) ]<br>如果结果落在1和( N  ）中间，便可成功进行求解。</p><p>现在根据上述算法原理编写python脚本进行求解：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> sieve_base <span class="hljs-keyword">as</span> primes<br><span class="hljs-keyword">import</span> gmpy2<br>n = <span class="hljs-number">32849718197337581823002243717057659218502519004386996660885100592872201948834155543125924395614928962750579667346279456710633774501407292473006312537723894221717638059058796679686953564471994009285384798450493756900459225040360430847240975678450171551048783818642467506711424027848778367427338647282428667393241157151675410661015044633282064056800913282016363415202171926089293431012379261585078566301060173689328363696699811123592090204578098276704877408688525618732848817623879899628629300385790344366046641825507767709276622692835393219811283244303899850483748651722336996164724553364097066493953127153066970594638491950199605713033004684970381605908909693802373826516622872100822213645899846325022476318425889580091613323747640467299866189070780620292627043349618839126919699862580579994887507733838561768581933029077488033326056066378869170169389819542928899483936705521710423905128732013121538495096959944889076705471928490092476616709838980562233255542325528398956185421193665359897664110835645928646616337700617883946369110702443135980068553511927115723157704586595844927607636003501038871748639417378062348085980873502535098755568810971926925447913858894180171498580131088992227637341857123607600275137768132347158657063692388249513</span><br>c = <span class="hljs-number">26308018356739853895382240109968894175166731283702927002165268998773708335216338997058314157717147131083296551313334042509806229853341488461087009955203854253313827608275460592785607739091992591431080342664081962030557042784864074533380701014585315663218783130162376176094773010478159362434331787279303302718098735574605469803801873109982473258207444342330633191849040553550708886593340770753064322410889048135425025715982196600650740987076486540674090923181664281515197679745907830107684777248532278645343716263686014941081417914622724906314960249945105011301731247324601620886782967217339340393853616450077105125391982689986178342417223392217085276465471102737594719932347242482670320801063191869471318313514407997326350065187904154229557706351355052446027159972546737213451422978211055778164578782156428466626894026103053360431281644645515155471301826844754338802352846095293421718249819728205538534652212984831283642472071669494851823123552827380737798609829706225744376667082534026874483482483127491533474306552210039386256062116345785870668331513725792053302188276682550672663353937781055621860101624242216671635824311412793495965628876036344731733142759495348248970313655381407241457118743532311394697763283681852908564387282605279108</span><br>t=<span class="hljs-built_in">pow</span>(<span class="hljs-number">2</span>,<span class="hljs-number">2048</span>)<br>e = <span class="hljs-number">0x10001</span><br>k=<span class="hljs-number">2</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">10000</span>):<br>k=<span class="hljs-built_in">pow</span>(k,primes[i],n)<br><span class="hljs-keyword">if</span>(k&gt;t):<br><span class="hljs-keyword">if</span>(i%<span class="hljs-number">15</span>==<span class="hljs-number">0</span>):<br><span class="hljs-keyword">if</span>(gmpy2.gcd(k-<span class="hljs-number">1</span>,n)!=<span class="hljs-number">1</span>):<br><span class="hljs-built_in">print</span>(gmpy2.gcd(k-<span class="hljs-number">1</span>,n))<br><span class="hljs-keyword">break</span><br>p=gmpy2.gcd(k-<span class="hljs-number">1</span>,n)<br>q=n//p<br>phi=(p-<span class="hljs-number">1</span>)*(q-<span class="hljs-number">1</span>)<br>d=gmpy2.invert(e,phi)<br>m=<span class="hljs-built_in">pow</span>(c,d,n)<br>flag=<span class="hljs-built_in">hex</span>(m)[<span class="hljs-number">2</span>:].decode(<span class="hljs-string">&#x27;hex&#x27;</span>)<br><span class="hljs-built_in">print</span>(flag)<br></code></pre></td></tr></table></figure><p>运行脚本，可能需要等一段时间，大致7s就能跑出来flag：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">NCTF</span>&#123;Th<span class="hljs-number">3</span>r<span class="hljs-number">3</span>_ar<span class="hljs-number">3</span>_<span class="hljs-number">1</span>ns<span class="hljs-number">3</span>cure_RSA_m<span class="hljs-number">0</span>duli_<span class="hljs-number">7</span>hat_at_f<span class="hljs-number">1</span>rst_gl<span class="hljs-number">4</span>nce_appe<span class="hljs-number">4</span>r_t<span class="hljs-number">0</span>_be_s<span class="hljs-number">3</span>cur<span class="hljs-number">3</span>&#125;<br></code></pre></td></tr></table></figure><p>flag:flag{Th3r3_ar3_1ns3cure_RSA_m0duli_7hat_at_f1rst_gl4nce_appe4r_t0_be_s3cur3}</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ol><li><a href="https://wiwiki.kfd.me/wiki/%E6%9B%BC%E5%BD%BB%E6%96%AF%E7%89%B9%E7%BC%96%E7%A0%81">曼彻斯特编码-维基百科</a></li><li><a href="https://wiwiki.kfd.me/wiki/%E5%85%89%E6%BB%91%E6%95%B8?__cf_chl_jschl_tk__=b5c515d187b62ea09af935ef21c9d5b700a69f48-1623022895-0-AfHh5ZYcD_wNPPZIKv6IUoOgpyBBN51u0oQlfiPznjcgH9GInr9dRIRblQTjVkOq0mjCxntNjxFcA3jJrZdPLzcAKEhjc88WIy3pEjIbEpB1_n720JdpuwY5FK-ApJ1HKWqeGFjkQ6d_Yo-dAXNFVdjYctWy6G_xqejts0Ou-UbtdP8cResDH3AZ06MUuLBpK8Rop4k-GJfveFgVcMGAfzrIUzt6bcABShLT8KlLg13VtGKiQ5MKSBEK8tv0mhABWnbYmD6tKZzauO3DLBedUBxpMlZo5VSBr3Wx5fwBdxPnDXCZR57KE5T97LzgXqWKw3G3dhq29wgUvSzetV-_cDsjhNhYKlQ6izmQXjQ0JOWdhUiPsrF-tQ1f5Ctb5KUO8Ddl95G-6AqXuzZ3EWBAD64mE3HtlB2s1jPsEW9PtfjoeRzVCYfZZ78X-W76hYw86bKV23lnBvV2Qzp0NMWUuXx2dsRSy_6lAjnGl8GYLHZ2X8pwoz4f02P-lmw8OGP4Og">光滑数-维基百科</a></li><li><a href="http://yulige.top/?p=752#childRSA213pt_38solvers">NCTF2019-官方writeup</a></li></ol><p>本期wp分享到此为止，有时间再来喝杯茶呀！</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title></title>
    <link href="/2021/06/21/post_15/"/>
    <url>/2021/06/21/post_15/</url>
    
    <content type="html"><![CDATA[<h1 id="Linux操作系统初步：拜访林纳斯的杰作"><a href="#Linux操作系统初步：拜访林纳斯的杰作" class="headerlink" title="Linux操作系统初步：拜访林纳斯的杰作"></a>Linux操作系统初步：拜访林纳斯的杰作</h1><p>现在世界有几个主流的操作系统，在PC端的Windows，MacOS以及Linux系统（Linux操作系统在PC端使用的人员较少，占主流的仍然是Windows和MacOS操作系统），在移动端的Android,iOS和iPadOS操作系统，在服务端的Linux和Windows操作系统（服务器主流的操作系统主要是Linux操作系统，部分服务器会使用Windows Server操作系统）</p><p>在开始本次的拜访之前，可以首先说一下什么是操作系统。操作系统会涉及到计算的组成原理部分知识，这里尽可能简单地说明一下，毕竟操作系统不是本次的主角。</p><h2 id="什么是操作系统？"><a href="#什么是操作系统？" class="headerlink" title="什么是操作系统？"></a>什么是操作系统？</h2><p>操作系统（英语：Operating System，缩写：OS）是一组主管并控制计算机操作、运用和运行硬件、软件资源和提供公共服务来组织用户交互的相互关联的系统软件程序，同时也是计算机系统的内核与基石。操作系统需要处理如管理与配置内存、决定系统资源供需的优先次序、控制输入与输出设备、操作网络与管理文件系统等基本事务。操作系统也提供一个让用户与系统交互的操作界面。1</p><p>简单来说，操作系统就是用户与计算机交互的一个中介，交接人。由于计算机中各种指令非常复杂，需要操作系统来构建用户与计算机之间的连接。方便更好地使用</p><p>操作系统说明：2</p><ol><li>负责管理协调硬件、软件等计算机资源的工作</li><li>为上层的应用程序、用户提供简单易用的服务</li><li>操作系统是系统软件，而不是硬件</li></ol><p>现在，大致了解了操作系统，那Linux操作系统是什么嘞？我们平常经常使用的Windows操作系统和MacOS操作系统，基本上都是图像化的界面。但是Linux操作系统一般都是终端界面，也就是黑框框。最早的操作系统是Unix操作系统，而三大主流操作系统都是基于Unix操作系统开发出来的，Linux操作系统是比较接近Unix操作系统的，而且对Unix操作系统进行了性能方面的优化和改善。Linux操作系统常常用于服务器端，其原因是什么呢？我个人认为有以下几种原因：</p><ol><li>Linux是开源的操作系统（大多数Linux操作系统发行版免费）</li><li>Linux的性能良好，非常稳定</li><li>Linux的运行速度较快</li></ol><p>可能看起来有些懵，没关系，接下来才是Linux真正的主场：</p><h2 id="什么是Linux操作系统？"><a href="#什么是Linux操作系统？" class="headerlink" title="什么是Linux操作系统？"></a>什么是Linux操作系统？</h2><p>Linux是一种自由和开放源码的类UNIX操作系统。该操作系统的内核由林纳斯·托瓦兹在1991年10月5日首次发布，在加上用户空间的应用程序之后，成为Linux操作系统。Linux也是自由软件和开放源代码软件发展中最著名的例子。只要遵循GNU 通用公共许可证（GPL），任何个人和机构都可以自由地使用Linux的所有底层源代码，也可以自由地修改和再发布。大多数Linux系统还包括像提供GUI的X Window之类的程序。除了一部分专家之外，大多数人都是直接使用Linux 发行版，而不是自己选择每一样组件或自行设置。</p><p>林纳斯·托瓦兹是何许人也？</p><p><img src="post_15.assets/image.jpg" alt="img"></p><p>林纳斯·班奈狄克·托瓦兹，1969年12月28日－），生于芬兰赫尔辛基市，拥有美国国籍，Linux内核的最早作者，随后发起了这个开源项目，担任Linux内核的首要架构师与项目协调者，是当今世界最著名的电脑程序员、黑客之一。他还发起了开源项目Git，并为主要的开发者。</p><p>或许Linux操作系统的诞生就是为了好玩罢了，只是林纳斯当时为了好玩而开发出来的操作系统。关于林纳斯的更多事情，可以读一读他的自传《只是为了好玩》，这本书还是蛮有意思的，非常具有趣味性。</p><p>Linux操作系统也一定是一个充满趣味性的操作系统，或许也是因为有趣的Linux操作系统，开源运动的兴起，计算机互联网的世界开始充满很多风趣。</p><p>Linux操作系统发布后，踊跃出各种基于Linux操作系统的操作系统版本，也就是Linux操作系统的发行版，也叫Linux发行版。Linux发行版的出现，对于服务器的迅速进步有着较大的推动作用。由于Linux操作系统具有免费、可靠、安全、稳定、多平台的特点，很多设备都开始使用Linux操作系统。Linux有一个开源的社区，也带动了世界的开源运动，Linux可以更好地使用各种各样优秀开发者开发出的各种优秀软件。</p><p>主流的Linux发行版有Debian、RedHat、CentOS、OpenSUSE、Ubuntu、Arch Linux等</p><h2 id="Linux操作系统"><a href="#Linux操作系统" class="headerlink" title="Linux操作系统"></a>Linux操作系统</h2><p>我们来看看究竟什么是Linux操作系统吧，然后，考虑一下我们该怎么玩这个操作系统q(≧▽≦q)</p><p><a href="post_15.assets/image.png"><img src="post_15.assets/image.png" alt="img"></a>Linux操作系统</p><p>一个黑框框，啥也看不到，唔~好像有一个可以输入的命令行</p><p>进入这个操作系统，首先需要知道自己在哪吧？试试 pwd 命令：</p><p><a href="post_15.assets/image-1.png"><img src="post_15.assets/image-1.png" alt="img"></a></p><p>当前好像是在root目录，毕竟登录的是root用户，也就是在root的家目录</p><p>接下来，瞧瞧root的家目录里面有些什么？用 ls 命令看一看</p><p><a href="post_15.assets/image-2.png"><img src="post_15.assets/image-2.png" alt="img"></a></p><p>相应更细致地了解一下，emmm，可以加个参数，使用ls -l 命令看一下</p><p><a href="post_15.assets/image-3.png"><img src="post_15.assets/image-3.png" alt="img"></a></p><p>可以看到很多详细信息，文件更新的时间，文件名，文件用户以及文件用户的权限都能看到</p><p>尝试了几步，发现Linux操作系统好像就是命令行的游戏，非常简便。命令行其实也是用一种脚本语言进行解释的。Linux通用的脚本语言是shell，而我们进入到Linux操作系统中大多是Bash，zsh或fish。这些都是对shell解释器进行优化的解释器。</p><p>Linux是命令行的游戏，那必然需要对命令行进行学习了，那命令行该怎么进行学习呢？</p><p>Linux下有部分指令可以查看到Linux命令的帮助，也可以使用help参数查看Linux操作系统的帮助。</p><p><a href="post_15.assets/image-4.png"><img src="post_15.assets/image-4.png" alt="img"></a></p><p>这是使用 –help参数得到的帮助手册，也可以使用man手册来查看命令具体的使用方式：</p><p><a href="post_15.assets/image-5.png"><img src="post_15.assets/image-5-1024x632.png" alt="img"></a></p><p>man的命令帮助手册，可以通过man或 –help参数来查看使用方法，来进一步学习Linux操作系统的命令行知识。</p><p>本次的Linux就聊到这里吧~~</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ol><li><a href="https://wiwiki.kfd.me/wiki/%E4%BD%9C%E6%A5%AD%E7%B3%BB%E7%B5%B1">操作系统-维基百科</a></li><li><a href="https://zhuanlan.zhihu.com/p/105945721">什么是操作系统？-知乎</a></li><li><a href="https://wiwiki.kfd.me/wiki/%E6%9E%97%E7%BA%B3%E6%96%AF%C2%B7%E6%89%98%E7%93%A6%E5%85%B9">林纳斯·托瓦兹-维基百科</a></li></ol>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title></title>
    <link href="/2021/06/21/post_14/"/>
    <url>/2021/06/21/post_14/</url>
    
    <content type="html"><![CDATA[<h1 id="小满，茶未满"><a href="#小满，茶未满" class="headerlink" title="小满，茶未满"></a>小满，茶未满</h1><blockquote><p>“仙山灵草湿行云，洗遍香肌粉未匀。</p><p>明月来投玉川子，清风吹破武林春。</p><p>要知玉雪心肠好，不是膏油首面新。</p><p>戏作小诗君莫笑，从来佳茗似佳人。”</p><p>———苏轼 记2021年5月21日 国际茶日</p></blockquote><p>2021年5月22日，上午，参加了福州地区的一场无我茶会。感受中国在国际茶日期间的饮茶氛围和国际茶日带来的文化自信。茶，一片树叶的故事，让我们看看这片树叶随着源源活水焕然新生的故事！</p><blockquote><p>“国际茶日”于2019年11月27日第74届联合国大会宣布设立，时间为<strong>每年5月21日</strong>，以赞美茶叶对经济、社会和文化的价值，是以中国为主的产茶国家首次成功推动设立的农业领域国际性节日。 2020年5月21日，是联合国确定的首个“国际茶日”。 </p><p>🔗<a href="http://www.gjcr.moa.gov.cn/">”国际茶日“专题网站</a></p><p>🔗 <a href="https://www.un.org/zh/observances/tea-day">国际茶日 | 联合国</a></p></blockquote><p>茶会组织的流程是充满诗意色彩的，从开始的净手到最后的茶会交流，高雅的文化融入到和谐的交流中，阳春白雪，下里巴人皆成中华丰富多彩的文化，一杯杯茶，一层层情，向世界展现出中华民族的独有风格与风情。</p><p><a href="post_14.assets/IMG_7555-scaled.jpg"><img src="post_14.assets/IMG_7555-1024x683.jpg" alt="img"></a>茶会宣传照</p><p>”小满，茶未满。“似乎在一字一句着诉说着中国那源远流长的茶文化，中国丰富多样的茶文化气息。缓缓走进茶叶的世界，缓缓斟出一杯杯香茗，看见茶叶在水中荡漾出一层层诗情画意的风情。</p><p>净手——潺潺清泉缓缓滑过指尖，流入掌心，洗去凡世的浮躁与焦灼，深入茶镜……</p><p><a href="post_14.assets/IMG_7661-scaled.jpg"><img src="post_14.assets/IMG_7661-1024x683.jpg" alt="img"></a>净手</p><p>入场，开始茶会。</p><p>泡茶——在茶具之间再现华夏盛世</p><p><img src="post_14.assets/IMG_7675-scaled.jpg" alt="img"></p><p><img src="post_14.assets/IMG_7780-scaled.jpg" alt="img"></p><p>倾听，注水的缓缓潺流，茶叶在热水中涅槃重生，散发中国茶叶的清香，唤醒茶人的茶道精神。唤醒每一位茶人对于茶叶的期许和记忆，在一缕缕茶香中进入若隐若现的茶影中……</p><p>斟茶——东方树叶的甘霖浸入杯中，婉转，飘摇，随香浮动</p><p><a href="post_14.assets/IMG_7687-scaled.jpg"><img src="post_14.assets/IMG_7687-683x1024.jpg" alt="img"></a>斟茶</p><p>细嗅，武夷岩茶花果飘香，闽南乌龙兰郁幽香，绿茶袅袅，带来夏日的清凉……在氤氲弥漫的茶香，看到中国茶人的风范，看到茶叶的丰富世界。</p><p>点茶——再现大宋饮茶之风，大宋斗茶之意</p><p><a href="post_14.assets/IMG_7591-scaled.jpg"><img src="post_14.assets/IMG_7591-683x1024.jpg" alt="img"></a>点茶</p><p>观摩，茶筅在建盏中舞动击打，击拂出层层泡沫，茶师点茶，如诗如画，渐入佳境。呈现出大宋的阳春白雪，下里巴人。点出中华文化茶叶的足迹，茶叶的悠久传说。朗朗上口的点茶故事，在中华大地口口相传。</p><p>品茗——品出悠悠中华风韵，浩浩华夏故事</p><p><a href="post_14.assets/IMG_7714-scaled.jpg"><img src="post_14.assets/IMG_7714-683x1024.jpg" alt="img"></a>品茗</p><p>伴随着茶汤缓缓流入口中，茶汤在舌尖婉转转动，在口腔中散发中华的温婉茶香，香气和味道共同刺激口腔中各个感受神经。啜饮，一杯又一杯，“一碗喉吻润， 二碗破孤闷。三碗搜枯肠， 惟有文字五千卷。”，悠悠流出中华民族，人与自然和谐相处，争做草木人的气质。</p><p>交流，与民同乐，共同感受中华茶文化带来的文化洗礼、精神洗礼！</p><p><img src="post_14.assets/IMG_7745-scaled.jpg" alt="img"></p><p><img src="post_14.assets/IMG_7723-scaled.jpg" alt="img"></p><p><img src="post_14.assets/IMG_7622-scaled.jpg" alt="img"></p><p><img src="post_14.assets/IMG_7625-scaled.jpg" alt="img"></p><p><img src="post_14.assets/IMG_7571-scaled.jpg" alt="img"></p><p>5.21国际茶日，在无我茶会过程中，深深感受到中华茶文化的涵养已经中国茶文化所带来的悠悠清香，深入灵魂的触动。作为一名年轻的中国茶人，在茶会中感受到了中国文化的特点，合作共赢，和谐共饮，深入茶叶的世界，倾听自然的声音……</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title></title>
    <link href="/2021/06/21/post_13/"/>
    <url>/2021/06/21/post_13/</url>
    
    <content type="html"><![CDATA[<h1 id="一花一世界，一码一千秋"><a href="#一花一世界，一码一千秋" class="headerlink" title="一花一世界，一码一千秋"></a>一花一世界，一码一千秋</h1><h2 id="”逆向工程初步“"><a href="#”逆向工程初步“" class="headerlink" title="”逆向工程初步“"></a>”逆向工程初步“</h2><blockquote><p>逆向工程应该是一门优雅的艺术，而不是一些低层次者手中的粗陋工具；</p><p>逆向工程的目的是学习与再利用；</p><p>逆向工程的精神是“自由”。</p><p>《加密与解密》</p></blockquote><h3 id="什么是逆向工程？"><a href="#什么是逆向工程？" class="headerlink" title="什么是逆向工程？"></a>什么是逆向工程？</h3><p>逆向工程（Reverse engineering），又称反向工程，是一种技术过程，即对一项目标产品进行逆向分析及研究，从而演绎并得出该产品的处理流程、组织结构、功能性能规格等设计要素，以制作出功能相近，但又不完全一样的产品。逆向工程源于商业及军事领域中的硬件分析。其主要目的是，在无法轻易获得必要的生产信息下，直接从成品的分析，推导产品的设计原理。1</p><p>通俗来讲，逆向工程就是将机器才能够懂的机器代码（0101二进制代码）翻译成人能够读懂的代码（汇编、smali代码）。 但实际情况往往是，我们只寻找关键的代码去翻译或仅了解其业务逻辑，因为要将所有的机器代码翻译出来，工作量是极其巨大的且繁琐的。2</p><p>逆向技术在实际业务中一般应用于以下几个方面：二进制漏洞挖掘、软件破解、恶意代码分析、竞品分析等。</p><p>逆向工程涉及的知识面非常广，从计算机基础原理到计算机架构，再到各种编程语言的编译原理。逆向工程往往需要对算法进行逆向，对操作系统架构进行逆向，这就要求逆向工程师有不错的算法水平，而且对计算机相关的原理深入理解。</p><p>一个逆向工程大师，也许具有如下特征。</p><ul><li>永远保持好奇心，崇尚自由——既能促使探索，也能抵抗商业利益和欲望的侵袭。有了它，枯燥的代码世界才有了生气。</li><li>勤奋与毅力。在一篇关于逆向的文章中有这样的语句：“让我们搞清楚作为一名逆向工作者需要具备的基本条件，其实那并不是扎实的汇编功底和编程基础——可以完全不懂这些，秘诀就是勤奋加上执着！记住并做到这两点，你一样可以变得优秀。”</li><li>精通至少一门编程语言——不仅仅是代码，更重要的是编程思想。</li><li>扎实的汇编功底和系统编程知识。</li></ul><h3 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h3><ol><li>汇编语言</li><li>C语言</li><li>一门脚本语言(Python)</li><li>Windows核心编程</li><li>PE文件格式</li><li>程序加载流程</li></ol><h3 id="基础工具"><a href="#基础工具" class="headerlink" title="基础工具"></a>基础工具</h3><ol><li>查壳工具（DIE、PEID、EXEINFO、LordPE、ResourceHacker等）</li><li>常用脱壳工具或脱壳脚本（专属壳的脱壳器例如upx等、各种壳的脱壳脚本）</li><li>十六进制编辑器（010Editor、winhex等）</li><li>反汇编工具（IDA、Hopper）</li><li>调试器（Ollydbg、gdb、windbg等）</li></ol><p>这些都是比较常用的逆向工具。其中特别要熟练使用IDA与Ollydbg，IDA一般用来做静态分析，其中的F5功能更是强大到没朋友，新手必备。Ollydbg简称OD一般用来做动态调试使用，两者结合使用堪比倚天剑和屠龙刀，可谓是神挡杀神佛挡杀佛。3</p><h3 id="逆向的分类"><a href="#逆向的分类" class="headerlink" title="逆向的分类"></a>逆向的分类</h3><ul><li>解释型语言的逆向</li><li>编译型语言的逆向</li></ul><h3 id="分析手段"><a href="#分析手段" class="headerlink" title="分析手段"></a>分析手段</h3><ol><li>静态分析</li><li>动态分析</li><li>网络流量分析</li><li>猜</li></ol><h4 id="静态分析"><a href="#静态分析" class="headerlink" title="静态分析"></a>静态分析</h4><p>将机器代码反汇编成方便人类理解的代码，如smali代码（Java）、汇编代码或汇编代码翻译的C语言伪代码等等，通过分析这些比较低级的编程语言的代码，找到程序的业务流程或设计逻辑。</p><h4 id="动态分析"><a href="#动态分析" class="headerlink" title="动态分析"></a>动态分析</h4><p>通过断点调试手段，让程序单步执行进行分析。动态分析往往是在静态分析出一定的结果的基础上进行，找到合适的地方给代码打断点，即时地读取当前变量的值，来进一步分析程序的逻辑、获取程序关系数据。</p><h4 id="网络流量分析"><a href="#网络流量分析" class="headerlink" title="网络流量分析"></a>网络流量分析</h4><p>通过代理方式或者其他方式，截取程序与服务器通信的数据流量（抓包），来分析客户端和服务端的通信协议。网络流量分析比较有局限性，若客户端使用<em>Http</em>这种明文传输的协议，会比较容易分析；但如果客户端使用SSL、<em>Https</em>等加密传输协议与服务端进行通信，那么抓包的前提是需要拿到服务端下发给客户端的证书才能进一步解密分析，这种情况下就比较棘手。网上有方案通过安装插件拿到Chrome或者Firefox浏览器的本地证书，但只适用于客户端是网页的情况。若其他大佬有好的宝贵经验，还望能指点迷津。</p><h4 id="猜"><a href="#猜" class="headerlink" title="猜"></a>猜</h4><p>猜测的前提是，你需要有一定的编程经验，能够在逆向分析出一些代码后，对其上下的代码进行合理的推测，推测不出来的代码再通过以上手段分析。可以这么说，你的推测能力决定了你的逆向分析效率，而编程经验则是你猜测能力的基石。</p><blockquote><p>逆向工程的学习是一条漫长的道路，每一个逆向工程师都是一个优秀的开发者，只不过他们选择去挑战更有深度，更有趣味的事情。加密与解密，解开每一段代码的意味，看到软件背后潜藏的世界，正所谓，一花一世界，一码一千秋嘛。</p></blockquote><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><ol><li><a href="https://wiwiki.kfd.me/wiki/%E9%80%86%E5%90%91%E5%B7%A5%E7%A8%8B">逆向工程-维基百科</a></li><li><a href="https://zhuanlan.zhihu.com/p/148099666">逆向工程入门概述-知乎</a></li><li><a href="https://www.freebuf.com/column/225999.html">CTF逆向选手入坑指南-FreeBuf</a></li></ol><p>闲聊到此为止，来喝杯茶可好？</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title></title>
    <link href="/2021/06/21/post_11/"/>
    <url>/2021/06/21/post_11/</url>
    
    <content type="html"><![CDATA[<h1 id="浅谈椭圆曲线加密算法（ECC）"><a href="#浅谈椭圆曲线加密算法（ECC）" class="headerlink" title="浅谈椭圆曲线加密算法（ECC）"></a>浅谈椭圆曲线加密算法（ECC）</h1><p>椭圆曲线加密算法是近十年提出的一个非对称加密算法，这个加密算法非常复杂，加密的数据具有良好的保密性。加密效果比RSA加密算法都高。这次不可能全部将ECC加密算法讲完，只能简单聊聊ECC加密算法的基本概念和ECC加密算法的数学基础了。</p><p>什么是ECC加密算法？、</p><p>椭圆曲线密码学（英语：Elliptic Curve Cryptography，缩写：ECC）是一种基于椭圆曲线数学的公开密钥加密算法。椭圆曲线在密码学中的使用是在1985年由Neal Koblitz（英语：Neal Koblitz）和Victor Miller（英语：Victor Miller）分别独立提出的。</p><p>ECC的主要优势是它相比RSA加密算法使用较小的密钥长度并提供相当等级的安全性[1]。ECC的另一个优势是可以定义群之间的双线性映射，基于Weil对或是Tate对；双线性映射已经在密码学中发现了大量的应用，例如基于身份的加密。1</p><p>椭圆曲线加密算法，简称ECC，是基于椭圆曲线数学理论实现的一种非对称加密算法。相比RSA，ECC优势是可以使用更短的密钥，来实现与RSA相当或更高的安全，RSA加密算法也是一种非对称加密算法，在公开密钥加密和电子商业中RSA被广泛使用。据研究，160位ECC加密安全性相当于1024位RSA加密，210位ECC加密安全性相当于2048位RSA加密（有待考证）。2</p><p>ECC加密算法需要的数学理论基础相对来说是比较高的层次方面，远比RSA的数学难度高。看来，数学上层理论的基础是对密码学产生了比较大的影响。下面，来简单聊聊数学基础吧。</p><h3 id="数学基础"><a href="#数学基础" class="headerlink" title="数学基础"></a>数学基础</h3><h4 id="阿贝尔群"><a href="#阿贝尔群" class="headerlink" title="阿贝尔群"></a>阿贝尔群</h4><blockquote><p>刚看到这个的时候，我的第一反应是：这是什么东西？（一脸懵逼）</p></blockquote><p>阿贝尔群其实就是针对椭圆曲线的概念抽象的一个群，简单来说就是针对椭圆曲线的加减乘除规则。概念的变换，就像刚开始学习微积分的加减乘除规则转换到矩阵的加减乘除规律一样。群其实就是一种推广的矩阵。那么，阿贝尔群定义了些什么有趣的东西呢？</p><ul><li>封闭性：如果( a )和( b ) 都是阿贝尔群的成员，那么 ( a + b ) 也是阿贝尔群的成员</li><li>结合律：( (a+b)+c=a+(b+c) ) </li><li>单位元：如果( a+0=0+a=a )，则 ( 0 )就是单位元</li><li>逆元：对于任意值( a )必定存在( b )，使得( a+b=0 )</li><li>交换律：( a + b = b + a )</li></ul><p>根据这个定义整数集是个阿贝尔群。</p><h4 id="椭圆曲线的数学性质"><a href="#椭圆曲线的数学性质" class="headerlink" title="椭圆曲线的数学性质"></a>椭圆曲线的数学性质</h4><h5 id="加法"><a href="#加法" class="headerlink" title="加法"></a>加法</h5><p>过曲线上的两点( A )、( B )画一条直线，找到直线与椭圆曲线的交点，交点关于( x )轴对称位置的点，定义为( A+B )，即为加法。</p><h5 id="二倍运算"><a href="#二倍运算" class="headerlink" title="二倍运算"></a>二倍运算</h5><p>上述方法无法解释( A + A )，即两点重合的情况，因此在这种情况下，将椭圆曲线在( A )点的切线，与椭圆曲线的交点，交点关于( x )轴对称位置的点，定义为( A + A )，即( 2A )，即为二倍运算。</p><h4 id="同余运算"><a href="#同余运算" class="headerlink" title="同余运算"></a>同余运算</h4><p>同余就是有相同的余数，两个整数 a、 b，若它们除以正整数 m所得的余数相等，则称( a )，(  b )对于模m同余。</p><p>[ a\equiv b(mod;m) ]</p><h4 id="乘法逆元"><a href="#乘法逆元" class="headerlink" title="乘法逆元"></a>乘法逆元</h4><p>这是比较简单的一个概念，在RSA加密算法里面也进行了阐述，这里就举个例子说明吧：</p><p>在模7乘法中：</p><ul><li>1的逆元为1 ( (1 \times 1) \mod ; 7=1 )</li><li>2的逆元为4 ( (2 \times 4) \mod ; 7=1 )</li><li>3的逆元为5 ( (3 \times 5) \mod ; 7=1 )</li><li>4的逆元为2 ( (4 \times 2) \mod ; 7=1 )</li><li>5的逆元为3 ( (5 \times 3) \mod ; 7=1 )</li><li>6的逆元为6 ( (6 \times 6) \mod ; 7=1 )</li></ul><p>这些大致就是ECC所需要的大致的数学理论，可能也只是很少的一部分数学理论，毕竟ECC加密算法的安全性是非常高的，因此可以考虑在ECC算法的基础进行改进和拓展出更多的ECC变体的加密算法，ECC的数学理论主要是建立在抽象代数相关理论中，可以补抽象代数的相关内容来进行ECC加密算法的深入了解。</p><h3 id="参考："><a href="#参考：" class="headerlink" title="参考："></a>参考：</h3><ol><li><a href="https://wiwiki.kfd.me/wiki/%E6%A4%AD%E5%9C%86%E6%9B%B2%E7%BA%BF%E5%AF%86%E7%A0%81%E5%AD%A6">椭圆曲线密码学-维基百科</a></li><li><a href="https://zhuanlan.zhihu.com/p/101907402">椭圆曲线加密算法(ECC)-知乎</a></li></ol><p>闲聊到此为止，来喝杯茶可好？</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title></title>
    <link href="/2021/06/21/post_10/"/>
    <url>/2021/06/21/post_10/</url>
    
    <content type="html"><![CDATA[<h1 id="数学之美，程序之巧"><a href="#数学之美，程序之巧" class="headerlink" title="数学之美，程序之巧"></a>数学之美，程序之巧</h1><p>计算机程序，简单来说，就是指令和数据的组合。程序可以通过算法组成相应的逻辑系统，逻辑系统可以根据编写者需求来完成各种各样的事情。</p><p>计算机内部数据处理方式是什么样？</p><p>这个问题可以从机器语言开始说起，如果要说到机器语言自然就要聊一聊编程语言喽：</p><p>编程语言（英语：programming language），是用来定义计算机程序的形式语言。它是一种被标准化的交流技巧，用来向计算机发出指令。一种能够让程序员准确地定义计算机所需要使用数据的计算机语言，并精确地定义在不同情况下所应当采取的行动。1</p><p>机器语言是编程语言最初的一个代表，机器语言的表示方式通常是101010的二进制方式，这也是计算机运行最底层的内容和最底层的模块，在101010的运算模式是非常适合计算机进行计算的。编程就是数据和指令的集合，而计算机就是将101010的二进制数字进行运算，计算机的运算方式通常由逻辑运算和算术运算。但是这和数学有什么关系吗？计算机的运算是数学理论产生的产物，集成电路上闪动的光波，跳动的粒子都是多少数学家理论的产物呀！</p><p>话说回来，机器语言现在几乎都不使用，都在使用高级编程语言。根据现在的情况，编程语言有大致三代。第一代编程语言是机器语言，编写非常复杂。第二代编程语言是汇编语言，编写相对机器语言简单了许多，但是仍然是比较复杂的语言。第三代编程语言是现在非常经常使用的高级编程语言，C语言，C++语言，Java语言等静态语言以及Python，PHP，Ruby，JavaScript等动态语言。发展到第三代编程语言，编程的难度大大降低。</p><p>但是，编程和数学有什么关系呢？</p><p>个人认为，编程本身是美的，数学亦是美的。编程的美是基于数学的逻辑，数学的理论和数学中的各种各样的奇妙变换。编程如果接触到了比较底层的内容，也就到了最核心的部分——数据结构和算法，而数据结构和算法很多的知识都是基于数学的思考。这里用算法里面的时间复杂度和数学中的微积分做一下对比：</p><p>[ O(n \cdot \ln:n)]</p><p>[ f(x) =  n \cdot \ln : n ] </p><p>这两个公式是非常相像的，而时间复杂度的比较其实也是基于微积分中极限的概念进行比较的。</p><p>如果要比较 (O(\ln : n)) 和 (O(n))的时间复杂度，该怎么比较呢？</p><p>这里可以使用微积分中的无穷小比较来进行比较的，同样是采用微积分中的极限的思想来进行比较的：</p><p>[ \lim_{x \to +\infty} \frac{\ln : n}{n} = 0 ]</p><p>这个式子在微积分中是非常常见的概念，通过数学的证明来证明这个结论。根据这个结论就可以非常容易的判断出时间复杂度之间的大小。这是数学在编程算法中的一个应用。通过这个应用可以说明计算机编程和数学之间的微妙关系。</p><p>进行数学问题研究的人员往往是高深的数学家，而进行计算机编程的人员往往是秃头的程序员，程序员很少研究数学问题，但是程序员也了解一部分数学知识。而数学家和程序员之间又有什么关系呢？</p><p>程序员是敲代码，负责对功能的实现，是应用方面的。而数学家是解决数学问题的，使用数学优美的证明和严谨的逻辑来证明数学问题，是理论方面的。看起来是没有什么必然的联系，其实进行连接的中介就是计算机科学家，他们负责对计算机理论的研究和算法的创新求解，他们会整合数学家的最新的研究成功并尝试融入到计算机理论中去。程序员可以从计算机理论中的很多相关内容中，进行代码和设计方面的功能实现，优化服务。</p><p>现在的大时代趋势是万物互联，每个学科都不在是孤立存在的学科，学科之间彼此有着多重的交叉。随着时代的进步，学科交叉应该会越来越明显，而计算机和数学关系是非常密切的，应该会最先进行交叉研究，其实现在已经进行交叉研究了。</p><p>我个人认为程序员应该是有一种对于数学的热爱，看到数学优美的证明会心生惊叹，面对数学问题会竭尽全力去攻克数学问题。其实这其实也是程序员对于程序和代码的一种态度，一种专业素养。程序员往往都会追求完美，希望程序可以不断优化不断进行完善，更少的BUG，更高的性能。这无非不是对于数学赞扬和感叹。</p><p>数学之美，程序之巧，尽展心中，会现颅内。</p><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><ol><li><a href="https://wiwiki.kfd.me/wiki/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80">编程语言-维基百科</a></li></ol><p>闲聊到此为止，来喝杯茶可好？</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title></title>
    <link href="/2021/06/21/post_9/"/>
    <url>/2021/06/21/post_9/</url>
    
    <content type="html"><![CDATA[<h1 id="尽沾手襟，淋满眼眶"><a href="#尽沾手襟，淋满眼眶" class="headerlink" title="尽沾手襟，淋满眼眶"></a>尽沾手襟，淋满眼眶</h1><h2 id="“再论RSA加密算法”"><a href="#“再论RSA加密算法”" class="headerlink" title="“再论RSA加密算法”"></a>“再论RSA加密算法”</h2><blockquote><p>优美的数，自然的码</p><p>侦破数的逻辑</p><p>看透码的奥秘</p></blockquote><p>RSA加密算法的算法结构是非常严谨的，具有良好的保密性和完整性。正确使用RSA加密算法，可以确保信息传输的安全性。但是根据现代密码学的研究和发现，RSA加密算法已经被攻破了。中国的王小云通过密码分析学的方法，破解了RSA加密算法。</p><p>而RSA加密算法在CTF比赛中的地位仍然是不容小视的，在CTF比赛中的密码学部分是经常出没。CTF的密码学题目往往是在考察参赛者对于密码学算法的理解，往往采用的是密码分析学的知识进行密码学破解。密码学经常使用的三个角色是Alice、Bob和Eva，这三个人往往是Alice和Bob在不安全的信道上进行传输信息，而Eva是在窃听不安全信道上面信息的窃听者。而CTF比赛中，参赛者往往就需要扮演Eva的角色，根据题目给到的信息进行密码破译，来获取到Flag。</p><p>说来说去，RSA加密算法，RSA加密算法其实就挺简单的，至少算法逻辑是比较简单的。但是在计算机的实际应用中，往往会有编码和其他各种加密的使用，进行综合性的安全性应用。RSA加密算法虽然是比较简单的算法过程，但是随着现代密码学的不断发展和进步，越来越多针对RSA加密算法的攻击方式，因而CTF也根据密码学研究是文献进行革新，演变出来了各种各样针对RSA攻击方法的破译算法。</p><h3 id="CTF中RSA题目类型"><a href="#CTF中RSA题目类型" class="headerlink" title="CTF中RSA题目类型"></a>CTF中RSA题目类型</h3><p>CTF中常见的RSA题目类型有如下几类：1</p><p><strong>公钥加密文</strong></p><p>这是CTF中最常见最基础的题型，出题人会给你一个公钥文件（通常是以.pem或.pub结尾的文件）和密文（通常叫做flag.enc之类的），你需要分析公钥，提取出（N，e），通过各种攻击手段恢复私钥，然后去解密密文得到flag。</p><p><strong>文本文档</strong></p><p>对于第一种题型，耿直点的出题人直接给你一个txt文本文档，里面直接写出了（N，e，c）所对应的十进制数值，然后你直接拿去用就行了。当然也不都是给出（N，e，c）的值，有时还会给出其他一些参数，这时就需要思考，这题具体考察的什么攻击方法</p><p><strong>pcap文件</strong></p><p>有时出题人会给你一个流量包，你需要用wireshark等工具分析，然后根据流量包的通信信息，分析题目考察的攻击方法，你可以提取出所有你解题需要用到的参数，然后进行解密</p><p><strong>本地脚本分析</strong></p><p>题目会给你一个脚本和一段密文，一般为python编写，你需要逆向文件流程，分析脚本的加密过程，写出对应的解密脚本进行解密</p><p><strong>远程脚本利用</strong></p><p>这种题型一般难度较大。题目会给你一个运行在远程服务器上的python脚本和服务器地址，你需要分析脚本存在的漏洞，确定攻击算法，然后编写脚本与服务器交互，得到flag</p><p>密码学的题目类型也大致就是这些类型了，这些题目类型也展现出了密码学并不是孤立的存在，密码学与网络安全的各个方面都有着较大的联系，并彼此互联。</p><h3 id="数据处理"><a href="#数据处理" class="headerlink" title="数据处理"></a>数据处理</h3><p>CTF比赛中的CRYPTO题目类型往往会给到一些需要进行数据处理的文件格式：</p><p>基本上来说，RSA的题目都是围绕着c，m，e，d，n，p，q这几个参数展开的，但是题目一般不会直接给这种样子的参数，而是通过别的方式给出，这里就需要我们使用一些工具或者自己手工将这些参数提取出来。2</p><p>pem文件<strong>：</strong>针对此类文件可以直接使用openssl提取，大概使用过的方式有：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">openssl   rsautl -encrypt -in FLAG -inkey public.pem -pubin -out flag.enc<br>openssl   rsa -pubin -text -modulus -in warmup -in public.pem<br></code></pre></td></tr></table></figure><p>pcap文件：针对此类文件可以使用wireshark follow一下。这种问题一般都是写了一个交互的crypto系统，所以可能产生多轮交互。</p><p>PPC模式：这种模式是上述pcap文件的交互版，会给一个端口进行一些crypto的交互，参数会在交互中给出。</p><p>第二个需要处理的就是明密文，这个方法多多，不多赘述。</p><h3 id="RSA加密算法的攻击类型"><a href="#RSA加密算法的攻击类型" class="headerlink" title="RSA加密算法的攻击类型"></a>RSA加密算法的攻击类型</h3><p>RSA加密算法题目的攻击类型是各种各样的，常见的攻击方法：</p><h4 id="模数分解"><a href="#模数分解" class="headerlink" title="模数分解"></a>模数分解</h4><p>解决RSA题目最简单，最暴力，最好使的方法就是分解模数n。如果能够将n分解成功，成功得到p，q的取值，那么可求n的欧拉函数的值。</p><p>模数分解往往可以使用多种方式进行分解，素数分解向来就是数学研究领域比较难以攻克的内容。而RSA算法的保密性也是由于素数分解的困难。但是有些简单的RSA题目可以使用素数分解的方法来解决，常用的工具有：foctordb，sagemath</p><h3 id="低加密指数攻击"><a href="#低加密指数攻击" class="headerlink" title="低加密指数攻击"></a>低加密指数攻击</h3><p>在RSA中e也称为加密指数。由于e是可以随意选取的，选取小一点的e可以缩短加密时间，但是选取不当的话，就会造成安全问题。</p><h4 id="e-3时的小明文攻击"><a href="#e-3时的小明文攻击" class="headerlink" title="e=3时的小明文攻击"></a>e=3时的小明文攻击</h4><p>当e=3时，如果明文过小，导致明文的三次方仍然小于n，那么通过直接对密文三次开方，即可得到明文。</p><p>即：</p><p>$ c\equiv; m^e $$$ mod $$ $n $</p><p>如果e=3，且 $ m^e&lt;{n} $，那么：</p><p>$c= m^e,$ $e=3$</p><p>$m=sqrt[3]{c}$</p><p>如果明文的三次方比n大，但是不是足够大，那么设k，有：</p><p>$c= m^e+kn $</p><p>爆破k，如果$ c-kn $能开三次根式，那么可以直接得到明文。</p><h4 id="低加密指数广播攻击"><a href="#低加密指数广播攻击" class="headerlink" title="低加密指数广播攻击"></a>低加密指数广播攻击</h4><p>如果选取的加密指数较低，并且使用了相同的加密指数给一个接受者的群发送相同的信息，那么可以进行广播攻击得到明文。</p><p>即，选取了相同的加密指数e（这里取e=3），对相同的明文m进行了加密并进行了消息的传递，那么有：</p><p>$ c_1\equiv m^e$ $mod $ $ n_1 $</p><p>$ c_2\equiv m^e$ $mod $  $ n_2 $</p><p>$ c_3\equiv m^e$ $mod $ $ n_3 $</p><p>对上述等式运用中国剩余定理，在e=3时，可以得到：</p><p>$ c_x\equiv m^3$ $ mod $ $ n_1n_2n_3 $</p><p>通过对 $ c_x $ 进行三次开方可以求得明文。</p><h3 id="低解密指数攻击"><a href="#低解密指数攻击" class="headerlink" title="低解密指数攻击"></a>低解密指数攻击</h3><p>与低加密指数相同，低解密指数可以加快解密的过程，但是者也带来了安全问题。Wiener表示如果满足：</p><p>$ d&lt;\frac{1}{3}g n^\frac{1}{4} $</p><p>那么一种基于连分数(一个数论当中的问题)的特殊攻击类型就可以危害RSA的安全。此时需要满足：</p><p>$ q&lt;$ $ p $ $&lt;2q $</p><p>如果满足上述条件，通过Wiener Attack可以在多项式时间中分解n。</p><p>rsa-wiener-attack的攻击源码开源在了github中，采取python编写，可以很容易使用。</p><h3 id="共模攻击"><a href="#共模攻击" class="headerlink" title="共模攻击"></a>共模攻击</h3><p>如果在RSA的使用中使用了相同的模n对相同的明文m进行了加密，那么就可以在不分解n的情况下还原出明文m的值。</p><p>即：</p><p>$ c_1\equiv m^{e_1} $ $mod$ $n$</p><p>$ c_2\equiv m^{e_2} $ $mod$ $n$</p><p>此时不需要分解n，不需要求解私钥，如果两个加密指数互素，就可以通过共模攻击在两个密文和公钥被嗅探到的情况下还原出明文m的值。</p><p>过程如下，首先两个加密指数互质，则：</p><p>$ (e_1,e_2)=1 $</p><p>即存在$ s_2 $，$ s_2 $使得：</p><p>$ s_1e_1+s_2e_2=1 $</p><p>又因为：</p><p>$ c_1 \equiv m^{e_1}$ $mod$ $n$</p><p>$ c_2\equiv m^{e_2} $ $mod$ $n$</p><p>通过代入化简可以得出：</p><p>$c_1^{s_1}c_2^{s_2}\equiv; m $ $mod$ $n$</p><p>明文解出。</p><p>RSA的攻击方法肯定不止这五种，随着时代的发展和科技的进步，RSA加密算法被各种各样的破译算法进行攻破。而掌握这几种攻击算法，可以解决RSA题目中的大部分中等题目类型。比较难的题目，也就只能去多看看paper了。</p><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><ol><li><a href="https://www.freebuf.com/articles/others-articles/161475.html">CTF中RSA题型解题思路及技巧，附小白福利-FREEBUF</a></li><li><a href="https://www.anquanke.com/post/id/84632">【技术分享】CTF中RSA的常见攻击方法-安全客</a></li></ol><p>闲聊到此为止，来喝杯茶可好？</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title></title>
    <link href="/2021/06/21/post_8/"/>
    <url>/2021/06/21/post_8/</url>
    
    <content type="html"><![CDATA[<h1 id="永恒晴空，浸满蓝虹"><a href="#永恒晴空，浸满蓝虹" class="headerlink" title="永恒晴空，浸满蓝虹"></a>永恒晴空，浸满蓝虹</h1><h2 id="“永恒之蓝漏洞复现”"><a href="#“永恒之蓝漏洞复现”" class="headerlink" title="“永恒之蓝漏洞复现”"></a>“永恒之蓝漏洞复现”</h2><p>永恒之蓝是曾经肆虐2017年互联网世界的高危病毒，严重影响了互联网企业和产业的发展，造成了巨大的经济损失和巨大的危害性。</p><p>什么是永恒之蓝病毒呢？</p><p>永恒之蓝（英语：EternalBlue）是美国国家安全局开发的漏洞利用程序，于2017年4月14日被黑客组织影子掮客泄漏。该工具利用445/TCP端口的文件分享协议的漏洞进行散播。</p><p>尽管微软于2017年3月14日已经发布过Microsoft Windows补丁修补了这个漏洞，然而在5月12日WannaCry勒索软件利用这个漏洞传播时，很多用户仍然因为没有安装补丁而受害。</p><p>由于WannaCry的严重性，微软于2017年5月13日为已超过支持周期的Microsoft Windows XP、Microsoft Windows 8和Windows Server 2003发布了紧急安全更新，以阻止其散布造成更大的危害。</p><p>2017年6月27日，有勒索软件冒充是Petya利用永恒之蓝漏洞在欧洲地区大肆传播，该勒索软件被命名为NotPetya。其带有较强的政治目的进行攻击即进行破坏而不是索要赎金，即便受害者支付赎金也不会得到任何密钥，因为NotPetya根本就没有编写密钥上传模块到控制者的服务器。此后真正的Petya作者公布解密密钥并声明与欧洲地区的攻击无关，但解密密钥仅可解密Petya而不支持NotPetya加密的文件。1</p><p>永恒之蓝漏洞是window7系统上存在的445端口漏洞，通过该漏洞的利用可以轻易入侵到存在该漏洞的windows7操作系统中进行权限获取，并远程控制windows7主机，进行各种各样的恶意操作。</p><p>下面简单演示一下：</p><h3 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h3><p>启动VMware虚拟机，启动Kali系统和Windows7系统</p><p><img src="post_8.assets/image-108.png" alt="img"></p><p><img src="post_8.assets/image-109.png" alt="img"></p><ul><li>使用ms17-010永恒之蓝漏洞对win7进行渗透</li></ul><p>启动msf5对windows7进行永恒之蓝漏洞扫描</p><p><img src="post_8.assets/image-110.png" alt="img"></p><p>客户机存在永恒之蓝漏洞，进行永恒之蓝漏洞的利用</p><p><img src="post_8.assets/image-111.png" alt="img"></p><p>查看漏洞利用结果</p><p><img src="post_8.assets/image-112.png" alt="img"></p><p>成功获取到目标机的终端，执行getuid命令，查看当前用户权限</p><p><img src="post_8.assets/image-113.png" alt="img"></p><p>启用远程桌面并创建一个新的用户</p><p><img src="post_8.assets/image-114.png" alt="img"></p><p>新建终端窗口（ctrl+shift+t），连接远程桌面</p><p><img src="post_8.assets/image-115.png" alt="img"></p><p>登录到Windows7的远程桌面</p><p><img src="post_8.assets/image-116.png" alt="img"></p><p>此种方法会明显引起目标机的注意，远程桌面调用出来可以进行各种图形化操作</p><p>关闭主机防护策略</p><p>回到msf控制台使用hashdump从SAM文件中导出密码哈希</p><p><img src="post_8.assets/image-118.png" alt="img"></p><p>将刚刚创建用户的密码哈希记录下来</p><p>进入shell创建一条允许4444端口连接的防火墙规则</p><p><img src="post_8.assets/image-119.png" alt="img"></p><p>关闭UAC防护措施</p><p><img src="post_8.assets/image-120.png" alt="img"></p><p>开启Windows7的默认共享功能</p><p><img src="post_8.assets/image-121.png" alt="img"></p><p>退出shell返回到meterpreter</p><p><img src="post_8.assets/image-122.png" alt="img"></p><p>将会话保存到后台</p><p><img src="post_8.assets/image-123.png" alt="img"></p><p>使用hash值登录目标机</p><p><img src="post_8.assets/image-124.png" alt="img"></p><p>配置该模块参数，进行hash值登录</p><p><img src="post_8.assets/image-125.png" alt="img"></p><p>查看获取到的登录权限</p><p><img src="post_8.assets/image-127.png" alt="img"></p><p>获取到的是最高登录权限，系统权限</p><p>进行后门程序的配置</p><p>首先上传一个nc程序</p><p><img src="post_8.assets/image-126.png" alt="img"></p><p>然后设置注册表，添加nc程序的启动项</p><p><img src="post_8.assets/image-128.png" alt="img"></p><p>设置防火墙允许443端口访问网络</p><p><img src="post_8.assets/image-129.png" alt="img"></p><p>然后进行重启</p><p><img src="post_8.assets/image-130.png" alt="img"></p><p>转到windows7进去重启后的系统，启动cmd查看网络允许状态</p><p><img src="post_8.assets/image-131.png" alt="img"></p><p>回到kali使用nc连接到windows7目标机</p><p><img src="post_8.assets/image-132.png" alt="img"></p><p>断开nc连接</p><p><img src="post_8.assets/image-133.png" alt="img"></p><p>使用msf5进行连接</p><p><img src="post_8.assets/image-134.png" alt="img"></p><p>同样可以成功连接，使用Ctrl+c退出连接</p><p><img src="post_8.assets/image-135.png" alt="img"></p><p>永恒之蓝漏洞的利用全流程大致就是这样的一个模式，永恒之蓝漏洞利用是非常方便，针对windows的445端口进行攻击的一个方式。通过永恒之蓝漏洞可以结合蠕虫病毒来构建勒索病毒。永恒之蓝病毒的危害由此可见，影响非常大。</p><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><ol><li><a href="https://wiwiki.kfd.me/wiki/%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9D">永恒之蓝-维基百科</a></li></ol><p>闲聊到此为止，来喝杯茶可好？</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title></title>
    <link href="/2021/06/21/post_7/"/>
    <url>/2021/06/21/post_7/</url>
    
    <content type="html"><![CDATA[<h1 id="清茶一盏，公杯斟茗"><a href="#清茶一盏，公杯斟茗" class="headerlink" title="清茶一盏，公杯斟茗"></a>清茶一盏，公杯斟茗</h1><h2 id="“细论RSA加密算法”"><a href="#“细论RSA加密算法”" class="headerlink" title="“细论RSA加密算法”"></a>“细论RSA加密算法”</h2><blockquote><p>上下运杯，左右轻斟 </p><p>公杯，私茗，香满阑</p><p>清茶，浓茶，甘润田 </p><p>然君闻几何？</p></blockquote><p>要谈谈RSA加密算法，不妨先聊聊密码学的发展历史和密码学的历程。</p><p>密码学早在公元前400多年就已经产生，人类使用密码的历史几乎与使用文字的时间一样长，密码学的发展大致可以分为 3 个阶段: 1949 年之前的古典密码学阶段; 1949 年至 1975 年密码学成为科学的分支; 1976 年以后对称密钥密码算法得到进一步发展，产生了密码学的新方向—公钥密码学。1976 年，W.Diffie 和 M.Hellman 在发表的文章“密码学的新方向”中首次公开提出了公钥密码( Public-key Cryptography) 的概念。公钥密码的提出实现了加密密钥和解密密钥之间的独立，解决了对称密码体制中通信双方必须共享密钥的问题，在密码学界具有划时代的意义。1</p><p>密码学的历史非常悠久，但是密码学的发展速度并不是非常迅速，直到信息时代的到来以及网络空间安全面临着巨大的威胁，密码学得到了前所未有的飞速发展，RSA公钥密码就是其中的代表。密码学中研究的对象有大致三类：</p><ol><li>对称密码</li><li>非对称密码</li><li>协议</li></ol><p>而RSA密码属于非对称密码，公钥密码。RSA也是现代密码学的代表性的内容部分，那么非常经典的RSA密码就是一个什么样的密码呢？</p><p>首先，要搞清楚什么是RSA密码：</p><p>RSA加密算法是一种非对称加密算法，在公开密钥加密和电子商业中被广泛使用。RSA是由罗纳德·李维斯特（Ron Rivest）、阿迪·萨莫尔（Adi Shamir）和伦纳德·阿德曼（Leonard Adleman）在1977年一起提出的。当时他们三人都在麻省理工学院工作。RSA 就是他们三人姓氏开头字母拼在一起组成的。</p><p>1973年，在英国政府通讯总部工作的数学家克利福德·柯克斯（Clifford Cocks）在一个内部文件中提出了一个与之等效的算法，但该算法被列入机密，直到1997年才得到公开。</p><p>对极大整数做因数分解的难度决定了 RSA 算法的可靠性。换言之，对一极大整数做因数分解愈困难，RSA 算法愈可靠。假如有人找到一种快速因数分解的算法的话，那么用 RSA 加密的信息的可靠性就会极度下降。但找到这样的算法的可能性是非常小的。今天只有短的 RSA 钥匙才可能被强力方式破解。到目前为止，世界上还没有任何可靠的攻击RSA算法的方式。只要其钥匙的长度足够长，用RSA加密的信息实际上是不能被破解的。2</p><p>RSA加密算法就是三个人提出的一个非对称加密的算法，是一种公钥算法。RSA加密算法进行加密的信息具有良好的安全性和可靠性，正确地使用RSA加密算法可以应对互联网上的大多数针对密码进行的攻击。</p><p>RSA加密算法的具体内容是什么呢？</p><p>（这里借鉴一下阮一峰的个人博客进行说明）3</p><blockquote><p>（1）乙方生成两把密钥（公钥和私钥）。公钥是公开的，任何人都可以获得，私钥则是保密的。</p><p>（2）甲方获取乙方的公钥，然后用它对信息加密。</p><p>（3）乙方得到加密后的信息，用私钥解密。</p></blockquote><p>这是非对称加密的总体流程，简单来说就是公钥加密，私钥解密的算法模式。而RSA加密算法就是公钥算法中的代表性的算法，这经典算法的基本原理还是比较简单易懂的。</p><p>RSA加密算法需要一点点的数学基础，也可以说是数论基础。</p><h3 id="数学基础"><a href="#数学基础" class="headerlink" title="数学基础"></a>数学基础</h3><p><strong>模运算：模运算也可以说是用取余的运算方式</strong></p><p>$$ a \equiv b(mod; m)$$</p><p>这是最简单的模运算公式，也可以使用简单的Python语法实现：</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">b</span> = a % m <span class="hljs-comment"># python语言中%可以进行取余运算</span><br></code></pre></td></tr></table></figure><p><strong>整数环：模运算的延申，无论模运算中的数怎么加减乘除都在模的一个整数环中。</strong></p><p>在数论的概念中，模运算主要是针对自然数进行的研究，模运算也是如此。可以把整数环想象成一个钟表，钟表有12个数字，无论怎么加减乘除钟表的数字，指针始终都指在钟表的环中。</p><p>这里用简单的数学语言进行表示：</p><p>$$ a + c\equiv e(mod;12)$$</p><p>$$ a \cdot c\equiv f(mod;12)$$</p><p>当然也可以使用Python语法进行表示：</p><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs gcode">e = <span class="hljs-comment">(a+c)</span> <span class="hljs-meta">%</span> <span class="hljs-number">12</span><br>f = <span class="hljs-comment">(a*c)</span> <span class="hljs-meta">%</span> <span class="hljs-number">12</span><br></code></pre></td></tr></table></figure><p><strong>欧拉函数：求小于该数的素数个数多少的问题的最佳解决方案。</strong></p><p>欧拉函数也是数论里面比较重要的概念，欧拉函数的特点使得RSA加密算法有良好的加密性和安全性。</p><p>在讲欧拉函数之前，先阐述一下素数的概念：</p><blockquote><p>素数也叫质数，素数就是只能被1和自身整除的数</p><p>互素也叫互质，如果两个数的最大公因数是1，那么则称这两个数是互素的</p></blockquote><p>什么是欧拉函数呢？</p><p>欧拉函数一般使用 φ(n) 表示，一般来说是分为两种情况的：</p><p>（1） n是一个素数：</p><p>$$ \varphi (n)= n-1$$</p><p>（2）n不是一个素数，但是n是两个素数的乘积：</p><p>$$ \varphi (n) = (p-1) \cdot (q-1) $$</p><p>这就是欧拉函数，和欧拉函数一起使用的还有一个欧拉定理：</p><p>在数论中，欧拉定理,（也称费马-欧拉定理）是一个关于同余的性质。欧拉定理表明，若n,a为正整数，且n,a互质，则:</p><p>$$ a ^{\varphi(n)} \equiv 1(mod; n) $$</p><p>这些大致就是欧拉函数和欧拉定理的大致内容，都是规律性的总结，在RSA算法中加以使用就可以了。</p><p><strong>模反元素：如果两个正整数a和n互质，那么一定可以找到整数b，使得 ab-1 被n整除，或者说ab被n除的余数是1。</strong>3</p><p>这里可以使用数学语言进行解释一下：</p><p>$$ a \cdot b \equiv 1(mod;m) $$</p><p>就是两个数进行模乘法运算得到的结果是1的两个数互为模反元素，也叫逆元。</p><p>在这个等式中，可以说a是b的逆元，也可以说是b是a的逆元。</p><p><strong>最后一个数学概念：单向函数，公钥加密算法的核心原理</strong></p><p>单向函数就是由x求y简单，而由y求x比较困难的函数叫做单向函数：</p><p>$$ y = f(x) $$</p><p>$$ x = f^{-1}(y) $$</p><p>由于单向函数概念的出现，使得公钥加密私钥解密成为现实。</p><p>可是单向函数只是使加密变得容易，而并没有使解密变得容易。于是一个陷门的概念提出使公钥加密私钥解密的加密算法模式真正的变成现实。</p><p>什么是陷门呢？</p><p>陷门的概念就好比网络安全的后门，单向函数解密不是非常困难嘛，而陷门就是一个特殊的数值可以使单向函数进行解密变得简单。于是陷门就可以作为私钥进行解密。</p><p>RSA公钥加密算法的数学知识大致就是这些了。</p><p>下面，来聊一聊RSA公钥加密算法的具体过程。</p><h3 id="RSA加密算法"><a href="#RSA加密算法" class="headerlink" title="RSA加密算法"></a>RSA加密算法</h3><ol><li>首先随机选择两个不相等的素数p和q</li><li>计算p和q的乘积n</li><li>计算n的欧拉函数发φ(n)</li><li>随机选择一个整数e，e满足的条件是：1&lt;e&lt;φ(n)</li><li>计算e对于φ(n)的模反元素d</li><li>将n和e封装成公钥，将n和d封装成私钥</li></ol><p>具体流程用数学的语言描述：</p><p>$$ 1. \quad  p , q$$</p><p>$$ 2. \quad p\cdot q = n $$</p><p>$$ 3. \quad \varphi (n) $$</p><p>$$ 4. \quad  1&lt;e&lt;\varphi (n) $$</p><p>$$ 5. \quad e \cdot d \equiv 1 (mod; \varphi (n)) $$</p><p>$$ 6. \quad (n , e) , (n , d) $$</p><p>当然也可使用python语句进行设计：4</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> gmpy2<br><span class="hljs-keyword">import</span> gmpy2<br><span class="hljs-keyword">from</span> gmpy2 <span class="hljs-keyword">import</span> mpz<br><span class="hljs-keyword">import</span> binascii<br><br>rs = gmpy2.random_state()<br><br><span class="hljs-comment">#生成大素数（0-2^1024位）</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">create_prime</span>():</span><br>    p = gmpy2.mpz_urandomb(rs,<span class="hljs-number">1024</span>)         <span class="hljs-comment">#随机生成一个0~2^1024位的数</span><br>    <span class="hljs-keyword">while</span> <span class="hljs-keyword">not</span> gmpy2.is_prime(p):            <span class="hljs-comment">#判断生成的数是否是素数</span><br>        p = gmpy2.mpz_urandomb(rs,<span class="hljs-number">1024</span>)     <br>    <span class="hljs-keyword">return</span> p<br><br><span class="hljs-comment">#生成密钥e,d</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">get_e_d</span>(<span class="hljs-params">phi</span>):</span><br>    e = gmpy2.mpz_random(rs,phi)            <br>    <span class="hljs-keyword">while</span> gmpy2.gcd(e,phi) != <span class="hljs-number">1</span>:<br>        e = gmpy2.mpz_random(rs,phi)        <span class="hljs-comment">#随机生成一个0~phi的,与phi互素的数</span><br>    d = gmpy2.invert(e,phi)                 <span class="hljs-comment">#生成d</span><br>    <span class="hljs-keyword">return</span> e,d<br><br><span class="hljs-comment">#rsa加密</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">encrypt</span>(<span class="hljs-params">plain_text,e,n</span>):</span><br>    m = mpz(binascii.hexlify(plain_text.encode(<span class="hljs-string">&#x27;utf-8&#x27;</span>)), <span class="hljs-number">16</span>)<br>    cipher_text = gmpy2.powmod(m,e,n)<br>    <span class="hljs-keyword">return</span> cipher_text<br><br><span class="hljs-comment">#rsa解密</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">decrypt</span>(<span class="hljs-params">cipher_text,d,n</span>):</span><br>    m = gmpy2.powmod(cipher_text,d,n)<br>    plain_text = binascii.unhexlify(<span class="hljs-built_in">format</span>(m, <span class="hljs-string">&#x27;x&#x27;</span>)).decode(<span class="hljs-string">&#x27;utf-8&#x27;</span>)<br>    <span class="hljs-keyword">return</span> plain_text<br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    p = create_prime()<br>    q = create_prime()<br>    n = p * q<br>    phi = (p-<span class="hljs-number">1</span>)*(q-<span class="hljs-number">1</span>)<br>    e,d = get_e_d(phi)<br>    plain_text = <span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;请输入明文：&quot;</span>)<br>    cipher_text = encrypt(plain_text,e,n)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;RSA加密后的密文是：%x&quot;</span>%cipher_text)<br>    plain_text1 = decrypt(cipher_text,d,n)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;RSA解密后的明文是：&#123;&#125;&quot;</span>.<span class="hljs-built_in">format</span>(plain_text1))<br></code></pre></td></tr></table></figure><p>RSA的加密流程非常简单，只需要大致记忆就可以对RSA算法流程非常清晰，而且明了于心。同时，也会出现一些疑问，这么安全的加密算法会有什么样的漏洞会在CTF比赛中让CTF选手进行攻击呢？</p><p>无论再安全的算法，都有可以破解的漏洞存在，“没有绝对安全的系统”。时代在进步，密码学算法也在一步一步的提升，下一篇将揭示RSA公钥密码的常见攻击手段。</p><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><ol><li><a href="https://blog.csdn.net/jiang_xinxing/article/details/89360638">密码学发展简史-CSDN</a></li><li><a href="https://wiwiki.kfd.me/wiki/RSA">RSA加密算法-维基百科</a></li><li><a href="http://www.ruanyifeng.com/blog/2013/06/rsa_algorithm_part_one.html">RSA算法原理-阮一峰</a></li><li><a href="https://blog.csdn.net/weixin_43790779/article/details/105999977">python实现RSA算法</a></li></ol><p>闲聊到此为止，来喝杯茶可好？</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title></title>
    <link href="/2021/06/21/post_6/"/>
    <url>/2021/06/21/post_6/</url>
    
    <content type="html"><![CDATA[<h1 id="BUUCTF-CRYPTO-1-16-writeup"><a href="#BUUCTF-CRYPTO-1-16-writeup" class="headerlink" title="BUUCTF-CRYPTO-[1-16] writeup"></a>BUUCTF-CRYPTO-[1-16] writeup</h1><p>日常刷题喝茶的平时生活，整理一下题目的思路，捋一捋密码学。</p><p>BUUCTF是国内另一个比较不错的CTF的刷题平台，是由北京联合大学创建并维护的CTF大型同性交流沟通的平台，页面制作还是蛮美观滴！</p><p><img src="post_6.assets/image-58-1024x717.png" alt="img">BUUCTF页面</p><p>BUUCTF的整体难度是由简单变难的一个过程，前面的题目通常都是比较简单的题目，来看看这次日常的题目：</p><p><img src="post_6.assets/image-59.png" alt="img">题目</p><p>这次是16道题目：</p><ul><li>MD5</li><li>Url编码</li><li>一眼就解密</li><li>看我回旋踢</li><li>摩丝</li><li>password</li><li>变异凯撒</li><li>Quoted-printable</li><li>Rabbit</li><li>篱笆墙的影子</li><li>RSA</li><li>丢失的MD5</li><li>Alice与Bob</li><li>rsarsa</li><li>大帝的密码武器</li><li>Windows系统密码</li></ul><h2 id="MD5"><a href="#MD5" class="headerlink" title="MD5"></a>MD5</h2><p>看题目应该是考察MD5加密的暴力破解</p><p>什么是MD5加密？</p><p>MD5消息摘要算法（英语：MD5 Message-Digest Algorithm），一种被广泛使用的密码散列函数，可以产生出一个128位（16字节）的散列值（hash value），用于确保信息传输完整一致。MD5由美国密码学家罗纳德·李维斯特（Ronald Linn Rivest）设计，于1992年公开，用以取代MD4算法。这套算法的程序在 RFC 1321 中被加以规范。</p><p>将数据（如一段文字）运算变为另一固定长度值，是散列算法的基础原理。</p><p>1996年后被证实存在弱点，可以被加以破解，对于需要高度安全性的资料，专家一般建议改用其他算法，如SHA-2。2004年，证实MD5算法无法防止碰撞攻击（英语：Collision_attack），因此不适用于安全性认证，如SSL公开密钥认证或是数字签名等用途。1</p><p>看看题目描述：</p><p><img src="post_6.assets/image-60.png" alt="img">题目描述</p><p>下载附件，查看附件内容：</p><p><img src="post_6.assets/image-61.png" alt="img">附件内容</p><p>附件中给出一段加密数据：e00cf25ad42683b3df678c61f42c6bda</p><p>根据题目，应该是MD5加密，去<a href="https://www.cmd5.com/">解密网站</a></p><p>进行解密。</p><p><img src="post_6.assets/image-62.png" alt="img">cmd5</p><p>题目描述中，要求以flag{}形式进行提交，故flag就是flag{admin1}</p><p>这道题目考察md5加密的相关知识，签到题。</p><h2 id="Url编码"><a href="#Url编码" class="headerlink" title="Url编码"></a>Url编码</h2><p>看题目应该是考察Url编码的解码</p><p>什么是Url编码？</p><p>百分号编码（英语：Percent-encoding），又称：URL编码（URL encoding）是特定上下文的统一资源定位符 （URL）的编码机制，实际上也适用于统一资源标志符（URI）的编码。也用于为 application/x-www-form-urlencoded MIME准备数据，因为它用于通过HTTP的请求操作（request）提交HTML表单数据。2</p><p>看看题目描述：</p><p><img src="post_6.assets/image-63.png" alt="img">题目描述</p><p>下载附件，查看附件内容：</p><p><img src="post_6.assets/image-64.png" alt="img">附件内容</p><p>一段编码的字段：%66%6c%61%67%7b%61%6e%64%20%31%3d%31%7d</p><p>使用url解码工具解码，也可以使用python进行解码。我个人习惯使用python脚本进行url编码解码：</p><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs llvm">import urllib.parse<br><br>cipher <span class="hljs-operator">=</span> &#x27;<span class="hljs-variable">%66</span><span class="hljs-variable">%6</span><span class="hljs-keyword">c</span><span class="hljs-variable">%61</span><span class="hljs-variable">%67</span><span class="hljs-variable">%7</span>b<span class="hljs-variable">%61</span><span class="hljs-variable">%6</span>e<span class="hljs-variable">%64</span><span class="hljs-variable">%20</span><span class="hljs-variable">%31</span><span class="hljs-variable">%3</span>d<span class="hljs-variable">%31</span><span class="hljs-variable">%7</span>d&#x27;<br>print(urllib.parse.unquote(cipher))<br></code></pre></td></tr></table></figure><p>运行脚本就可以出结果：</p><p><img src="post_6.assets/image-65.png" alt="img"></p><p>解码后也就是flag数据：flag{and 1=1}</p><p>故本题的flag是flag{and 1=1}</p><p>题目主要考察URL编码，签到题。</p><h2 id="一眼就解密"><a href="#一眼就解密" class="headerlink" title="一眼就解密"></a>一眼就解密</h2><p>题目给不了太多提示</p><p>直接点开题目描述看内容：</p><p><img src="post_6.assets/image-66.png" alt="img">题目描述</p><p>看题目描述中的字符串，字符串的样子像是base64编码：ZmxhZ3tUSEVfRkxBR19PRl9USElTX1NUUklOR30=</p><p>这里一个脚本进行求解：</p><figure class="highlight nix"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs nix"><span class="hljs-built_in">import</span> base64<br><br><span class="hljs-attr">cipher</span> = <span class="hljs-string">&quot;ZmxhZ3tUSEVfRkxBR19PRl9USElTX1NUUklOR30=&quot;</span><br><span class="hljs-attr">plainer</span> = <span class="hljs-string">&quot;&quot;</span><br><br><span class="hljs-attr">plainer</span> = base64.b64decode(cipher)<br>print plainer<br></code></pre></td></tr></table></figure><p>运行程序求解得到：flag{THE_FLAG_OF_THIS_STRING}</p><p>故本题的flag是flag{THE_FLAG_OF_THIS_STRING}</p><p>题目考察base64编码，签到题。</p><h2 id="看我回旋踢"><a href="#看我回旋踢" class="headerlink" title="看我回旋踢"></a>看我回旋踢</h2><p>看题目，暂时想不出什么密码相关联的内容。</p><p>点开题目描述：</p><p><img src="post_6.assets/image-67.png" alt="img">题目描述</p><p>只提示了题目提交的flag数据的格式信息</p><p>下载附件，查看附件内容：</p><p><img src="post_6.assets/image-68.png" alt="img">附件内容</p><p>看附件给出的字符形式像是替换密码加密的数据，最容易联想到的替换密码就是凯撒密码，尝试使用凯撒密码进行解密：（这里一个脚本求解凯撒密码）</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs stylus">dict_list = <span class="hljs-selector-attr">[]</span><br><span class="hljs-keyword">for</span> <span class="hljs-selector-tag">i</span> <span class="hljs-keyword">in</span> range(<span class="hljs-number">26</span>):<br>    dict_list<span class="hljs-selector-class">.append</span>(chr(ord(<span class="hljs-string">&#x27;a&#x27;</span>)+i))<br><br>cipher = <span class="hljs-string">&quot;synt&#123;5pq1004q-86n5-46q8-o720-oro5on0417r1&#125;&quot;</span><br><br><span class="hljs-keyword">for</span> n <span class="hljs-keyword">in</span> range(<span class="hljs-number">26</span>):<br>    plainer = <span class="hljs-string">&quot;&quot;</span><br>    <span class="hljs-keyword">for</span> <span class="hljs-selector-tag">i</span> <span class="hljs-keyword">in</span> cipher:<br>        <span class="hljs-keyword">if</span> <span class="hljs-selector-tag">i</span> <span class="hljs-keyword">in</span> dict_list:<br>            plainer += dict_list<span class="hljs-selector-attr">[(dict_list.index(i)-n)%26]</span><br>        <span class="hljs-keyword">else</span>:<br>            plainer += <span class="hljs-selector-tag">i</span><br><br>    print plainer<br></code></pre></td></tr></table></figure><blockquote><p>凯撒密码的算法思路，在上一篇XCTF CRYPTO的WP中有提到，具体内容可以访问上一篇：</p><p><a href="http://zkinghar.top/?p=463">XCTF-CRYPTO-新手区 writeup</a></p></blockquote><p>运行脚本程序，得到一堆凯撒解密的结果：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">synt</span>&#123;<span class="hljs-number">5</span>pq<span class="hljs-number">1004</span>q-<span class="hljs-number">86</span>n<span class="hljs-number">5</span>-<span class="hljs-number">46</span>q<span class="hljs-number">8</span>-o<span class="hljs-number">720</span>-oro<span class="hljs-number">5</span><span class="hljs-literal">on</span><span class="hljs-number">0417</span>r<span class="hljs-number">1</span>&#125;<br><span class="hljs-attribute">rxms</span>&#123;<span class="hljs-number">5</span>op<span class="hljs-number">1004</span>p-<span class="hljs-number">86</span>m<span class="hljs-number">5</span>-<span class="hljs-number">46</span>p<span class="hljs-number">8</span>-n<span class="hljs-number">720</span>-nqn<span class="hljs-number">5</span>nm<span class="hljs-number">0417</span>q<span class="hljs-number">1</span>&#125;<br><span class="hljs-attribute">qwlr</span>&#123;<span class="hljs-number">5</span>no<span class="hljs-number">1004</span>o-<span class="hljs-number">86</span>l<span class="hljs-number">5</span>-<span class="hljs-number">46</span>o<span class="hljs-number">8</span>-m<span class="hljs-number">720</span>-mpm<span class="hljs-number">5</span>ml<span class="hljs-number">0417</span>p<span class="hljs-number">1</span>&#125;<br><span class="hljs-attribute">pvkq</span>&#123;<span class="hljs-number">5</span>mn<span class="hljs-number">1004</span>n-<span class="hljs-number">86</span>k<span class="hljs-number">5</span>-<span class="hljs-number">46</span>n<span class="hljs-number">8</span>-l<span class="hljs-number">720</span>-lol<span class="hljs-number">5</span>lk<span class="hljs-number">0417</span>o<span class="hljs-number">1</span>&#125;<br><span class="hljs-attribute">oujp</span>&#123;<span class="hljs-number">5</span>lm<span class="hljs-number">1004</span>m-<span class="hljs-number">86</span>j<span class="hljs-number">5</span>-<span class="hljs-number">46</span>m<span class="hljs-number">8</span>-k<span class="hljs-number">720</span>-knk<span class="hljs-number">5</span>kj<span class="hljs-number">0417</span>n<span class="hljs-number">1</span>&#125;<br><span class="hljs-attribute">ntio</span>&#123;<span class="hljs-number">5</span>kl<span class="hljs-number">1004</span>l-<span class="hljs-number">86</span>i<span class="hljs-number">5</span>-<span class="hljs-number">46</span>l<span class="hljs-number">8</span>-j<span class="hljs-number">720</span>-jmj<span class="hljs-number">5</span>ji<span class="hljs-number">0417</span>m<span class="hljs-number">1</span>&#125;<br><span class="hljs-attribute">mshn</span>&#123;<span class="hljs-number">5</span>jk<span class="hljs-number">1004</span>k-<span class="hljs-number">86</span>h<span class="hljs-number">5</span>-<span class="hljs-number">46</span>k<span class="hljs-number">8</span>-i<span class="hljs-number">720</span>-ili<span class="hljs-number">5</span>ih<span class="hljs-number">0417</span>l<span class="hljs-number">1</span>&#125;<br><span class="hljs-attribute">lrgm</span>&#123;<span class="hljs-number">5</span>ij<span class="hljs-number">1004</span>j-<span class="hljs-number">86</span>g<span class="hljs-number">5</span>-<span class="hljs-number">46</span>j<span class="hljs-number">8</span>-h<span class="hljs-number">720</span>-hkh<span class="hljs-number">5</span>hg<span class="hljs-number">0417</span>k<span class="hljs-number">1</span>&#125;<br><span class="hljs-attribute">kqfl</span>&#123;<span class="hljs-number">5</span>hi<span class="hljs-number">1004</span>i-<span class="hljs-number">86</span>f<span class="hljs-number">5</span>-<span class="hljs-number">46</span>i<span class="hljs-number">8</span>-g<span class="hljs-number">720</span>-gjg<span class="hljs-number">5</span>gf<span class="hljs-number">0417</span>j<span class="hljs-number">1</span>&#125;<br><span class="hljs-attribute">jpek</span>&#123;<span class="hljs-number">5</span>gh<span class="hljs-number">1004</span>h-<span class="hljs-number">86</span>e<span class="hljs-number">5</span>-<span class="hljs-number">46</span>h<span class="hljs-number">8</span>-f<span class="hljs-number">720</span>-fif<span class="hljs-number">5</span>fe<span class="hljs-number">0417</span>i<span class="hljs-number">1</span>&#125;<br><span class="hljs-attribute">iodj</span>&#123;<span class="hljs-number">5</span>fg<span class="hljs-number">1004</span>g-<span class="hljs-number">86</span>d<span class="hljs-number">5</span>-<span class="hljs-number">46</span>g<span class="hljs-number">8</span>-e<span class="hljs-number">720</span>-ehe<span class="hljs-number">5</span>ed<span class="hljs-number">0417</span>h<span class="hljs-number">1</span>&#125;<br><span class="hljs-attribute">hnci</span>&#123;<span class="hljs-number">5</span>ef<span class="hljs-number">1004</span>f-<span class="hljs-number">86</span>c<span class="hljs-number">5</span>-<span class="hljs-number">46</span>f<span class="hljs-number">8</span>-d<span class="hljs-number">720</span>-dgd<span class="hljs-number">5</span>dc<span class="hljs-number">0417</span>g<span class="hljs-number">1</span>&#125;<br><span class="hljs-attribute">gmbh</span>&#123;<span class="hljs-number">5</span>de<span class="hljs-number">1004</span>e-<span class="hljs-number">86</span>b<span class="hljs-number">5</span>-<span class="hljs-number">46</span>e<span class="hljs-number">8</span>-c<span class="hljs-number">720</span>-cfc<span class="hljs-number">5</span>cb<span class="hljs-number">0417</span>f<span class="hljs-number">1</span>&#125;<br><span class="hljs-attribute">flag</span>&#123;<span class="hljs-number">5</span>cd<span class="hljs-number">1004</span>d-<span class="hljs-number">86</span>a<span class="hljs-number">5</span>-<span class="hljs-number">46</span>d<span class="hljs-number">8</span>-b<span class="hljs-number">720</span>-beb<span class="hljs-number">5</span>ba<span class="hljs-number">0417</span>e<span class="hljs-number">1</span>&#125;<br><span class="hljs-attribute">ekzf</span>&#123;<span class="hljs-number">5</span>bc<span class="hljs-number">1004</span>c-<span class="hljs-number">86</span>z<span class="hljs-number">5</span>-<span class="hljs-number">46</span>c<span class="hljs-number">8</span>-a<span class="hljs-number">720</span>-ada<span class="hljs-number">5</span>az<span class="hljs-number">0417</span>d<span class="hljs-number">1</span>&#125;<br><span class="hljs-attribute">djye</span>&#123;<span class="hljs-number">5</span>ab<span class="hljs-number">1004</span>b-<span class="hljs-number">86</span>y<span class="hljs-number">5</span>-<span class="hljs-number">46</span>b<span class="hljs-number">8</span>-z<span class="hljs-number">720</span>-zcz<span class="hljs-number">5</span>zy<span class="hljs-number">0417</span>c<span class="hljs-number">1</span>&#125;<br><span class="hljs-attribute">cixd</span>&#123;<span class="hljs-number">5</span>za<span class="hljs-number">1004</span>a-<span class="hljs-number">86</span>x<span class="hljs-number">5</span>-<span class="hljs-number">46</span>a<span class="hljs-number">8</span>-y<span class="hljs-number">720</span>-yby<span class="hljs-number">5</span>yx<span class="hljs-number">0417</span>b<span class="hljs-number">1</span>&#125;<br><span class="hljs-attribute">bhwc</span>&#123;<span class="hljs-number">5</span>yz<span class="hljs-number">1004</span>z-<span class="hljs-number">86</span>w<span class="hljs-number">5</span>-<span class="hljs-number">46</span>z<span class="hljs-number">8</span>-x<span class="hljs-number">720</span>-xax<span class="hljs-number">5</span>xw<span class="hljs-number">0417</span>a<span class="hljs-number">1</span>&#125;<br><span class="hljs-attribute">agvb</span>&#123;<span class="hljs-number">5</span>xy<span class="hljs-number">1004</span>y-<span class="hljs-number">86</span>v<span class="hljs-number">5</span>-<span class="hljs-number">46</span>y<span class="hljs-number">8</span>-w<span class="hljs-number">720</span>-wzw<span class="hljs-number">5</span>wv<span class="hljs-number">0417</span>z<span class="hljs-number">1</span>&#125;<br><span class="hljs-attribute">zfua</span>&#123;<span class="hljs-number">5</span>wx<span class="hljs-number">1004</span>x-<span class="hljs-number">86</span>u<span class="hljs-number">5</span>-<span class="hljs-number">46</span>x<span class="hljs-number">8</span>-v<span class="hljs-number">720</span>-vyv<span class="hljs-number">5</span>vu<span class="hljs-number">0417</span>y<span class="hljs-number">1</span>&#125;<br><span class="hljs-attribute">yetz</span>&#123;<span class="hljs-number">5</span>vw<span class="hljs-number">1004</span>w-<span class="hljs-number">86</span>t<span class="hljs-number">5</span>-<span class="hljs-number">46</span>w<span class="hljs-number">8</span>-u<span class="hljs-number">720</span>-uxu<span class="hljs-number">5</span>ut<span class="hljs-number">0417</span>x<span class="hljs-number">1</span>&#125;<br><span class="hljs-attribute">xdsy</span>&#123;<span class="hljs-number">5</span>uv<span class="hljs-number">1004</span>v-<span class="hljs-number">86</span>s<span class="hljs-number">5</span>-<span class="hljs-number">46</span>v<span class="hljs-number">8</span>-t<span class="hljs-number">720</span>-twt<span class="hljs-number">5</span>ts<span class="hljs-number">0417</span>w<span class="hljs-number">1</span>&#125;<br><span class="hljs-attribute">wcrx</span>&#123;<span class="hljs-number">5</span>tu<span class="hljs-number">1004</span>u-<span class="hljs-number">86</span>r<span class="hljs-number">5</span>-<span class="hljs-number">46</span>u<span class="hljs-number">8</span>-s<span class="hljs-number">720</span>-svs<span class="hljs-number">5</span>sr<span class="hljs-number">0417</span>v<span class="hljs-number">1</span>&#125;<br><span class="hljs-attribute">vbqw</span>&#123;<span class="hljs-number">5</span>st<span class="hljs-number">1004</span>t-<span class="hljs-number">86</span>q<span class="hljs-number">5</span>-<span class="hljs-number">46</span>t<span class="hljs-number">8</span>-r<span class="hljs-number">720</span>-rur<span class="hljs-number">5</span>rq<span class="hljs-number">0417</span>u<span class="hljs-number">1</span>&#125;<br><span class="hljs-attribute">uapv</span>&#123;<span class="hljs-number">5</span>rs<span class="hljs-number">1004</span>s-<span class="hljs-number">86</span>p<span class="hljs-number">5</span>-<span class="hljs-number">46</span>s<span class="hljs-number">8</span>-q<span class="hljs-number">720</span>-qtq<span class="hljs-number">5</span>qp<span class="hljs-number">0417</span>t<span class="hljs-number">1</span>&#125;<br><span class="hljs-attribute">tzou</span>&#123;<span class="hljs-number">5</span>qr<span class="hljs-number">1004</span>r-<span class="hljs-number">86</span>o<span class="hljs-number">5</span>-<span class="hljs-number">46</span>r<span class="hljs-number">8</span>-p<span class="hljs-number">720</span>-psp<span class="hljs-number">5</span>po<span class="hljs-number">0417</span>s<span class="hljs-number">1</span>&#125;<br></code></pre></td></tr></table></figure><p>在解密的字符列表中，找到符合flag格式的字符段：</p><p>flag{5cd1004d-86a5-46d8-b720-beb5ba0417e1}</p><p>故本题的flag是：flag{5cd1004d-86a5-46d8-b720-beb5ba0417e1}</p><p>题目主要考察凯撒密码，签到题。</p><h2 id="摩丝"><a href="#摩丝" class="headerlink" title="摩丝"></a>摩丝</h2><p>看题目，可以联想到Morse电码，这题目应该是摩尔斯密码的解密题目</p><p>点开题目描述：</p><p><img src="post_6.assets/image-69.png" alt="img">题目描述</p><p>题目描述只说了flag{}的格式，下载附件并查看：</p><p><img src="post_6.assets/image-70.png" alt="img">附件内容</p><p>果然是摩尔斯密码，这里一个脚本解决：</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><code class="hljs stylus">dict_list = &#123;<br>        <span class="hljs-string">&#x27;.-&#x27;</span>:<span class="hljs-string">&#x27;a&#x27;</span>,<br>        <span class="hljs-string">&#x27;-...&#x27;</span>:<span class="hljs-string">&#x27;b&#x27;</span>,<br>        <span class="hljs-string">&#x27;-.-.&#x27;</span>:<span class="hljs-string">&#x27;c&#x27;</span>,<br>        <span class="hljs-string">&#x27;-..&#x27;</span>:<span class="hljs-string">&#x27;d&#x27;</span>,<br>        <span class="hljs-string">&#x27;.&#x27;</span>:<span class="hljs-string">&#x27;e&#x27;</span>,<br>        <span class="hljs-string">&#x27;..-.&#x27;</span>:<span class="hljs-string">&#x27;f&#x27;</span>,<br>        <span class="hljs-string">&#x27;--.&#x27;</span>:<span class="hljs-string">&#x27;g&#x27;</span>,<br>        <span class="hljs-string">&#x27;....&#x27;</span>:<span class="hljs-string">&#x27;h&#x27;</span>,<br>        <span class="hljs-string">&#x27;..&#x27;</span>:<span class="hljs-string">&#x27;i&#x27;</span>,<br>        <span class="hljs-string">&#x27;.---&#x27;</span>:<span class="hljs-string">&#x27;j&#x27;</span>,<br>        <span class="hljs-string">&#x27;-.-&#x27;</span>:<span class="hljs-string">&#x27;k&#x27;</span>,<br>        <span class="hljs-string">&#x27;.-..&#x27;</span>:<span class="hljs-string">&#x27;l&#x27;</span>,<br>        <span class="hljs-string">&#x27;--&#x27;</span>:<span class="hljs-string">&#x27;m&#x27;</span>,<br>        <span class="hljs-string">&#x27;-.&#x27;</span>:<span class="hljs-string">&#x27;n&#x27;</span>,<br>        <span class="hljs-string">&#x27;---&#x27;</span>:<span class="hljs-string">&#x27;o&#x27;</span>,<br>        <span class="hljs-string">&#x27;.--.&#x27;</span>:<span class="hljs-string">&#x27;p&#x27;</span>,<br>        <span class="hljs-string">&#x27;--.-&#x27;</span>:<span class="hljs-string">&#x27;q&#x27;</span>,<br>        <span class="hljs-string">&#x27;.-.&#x27;</span>:<span class="hljs-string">&#x27;r&#x27;</span>,<br>        <span class="hljs-string">&#x27;...&#x27;</span>:<span class="hljs-string">&#x27;s&#x27;</span>,<br>        <span class="hljs-string">&#x27;-&#x27;</span>:<span class="hljs-string">&#x27;t&#x27;</span>,<br>        <span class="hljs-string">&#x27;..-&#x27;</span>:<span class="hljs-string">&#x27;u&#x27;</span>,<br>        <span class="hljs-string">&#x27;...-&#x27;</span>:<span class="hljs-string">&#x27;v&#x27;</span>,<br>        <span class="hljs-string">&#x27;.--&#x27;</span>:<span class="hljs-string">&#x27;w&#x27;</span>,<br>        <span class="hljs-string">&#x27;-..-&#x27;</span>:<span class="hljs-string">&#x27;x&#x27;</span>,<br>        <span class="hljs-string">&#x27;-.--&#x27;</span>:<span class="hljs-string">&#x27;y&#x27;</span>,<br>        <span class="hljs-string">&#x27;--..&#x27;</span>:<span class="hljs-string">&#x27;z&#x27;</span>,<br>        <span class="hljs-string">&#x27;-----&#x27;</span>:<span class="hljs-string">&#x27;0&#x27;</span>,<br>        <span class="hljs-string">&#x27;.----&#x27;</span>:<span class="hljs-string">&#x27;1&#x27;</span>,<br>        <span class="hljs-string">&#x27;..---&#x27;</span>:<span class="hljs-string">&#x27;2&#x27;</span>,<br>        <span class="hljs-string">&#x27;...--&#x27;</span>:<span class="hljs-string">&#x27;3&#x27;</span>,<br>        <span class="hljs-string">&#x27;....-&#x27;</span>:<span class="hljs-string">&#x27;4&#x27;</span>,<br>        <span class="hljs-string">&#x27;.....&#x27;</span>:<span class="hljs-string">&#x27;5&#x27;</span>,<br>        <span class="hljs-string">&#x27;-....&#x27;</span>:<span class="hljs-string">&#x27;6&#x27;</span>,<br>        <span class="hljs-string">&#x27;--...&#x27;</span>:<span class="hljs-string">&#x27;7&#x27;</span>,<br>        <span class="hljs-string">&#x27;---..&#x27;</span>:<span class="hljs-string">&#x27;8&#x27;</span>,<br>        <span class="hljs-string">&#x27;----.&#x27;</span>:<span class="hljs-string">&#x27;9&#x27;</span>,<br>        <span class="hljs-string">&#x27;..--.-&#x27;</span>:<span class="hljs-string">&#x27;_&#x27;</span><br>        &#125;<br>cipher = <span class="hljs-string">&quot;.. .-.. --- ...- . -.-- --- ..-&quot;</span><br>plainer = <span class="hljs-string">&quot;&quot;</span><br><br>cipher_arr = cipher<span class="hljs-selector-class">.split</span>(<span class="hljs-string">&quot; &quot;</span>)<br><br><span class="hljs-keyword">for</span> <span class="hljs-selector-tag">i</span> <span class="hljs-keyword">in</span> cipher_arr:<br>    plainer += dict_list<span class="hljs-selector-attr">[i]</span><br><br>print plainer<span class="hljs-selector-class">.upper</span>()<br>print plainer<span class="hljs-selector-class">.lower</span>()<br></code></pre></td></tr></table></figure><blockquote><p>摩尔斯电码的详细介绍，在上一篇XCTF CRYPTO的WP中有提到，具体内容可以访问上一篇：</p><p><a href="http://zkinghar.top/?p=463">XCTF-CRYPTO-新手区 writeup</a></p></blockquote><p>执行一下代码，得到两个数据：</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">ILOVEYOU</span><br><span class="hljs-attribute">iloveyou</span><br></code></pre></td></tr></table></figure><p>两个数据都可能是flag数据，我记得这道题目的flag数据好像是用大写的，即：flag{ILOVEYOU}，也有可能错。</p><p>题目主要考察摩尔斯电码相关知识，签到题。</p><h2 id="password"><a href="#password" class="headerlink" title="password"></a>password</h2><p>看题目应该是与密码有关系的题目</p><p>点开题目描述：</p><p><img src="post_6.assets/image-71.png" alt="img">题目描述</p><p>只有flag数据提交格式的相关信息，下载附件并打开：</p><p><img src="post_6.assets/image-72.png" alt="img">附件内容</p><p>看到附件内容里面的信息，可以大致判断这道题目应该是社会工程学题目。</p><p>什么是社会工程学：</p><p>在计算机科学，社会工程学指的是通过与他人的合法交流，来使其心理受到影响，做出某些动作或者是透露一些机密信息的方式。这通常被认为是欺诈他人以收集信息、行骗和入侵计算机系统的行为。在英美普通法系，这一行为一般是被认作侵犯隐私权的。</p><p>历史上，社会工程学是隶属于社会学，不过其影响他人心理的效果引起了计算机安全专家的注意。3</p><p>简单来说，社会工程学就是利用人性的弱点来进行分析，得到关键性的信息的方式。社会工程学也就是互联网安全体系中存在的威胁性漏洞。</p><p>根据题目的信息，可以猜测flag数据可能是flag{zs19900315}或flag{19900315zs}</p><p>经过测试发现，flag数据是flag{zs19900315}</p><p>题目主要考察社会工程学的知识，签到题。</p><h2 id="变异凯撒"><a href="#变异凯撒" class="headerlink" title="变异凯撒"></a>变异凯撒</h2><p>看题目应该是凯撒密码考察</p><p>点开题目描述：</p><p><img src="post_6.assets/image-73.png" alt="img">题目描述</p><p>题目描述一如既往的朴素，只告诉了提交的格式</p><p>下载附件，并查看附件内容：</p><p><img src="post_6.assets/image-74.png" alt="img">附件内容</p><p>密文中有很多编码的字符，字典集可能不是26字母表，可能是ascii编码表</p><p>分析一下附件的加密逻辑：（这里我写了一个小脚本）</p><p><img src="post_6.assets/image-75.png" alt="img">分析</p><p>分析发现移位是ascii码的移位方式，而且移位的数据是一个递增的数列，5作为初始数列，以1为差值的等差数列形式。明文的数值比密文的数值大一些。分析完毕。</p><p>这里还是一个脚本解决问题：</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs dart">cipher = <span class="hljs-string">&quot;afZ_r9VYfScOeO_UL^RWUc&quot;</span><br>plainer = <span class="hljs-string">&quot;&quot;</span><br><br><span class="hljs-built_in">num</span> = <span class="hljs-number">5</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> cipher:<br>    plainer +=chr(ord(i)+<span class="hljs-built_in">num</span>)<br>    <span class="hljs-built_in">num</span> += <span class="hljs-number">1</span><br><br><span class="hljs-built_in">print</span> plainer<br></code></pre></td></tr></table></figure><p>执行脚本，得到flag数据：flag{Caesar_variation}</p><p>故flag数据是flag{Caesar_variation}</p><p>题目主要考察凯撒密码的原理，简单题。</p><h2 id="Quoted-printable"><a href="#Quoted-printable" class="headerlink" title="Quoted-printable"></a>Quoted-printable</h2><p>题目暂时看不出什么样的信息，题目翻译下来就是字符集</p><p>点开题目描述：</p><p><img src="post_6.assets/image-76.png" alt="img">题目描述</p><p>题目描述还是一如既往的buu的风格，没有什么提示性的描述</p><p>直接下载附件，并查看附件内容：</p><p><img src="post_6.assets/image-77.png" alt="img">附件内容</p><p>看到内容，感觉是熟悉的味道：E9=82=A3=E4=BD=A0=E4=B9=9F=E5=BE=88=E6=A3=92=E5=93=A6</p><p>这里写个小脚本试试16进制解码：</p><figure class="highlight processing"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs processing">cipher = <span class="hljs-string">&quot;E9=82=A3=E4=BD=A0=E4=B9=9F=E5=BE=88=E6=A3=92=E5=93=A6&quot;</span><br>cipher_arr = cipher.<span class="hljs-built_in">split</span>(<span class="hljs-string">&#x27;=&#x27;</span>)<br>plainer = <span class="hljs-string">&#x27;&#x27;</span>.<span class="hljs-built_in">join</span>(cipher_arr).decode(<span class="hljs-string">&#x27;hex&#x27;</span>)<br><span class="hljs-built_in">print</span> plainer<br></code></pre></td></tr></table></figure><p>执行编写的脚本，得到数据：那你也很棒哦</p><p>这个数据应该就是flag数据了，对数据进行一些修饰得到flag：flag{那你也很棒哦}</p><p>故flag是flag{那你也很棒哦}</p><p>本题主要考察hex编码，签到题。</p><h2 id="Rabbit"><a href="#Rabbit" class="headerlink" title="Rabbit"></a>Rabbit</h2><p>看到题目名字还是有些懵懵的，搜索一些发现题目应该是在说Rabbit流密码。</p><p>  什么是流密码？什么是Rabbit密码？</p><p>在密码学中，流密码（英语：Stream cipher），又译为流加密、资料流加密，是一种对称加密算法，加密和解密双方使用相同伪随机加密数据流（pseudo-random stream）作为密钥，明文数据每次与密钥数据流顺次对应加密，得到密文数据流。实践中数据通常是一个位（bit）并用异或（xor）操作加密。</p><p>该算法解决了对称加密完善保密性（perfect secrecy）的实际操作困难。“完善保密性”由克劳德·香农于1949年提出。由于完善保密性要求密钥长度不短于明文长度，故而实际操作存在困难，改由较短数据流通过特定算法得到密钥流。4</p><p>流密码就是基于随机数的对称加密算法，Rabbit密码是流密码的一种：</p><p>Rabbit流密码（Rabbit Stream Cipher）简介</p><p>Rabbit流密码是由Cryptico公司（<a href="http://www.cryptico.com/">http://www.cryptico.com</a>）设计的，密钥长度128位，</p><p>最大加密消息长度为2 Bytes，即16 TB，若消息超过该长度，则需要更换密钥对剩下的消息进行处理。它是目前安全性较高，加/解密速度比较高效的流密码之一，在各种处理器平台上都有不凡的表现。5</p><p>Cryptico公司好像是已经搜索不到了，而且那个网站的域名也在进行拍卖，以目前的情况，我还找不到有关Rabbit密码的相关算法信息。但是，通过论文的查阅找到了，rabbit算法的内容：6</p><p><img src="post_6.assets/image-82.png" alt="img"></p><p><img src="post_6.assets/image-83.png" alt="img"></p><p><img src="post_6.assets/image-84.png" alt="img"></p><p><img src="post_6.assets/image-85.png" alt="img"></p><p>Rabbit密码的加密算法还是比较复杂的，不过通过搜索引擎找到了破解Rabbit密码的现成脚本</p><p>点开题目描述：</p><p><img src="post_6.assets/image-86.png" alt="img">题目描述</p><p>一如既往没有什么卵用的题目描述</p><p>下载附件，查看附件内容：</p><p><img src="post_6.assets/image-87.png" alt="img">附件内容</p><p>附件内容里面是一组密文：U2FsdGVkX1/+ydnDPowGbjjJXhZxm2MP2AgI</p><p>这里使用在线解密工具进行解密：<a href="https://www.sojson.com/encrypt_rabbit.html">https://www.sojson.com/encrypt_rabbit.html</a></p><p>（本菜鸡不会写，嘤嘤嘤）</p><p><img src="post_6.assets/image-88-1024x242.png" alt="img">     解密页面</p><p>得到了一个明文：Cute_Rabbit</p><p>对得到的明文进行简单的修饰：flag{Cute_Rabbit}</p><p>故flag是flag{Cute_Rabbit}</p><p>本题主要考察Rabbit流密码加密，简单题</p><h2 id="篱笆墙的影子"><a href="#篱笆墙的影子" class="headerlink" title="篱笆墙的影子"></a>篱笆墙的影子</h2><p>看到题目，这题应该是考察栅栏密码。（篱笆墙也只能联想到栅栏密码了）</p><blockquote><p>栅栏密码的详细介绍，在上一篇XCTF CRYPTO的WP中有提到，具体内容可以访问上一篇：</p><p><a href="http://zkinghar.top/?p=463">XCTF-CRYPTO-新手区 writeup</a></p></blockquote><p>点开题目描述</p><p><img src="post_6.assets/image-89.png" alt="img">题目描述</p><p>题目描述就是在说，还是熟悉的味道，唔~。然而也没什么卵用</p><p>下载附件，并查看附件内容：</p><p><img src="post_6.assets/image-90.png" alt="img">附件内容</p><p>附件里面的文件中是一段熟悉密文：felhaagv{ewtehtehfilnakgw}</p><p>由于不确定是W型还是传统型，直接使用之前写的两个脚本都跑一下：</p><p>传统型栅栏密码</p><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs dust"><span class="xml">fhetlehhafaiglvn</span><span class="hljs-template-variable">&#123;aekwgtwe&#125;</span><span class="xml"></span><br><span class="xml">feiewlltnheaahkatggewvh&#125;</span><span class="hljs-template-variable">&#123;f</span><br><span class="hljs-template-variable">fvtae&#123;eklehghwfwati&#125;</span><span class="xml">aelghn</span><br><span class="xml">fgeiwevhl&#125;l</span><span class="hljs-template-variable">&#123;tnheeaawhkatfg</span><br><span class="hljs-template-variable">fawen&#125;</span><span class="xml">egthalvefkh</span><span class="hljs-template-variable">&#123;higaetlw</span><br><span class="hljs-template-variable">fa&#123;ehnweaehfa&#125;</span><span class="xml">lgwtikhvtelg</span><br><span class="xml">fa</span><span class="hljs-template-variable">&#123;ehnweaehfa&#125;</span><span class="xml">lgwtikhvtelg</span><br><span class="xml">fhgeeeiaweavwhhlk&#125;la</span><span class="hljs-template-variable">&#123;ttfng</span><br><span class="hljs-template-variable">fhgeeeiaweavwhhlk&#125;</span><span class="xml">la</span><span class="hljs-template-variable">&#123;ttfng</span><br><span class="hljs-template-variable">fhgeeeiaweavwhhlk&#125;</span><span class="xml">la</span><span class="hljs-template-variable">&#123;ttfng</span><br><span class="hljs-template-variable">fhgeeeiaweavwhhlk&#125;</span><span class="xml">la</span><span class="hljs-template-variable">&#123;ttfng</span><br><span class="hljs-template-variable">flag&#123;wethinkwehavetheflag&#125;</span><span class="xml"></span><br><span class="xml">flag</span><span class="hljs-template-variable">&#123;wethinkwehavetheflag&#125;</span><span class="xml"></span><br><span class="xml">flag</span><span class="hljs-template-variable">&#123;wethinkwehavetheflag&#125;</span><span class="xml"></span><br><span class="xml">flag</span><span class="hljs-template-variable">&#123;wethinkwehavetheflag&#125;</span><span class="xml"></span><br><span class="xml">flag</span><span class="hljs-template-variable">&#123;wethinkwehavetheflag&#125;</span><span class="xml"></span><br><span class="xml">flag</span><span class="hljs-template-variable">&#123;wethinkwehavetheflag&#125;</span><span class="xml"></span><br><span class="xml">flag</span><span class="hljs-template-variable">&#123;wethinkwehavetheflag&#125;</span><br></code></pre></td></tr></table></figure><p>W型栅栏密码</p><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs dust"><span class="xml">fhetlehhafaiglvn</span><span class="hljs-template-variable">&#123;aekwgtwe&#125;</span><span class="xml"></span><br><span class="xml">fvn</span><span class="hljs-template-variable">&#123;eeawltkehhgtaewhaf&#125;</span><span class="xml">igl</span><br><span class="xml">fatkegevhgf</span><span class="hljs-template-variable">&#123;leiwlwhtn&#125;</span><span class="xml">aeah</span><br><span class="xml">fatfgieaeghlwntvl</span><span class="hljs-template-variable">&#123;ea&#125;</span><span class="xml">khehw</span><br><span class="xml">fh</span><span class="hljs-template-variable">&#123;higlteaeawenwahtglvefk&#125;</span><span class="xml"></span><br><span class="xml">fh</span><span class="hljs-template-variable">&#123;ehnwafheaeawtik&#125;</span><span class="xml">gletglv</span><br><span class="xml">fla</span><span class="hljs-template-variable">&#123;ehnwafhegheavwtik&#125;</span><span class="xml">glet</span><br><span class="xml">fla</span><span class="hljs-template-variable">&#123;ttfnwaieeegheavwhhlk&#125;</span><span class="xml">g</span><br><span class="xml">fla</span><span class="hljs-template-variable">&#123;ttfng&#125;</span><span class="xml">waieeegheavwhhlk</span><br><span class="xml">fla</span><span class="hljs-template-variable">&#123;ttflag&#125;</span><span class="xml">wknieeegheavwhh</span><br><span class="xml">fla</span><span class="hljs-template-variable">&#123;theflag&#125;</span><span class="xml">wknihteegheavw</span><br><span class="xml">flavetheflag&#125;wknihtew</span><span class="hljs-template-variable">&#123;ghea</span><br><span class="hljs-template-variable">fehavetheflag&#125;</span><span class="xml">wknihtew</span><span class="hljs-template-variable">&#123;gal</span><br><span class="hljs-template-variable">felhavetheflag&#125;</span><span class="xml">wknihtew</span><span class="hljs-template-variable">&#123;ga</span><br><span class="hljs-template-variable">felhaavetheflag&#125;</span><span class="xml">wknihtew</span><span class="hljs-template-variable">&#123;g</span><br><span class="hljs-template-variable">felhaagvetheflag&#125;</span><span class="xml">wknihtew</span><span class="hljs-template-variable">&#123;</span><br><span class="hljs-template-variable">felhaagv&#123;etheflag&#125;</span><span class="xml">wknihtew</span><br><span class="xml">felhaagv</span><span class="hljs-template-variable">&#123;ewtheflag&#125;</span><span class="xml">wknihte</span><br></code></pre></td></tr></table></figure><p>在跑出来的数据中寻找有关flag的相关信息，经查找发现flag数据是：flag{wethinkwehavetheflag}</p><p>故本题的flag就是flag{wethinkwehavetheflag}</p><p>题目主要考察栅栏密码，签到题。</p><p>本题的解题脚本代码还是扔出来一下吧：</p><figure class="highlight sas"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs sas">def decrype(cipher,<span class="hljs-meta">key</span>):<br>    cipher_len = l<span class="hljs-meta">en(</span>cipher)<br>    <span class="hljs-meta">if</span> cipher_len<span class="hljs-name">%key</span> == 0:<br>        <span class="hljs-meta">key</span> = cipher_len / <span class="hljs-meta">key</span><br>    <span class="hljs-meta">else</span>:<br>        <span class="hljs-meta">key</span> = cipher_len / <span class="hljs-meta">key</span> + 1<br>    result = &#123;<span class="hljs-meta">x</span>:<span class="hljs-string">&#x27;&#x27;</span> for <span class="hljs-meta">x</span> <span class="hljs-meta">in</span><span class="hljs-meta"> range(</span><span class="hljs-meta">key</span>)&#125;<br>    for i <span class="hljs-meta">in</span><span class="hljs-meta"> range(</span>cipher_len):<br>        a = i<span class="hljs-name">%key</span>;<br>        result.u<span class="hljs-meta">pdate(</span>&#123;a:result[a]+cipher[i]&#125;)<br>    plainer=<span class="hljs-string">&quot;&quot;</span><br>    for i <span class="hljs-meta">in</span><span class="hljs-meta"> range(</span><span class="hljs-meta">key</span>):<br>        plainer = plainer + result[i]<br>    print plainer<br><br>cipher=<span class="hljs-string">&quot;felhaagv&#123;ewtehtehfilnakgw&#125;&quot;</span><br>for n <span class="hljs-meta">in</span><span class="hljs-meta"> range(</span>2,20):<br>    decrype(cipher,n)<br></code></pre></td></tr></table></figure><h2 id="RSA"><a href="#RSA" class="headerlink" title="RSA"></a>RSA</h2><p>看题目应该是主要考察RSA非对称加密算法的问题，密码学核心考察的问题。</p><blockquote><p>RSA加密算法的详细介绍，在上一篇XCTF CRYPTO的WP中有提到，具体内容可以访问上一篇：</p><p><a href="http://zkinghar.top/?p=463">XCTF-CRYPTO-新手区 writeup</a></p></blockquote><p>点开题目描述：</p><p><img src="post_6.assets/image-91.png" alt="img">题目描述</p><p>没有太多有用的信息，一如既往</p><p>下载附件，并查看附件：</p><p><img src="post_6.assets/image-92.png" alt="img">题目描述</p><p>应该是比较简单的RSA题目，这里就是求解一下逆元。</p><p>这里写一个脚本进行求解：（使用到了gmpy2库）</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs stylus">import gmpy2<br><br><span class="hljs-selector-tag">p</span> = <span class="hljs-number">473398607161</span><br><span class="hljs-selector-tag">q</span> = <span class="hljs-number">4511491</span><br>n = p*<span class="hljs-selector-tag">q</span><br>e = <span class="hljs-number">17</span><br><br>ni = <span class="hljs-number">0</span><br><span class="hljs-function"><span class="hljs-title">if</span><span class="hljs-params">(gmpy2.is_prime(n)</span></span>):<br>    ni = n-<span class="hljs-number">1</span><br><span class="hljs-keyword">else</span>:<br>    ni = (p-<span class="hljs-number">1</span>)*(q-<span class="hljs-number">1</span>)<br><br>d = gmpy2<span class="hljs-selector-class">.invert</span>(e,ni)<br><span class="hljs-function"><span class="hljs-title">print</span><span class="hljs-params">(d)</span></span><br></code></pre></td></tr></table></figure><p>执行脚本，得到运算出的d：125631357777427553</p><p>故flag是flag{125631357777427553}</p><p>本题主要考察RSA加密算法的简单应用，简单题。</p><h2 id="丢失的MD5"><a href="#丢失的MD5" class="headerlink" title="丢失的MD5"></a>丢失的MD5</h2><p>这道题目，应该是和MD5相关</p><p>点开题目描述：</p><p><img src="post_6.assets/image-93.png" alt="img">题目描述</p><p>一如既往，没有什么东西</p><p>下载附件，查看附件内容：</p><p><img src="post_6.assets/image-94.png" alt="img">附件内容</p><p>发现是一个python文件，尝试执行一下这个python代码</p><p>获得一段数据：e9032994dabac08080091151380478a2</p><p>这段数据是不是flag呢？</p><p>康一康源代码吧：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs css">import hashlib<br>for <span class="hljs-selector-tag">i</span> in range(<span class="hljs-number">32</span>,<span class="hljs-number">127</span>):<br>    for j in <span class="hljs-built_in">range</span>(<span class="hljs-number">32</span>,<span class="hljs-number">127</span>):<br>        for k in <span class="hljs-built_in">range</span>(<span class="hljs-number">32</span>,<span class="hljs-number">127</span>):<br>            m=hashlib.<span class="hljs-built_in">md5</span>()<br>            m.<span class="hljs-built_in">update</span>(<span class="hljs-string">&#x27;TASC&#x27;</span>+<span class="hljs-built_in">chr</span>(i)+<span class="hljs-string">&#x27;O3RJMV&#x27;</span>+<span class="hljs-built_in">chr</span>(j)+<span class="hljs-string">&#x27;WDJKX&#x27;</span>+<span class="hljs-built_in">chr</span>(k)+<span class="hljs-string">&#x27;ZM&#x27;</span>)<br>            des=m.<span class="hljs-built_in">hexdigest</span>()<br>            if <span class="hljs-string">&#x27;e9032&#x27;</span> in des and <span class="hljs-string">&#x27;da&#x27;</span> in des and <span class="hljs-string">&#x27;911513&#x27;</span> in des:<br>                print des<br></code></pre></td></tr></table></figure><p>源代码中找不到有关flag的相关信息，（这题好难呀），那flag很可能就是python的运行结果</p><p>尝试加工一下运行数据：flag{e9032994dabac08080091151380478a2}</p><p>尝试提交一下flag，发现成功了（这题真简单）</p><p>本题考察python2代码的相关知识，签到题。（谁能想到运行结果就是flag呢？）</p><h2 id="Alice与Bob"><a href="#Alice与Bob" class="headerlink" title="Alice与Bob"></a>Alice与Bob</h2><p>Alice和Bob是密码学中经常使用来进行密码描述的人物名称，所以这道题目可能是加密相关。不过，也推断不出更多的信息。</p><p>点开题目描述：</p><p><img src="post_6.assets/image-95.png" alt="img">题目描述</p><p>题目描述终于是有用了，看样子，这道题目也是一道签到题目。</p><p>将题目描述进行提炼即可解密：</p><ol><li>98554799767,请分解为两个素数</li><li>分解后，小的放前面，大的放后面，合成一个新的数字</li><li>进行md5的32位小写哈希，提交答案</li><li>得到的 flag 请包上 flag{} 提交</li></ol><p>根据步骤一步一步的来就好</p><p>首先需要进行大数分解，这里使用sagemath进行大数分解：</p><p><img src="post_6.assets/image-97.png" alt="img"></p><p>得到两个素数101999和966233</p><p>然后进行数字组合，小的放前面，大的放后面，即101999966233</p><p>然后进行md5加密，这里写一个简单的脚本进行MD5加密（对脚本的热爱）：</p><figure class="highlight nix"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs nix"><span class="hljs-built_in">import</span> hashlib<br><span class="hljs-attr">plainer</span> = <span class="hljs-string">&quot;101999966233&quot;</span><br><span class="hljs-attr">m</span> = hashlib.md5()<br>m.update(plainer)<br><span class="hljs-attr">cipher</span> = m.hexdigest()<br><br>print cipher<br></code></pre></td></tr></table></figure><p>执行脚本，得到md5加密的结果：d450209323a847c8d01c6be47c81811a</p><p>对MD5的加密结果进行修饰：flag{d450209323a847c8d01c6be47c81811a}</p><p>故flag就是flag{d450209323a847c8d01c6be47c81811a}</p><p>题目主要考察md5加密和大数分解，签到题</p><h2 id="rsarsa"><a href="#rsarsa" class="headerlink" title="rsarsa"></a>rsarsa</h2><p>看题目应该也是考察RSA加密算法的题目</p><p>点开题目描述：</p><p><img src="post_6.assets/image-98.png" alt="img">题目描述</p><p>没有什么有用的信息，也只是告诉了提交flag的数据格式</p><p>下载附件，查看附件内容：</p><p><img src="post_6.assets/image-99.png" alt="img">附件内容</p><p>应该是RSA数学计算的题目类型</p><p>提炼出附件内容中给到的重要数据：</p><p>p = 9648423029010515676590551740010426534945737639235739800643989352039852507298491399561035009163427050370107570733633350911691280297777160200625281665378483<br>q = 11874843837980297032092405848653656852760910154543380907650040190704283358909208578251063047732443992230647903887510065547947313543299303261986053486569407<br>e = 65537<br>c = 83208298995174604174773590298203639360540024871256126892889661345742403314929861939100492666605647316646576486526217457006376842280869728581726746401583705899941768214138742259689334840735633553053887641847651173776251820293087212885670180367406807406765923638973161375817392737747832762751690104423869019034</p><p>这里使用一个脚本来解决问题：</p><figure class="highlight nix"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs nix"><span class="hljs-built_in">import</span> gmpy2<br><br><span class="hljs-attr">p</span> = <span class="hljs-number">9648423029010515676590551740010426534945737639235739800643989352039852507298491399561035009163427050370107570733633350911691280297777160200625281665378483</span><br><span class="hljs-attr">q</span> = <span class="hljs-number">11874843837980297032092405848653656852760910154543380907650040190704283358909208578251063047732443992230647903887510065547947313543299303261986053486569407</span><br><span class="hljs-attr">e</span> = <span class="hljs-number">65537</span><br><span class="hljs-attr">c</span> = <span class="hljs-number">83208298995174604174773590298203639360540024871256126892889661345742403314929861939100492666605647316646576486526217457006376842280869728581726746401583705899941768214138742259689334840735633553053887641847651173776251820293087212885670180367406807406765923638973161375817392737747832762751690104423869019034</span><br><br><span class="hljs-attr">n</span> = p*q<br><span class="hljs-keyword">if</span>(gmpy2.is_prime(n)):<br>    <span class="hljs-attr">ni</span> = n -<span class="hljs-number">1</span><br><span class="hljs-keyword">else</span>:<br>    <span class="hljs-attr">ni</span> = (p-<span class="hljs-number">1</span>)*(q-<span class="hljs-number">1</span>)<br><br><span class="hljs-attr">d</span> = gmpy2.invert(e,ni)<br><span class="hljs-attr">m</span> = pow(c,d,n)<br><br>print(m)<br></code></pre></td></tr></table></figure><p>运行一下脚本，得到数据：5577446633554466577768879988</p><p>对得到的数据进行修饰：flag{5577446633554466577768879988}</p><p>故flag就是flag{5577446633554466577768879988}</p><p>本题主要考察RSA加密算法相关知识，简单题</p><h2 id="大帝的密码武器"><a href="#大帝的密码武器" class="headerlink" title="大帝的密码武器"></a>大帝的密码武器</h2><p>看到题目，感觉有点意思，但是暂时联想不到有用的信息</p><p>点开题目描述：</p><p><img src="post_6.assets/image-100.png" alt="img"></p><p>一如既往，题目描述不能给到太多的信息，仅仅只给到了提交flag的数据格式</p><p>下载附件：</p><p><img src="post_6.assets/image-101.png" alt="img">附件</p><p>附件是个zip文件，无法打开，尝试修改文件扩展名为zip：</p><p><img src="post_6.assets/image-102.png" alt="img"></p><p>打开zip文件：</p><p><img src="post_6.assets/image-103.png" alt="img"></p><p>发现有两个文件，依次打开两个文件：</p><p><img src="post_6.assets/image-104.png" alt="img">附件内容</p><p>一个题目tip信息，一个需要进行解密的密文</p><p>题目tip如下：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs">公元前一百年，在罗马出生了一位对世界影响巨大的人物，他生前是罗马三巨头之一。他率先使用了一种简单的加密函，因此这种加密方法以他的名字命名。<br> 以下密文被解开后可以获得一个有意义的单词：FRPHEVGL<br> 你可以用这个相同的加密向量加密附件中的密文，作为答案进行提交。<br></code></pre></td></tr></table></figure><p>根据描述，罗马三巨头应该自然而然就联想到了凯撒加密。</p><p>这里先使用一个脚本解决位移向量问题：</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs stylus">dict_list = <span class="hljs-selector-attr">[]</span><br><span class="hljs-keyword">for</span> <span class="hljs-selector-tag">i</span> <span class="hljs-keyword">in</span> range(<span class="hljs-number">26</span>):<br>    dict_list<span class="hljs-selector-class">.append</span>(chr(ord(<span class="hljs-string">&#x27;a&#x27;</span>)+i))<br><br>cipher = <span class="hljs-string">&quot;FRPHEVGL&quot;</span><span class="hljs-selector-class">.lower</span>()<br><br><span class="hljs-keyword">for</span> n <span class="hljs-keyword">in</span> range(<span class="hljs-number">26</span>):<br>    plainer = <span class="hljs-string">&quot;&quot;</span><br>    <span class="hljs-keyword">for</span> <span class="hljs-selector-tag">i</span> <span class="hljs-keyword">in</span> cipher:<br>        <span class="hljs-keyword">if</span> <span class="hljs-selector-tag">i</span> <span class="hljs-keyword">in</span> dict_list:<br>            plainer += dict_list<span class="hljs-selector-attr">[(dict_list.index(i)-n)%26]</span><br>        <span class="hljs-keyword">else</span>:<br>            plainer += <span class="hljs-selector-tag">i</span><br><br>    print(plainer+<span class="hljs-string">&quot; index:&quot;</span>+str(n))<br></code></pre></td></tr></table></figure><p>执行脚本，得到数据：</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">frphevgl <span class="hljs-keyword">index</span>:<span class="hljs-number">0</span><br>eqogdufk <span class="hljs-keyword">index</span>:<span class="hljs-number">1</span><br>dpnfctej <span class="hljs-keyword">index</span>:<span class="hljs-number">2</span><br>comebsdi <span class="hljs-keyword">index</span>:<span class="hljs-number">3</span><br>bnldarch <span class="hljs-keyword">index</span>:<span class="hljs-number">4</span><br>amkczqbg <span class="hljs-keyword">index</span>:<span class="hljs-number">5</span><br>zljbypaf <span class="hljs-keyword">index</span>:<span class="hljs-number">6</span><br>ykiaxoze <span class="hljs-keyword">index</span>:<span class="hljs-number">7</span><br>xjhzwnyd <span class="hljs-keyword">index</span>:<span class="hljs-number">8</span><br>wigyvmxc <span class="hljs-keyword">index</span>:<span class="hljs-number">9</span><br>vhfxulwb <span class="hljs-keyword">index</span>:<span class="hljs-number">10</span><br>ugewtkva <span class="hljs-keyword">index</span>:<span class="hljs-number">11</span><br>tfdvsjuz <span class="hljs-keyword">index</span>:<span class="hljs-number">12</span><br><span class="hljs-keyword">security</span> <span class="hljs-keyword">index</span>:<span class="hljs-number">13</span><br>rdbtqhsx <span class="hljs-keyword">index</span>:<span class="hljs-number">14</span><br>qcaspgrw <span class="hljs-keyword">index</span>:<span class="hljs-number">15</span><br>pbzrofqv <span class="hljs-keyword">index</span>:<span class="hljs-number">16</span><br>oayqnepu <span class="hljs-keyword">index</span>:<span class="hljs-number">17</span><br>nzxpmdot <span class="hljs-keyword">index</span>:<span class="hljs-number">18</span><br>mywolcns <span class="hljs-keyword">index</span>:<span class="hljs-number">19</span><br>lxvnkbmr <span class="hljs-keyword">index</span>:<span class="hljs-number">20</span><br>kwumjalq <span class="hljs-keyword">index</span>:<span class="hljs-number">21</span><br>jvtlizkp <span class="hljs-keyword">index</span>:<span class="hljs-number">22</span><br>iuskhyjo <span class="hljs-keyword">index</span>:<span class="hljs-number">23</span><br>htrjgxin <span class="hljs-keyword">index</span>:<span class="hljs-number">24</span><br>gsqifwhm <span class="hljs-keyword">index</span>:<span class="hljs-number">25</span><br></code></pre></td></tr></table></figure><p>发现位移13是一个有意义的单词：<code>security index:13</code> </p><p>再写一个小脚本求解密文：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs python">cipher = <span class="hljs-string">&quot;ComeChina&quot;</span>.lower()<br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">caesar</span>(<span class="hljs-params">n,cipher</span>):</span><br>    dict_list = []<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">26</span>):<br>        dict_list.append(<span class="hljs-built_in">chr</span>(<span class="hljs-built_in">ord</span>(<span class="hljs-string">&#x27;a&#x27;</span>)+i))<br>    plainer = <span class="hljs-string">&quot;&quot;</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> cipher:<br>        <span class="hljs-keyword">if</span> i <span class="hljs-keyword">in</span> dict_list:<br>            plainer += dict_list[(dict_list.index(i)-n)%<span class="hljs-number">26</span>]<br>        <span class="hljs-keyword">else</span>:<br>            plainer += i<br><br>    <span class="hljs-keyword">return</span> plainer<br><br><span class="hljs-built_in">print</span> caesar(<span class="hljs-number">13</span>,cipher)<br></code></pre></td></tr></table></figure><p>执行脚本，获得数据：pbzrpuvan</p><p>对得到的数据进行修饰：flag{pbzrpuvan}</p><p>故flag就是flag{pbzrpuvan}</p><p>本题主要考察Caesar加密的相关知识，简单题</p><h2 id="Windows系统密码"><a href="#Windows系统密码" class="headerlink" title="Windows系统密码"></a>Windows系统密码</h2><p>Windows系统密码，根据本菜鸡的知识Windows密码也是使用hash的方式进行加密的，所以本题应该也是在考察hash密码的破解。</p><p>点开题目描述：</p><p><img src="post_6.assets/image-105.png" alt="img">题目描述</p><p>一如既往，没有什么有用的信息</p><p>下载附件，查看附件内容：</p><p><img src="post_6.assets/image-106.png" alt="img">附件内容</p><p>附件给出了4对哈希值：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">Administrator</span>:<span class="hljs-number">500</span>:aad<span class="hljs-number">3</span>b<span class="hljs-number">435</span>b<span class="hljs-number">51404</span>eeaad<span class="hljs-number">3</span>b<span class="hljs-number">435</span>b<span class="hljs-number">51404</span>ee:<span class="hljs-number">31</span>d<span class="hljs-number">6</span>cfe<span class="hljs-number">0</span>d<span class="hljs-number">16</span>ae<span class="hljs-number">931</span>b<span class="hljs-number">73</span>c<span class="hljs-number">59</span>d<span class="hljs-number">7</span>e<span class="hljs-number">0</span>c<span class="hljs-number">089</span>c<span class="hljs-number">0</span>:::<br> <span class="hljs-attribute">ctf</span>:<span class="hljs-number">1002</span>:<span class="hljs-number">06</span>af<span class="hljs-number">9108</span>f<span class="hljs-number">2</span>e<span class="hljs-number">1</span>fecf<span class="hljs-number">144</span>e<span class="hljs-number">2</span>e<span class="hljs-number">8</span>adef<span class="hljs-number">09</span>efd:a<span class="hljs-number">7</span>fcb<span class="hljs-number">22</span>a<span class="hljs-number">88038</span>f<span class="hljs-number">35</span>a<span class="hljs-number">8</span>f<span class="hljs-number">39</span>d<span class="hljs-number">503</span>e<span class="hljs-number">7</span>f<span class="hljs-number">0062</span>:::<br> <span class="hljs-attribute">Guest</span>:<span class="hljs-number">501</span>:aad<span class="hljs-number">3</span>b<span class="hljs-number">435</span>b<span class="hljs-number">51404</span>eeaad<span class="hljs-number">3</span>b<span class="hljs-number">435</span>b<span class="hljs-number">51404</span>ee:<span class="hljs-number">31</span>d<span class="hljs-number">6</span>cfe<span class="hljs-number">0</span>d<span class="hljs-number">16</span>ae<span class="hljs-number">931</span>b<span class="hljs-number">73</span>c<span class="hljs-number">59</span>d<span class="hljs-number">7</span>e<span class="hljs-number">0</span>c<span class="hljs-number">089</span>c<span class="hljs-number">0</span>:::<br> <span class="hljs-attribute">SUPPORT_388945a0</span>:<span class="hljs-number">1001</span>:aad<span class="hljs-number">3</span>b<span class="hljs-number">435</span>b<span class="hljs-number">51404</span>eeaad<span class="hljs-number">3</span>b<span class="hljs-number">435</span>b<span class="hljs-number">51404</span>ee:bef<span class="hljs-number">14</span>eee<span class="hljs-number">40</span>dffbc<span class="hljs-number">345</span>eeb<span class="hljs-number">3</span>f<span class="hljs-number">58</span>e<span class="hljs-number">290</span>d<span class="hljs-number">56</span>:::<br></code></pre></td></tr></table></figure><p>这里解密去<a href="https://cmd5.com/">cmd5</a>网站进行解密，经过反复尝试发现只有</p><p>a7fcb22a88038f35a8f39d503e7f0062可以解密出hash数值：</p><p><img src="post_6.assets/image-107.png" alt="img"></p><p>hash解密结果就是：good-luck</p><p>对hash解密结果进行修饰：flag{good-luck}</p><p>故flag就是flag{good-luck}</p><p>本题主要考察Windows系统的数据加密方式，简单题</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ol><li><a href="https://wiwiki.kfd.me/wiki/MD5">MD5-维基百科</a></li><li><a href="https://wiwiki.kfd.me/wiki/%E7%99%BE%E5%88%86%E5%8F%B7%E7%BC%96%E7%A0%81#%E5%AF%B9%E6%9C%AA%E4%BF%9D%E7%95%99%E5%AD%97%E7%AC%A6%E7%9A%84%E7%99%BE%E5%88%86%E5%8F%B7%E7%BC%96%E7%A0%81">百分号编码-维基百科</a></li><li><a href="https://wiwiki.kfd.me/wiki/%E7%A4%BE%E4%BC%9A%E5%B7%A5%E7%A8%8B%E5%AD%A6">社会工程学-维基百科</a></li><li><a href="https://wiwiki.kfd.me/wiki/%E4%B8%B2%E6%B5%81%E5%8A%A0%E5%AF%86%E6%B3%95">流密码-维基百科</a></li><li><a href="https://zhuanlan.kanxue.com/article-391.htm">Rabbit流密码</a></li><li>[张振广,胡予濮,王璐.流密码Rabbit的安全性分析<a href="https://kns.cnki.net/kcms/detail/detail.aspx?dbcode=CJFD&dbname=CJFD2011&filename=JSJA201102025&v=m%25mmd2BEiEfT6K6g4XiqkBrHZV8%25mmd2BQ3%25mmd2FWgalODChICHN0Kg3Z7tvJfyIonq%25mmd2BnnJbBSP3Jb">J].计算机科学,2011,38(02):100-102.</a></li></ol><p>BUUCTF前面的题目偏向简单题目和签到题目，大多数都在考察古典密码，对称密码的相关知识。</p><p>本期wp分享到此为止，有时间再来喝杯茶呀！</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title></title>
    <link href="/2021/06/21/post_5/"/>
    <url>/2021/06/21/post_5/</url>
    
    <content type="html"><![CDATA[<hr><h2 id="title-XCTF-CRYPTO-新手区-writeup"><a href="#title-XCTF-CRYPTO-新手区-writeup" class="headerlink" title="title:XCTF-CRYPTO-新手区 writeup"></a>title:XCTF-CRYPTO-新手区 writeup</h2><p>这次又是XCTF平台，没错，我又来无聊谈谈解题了</p><p>首先先来一张XCTF的首页图片，来开启本次的writeup文章：</p><p><img src="post_5.assets/image-86.png" alt="image-86"></p><p><img src="http://106.15.251.98/wp-content/uploads/2021/03/image-86-1024x634.png" alt="img">xctf首页</p><p>这次我们要搞哪些题目的思路呢？这次还是新手区，不过是不一样的新手局，这回盘一盘密码学。</p><p><img src="post_5.assets/image-87.png" alt="image-87"></p><p><img src="http://106.15.251.98/wp-content/uploads/2021/03/image-87-1024x307.png" alt="img">crypto新手区题目</p><p>题目数量不变，依然是12道题目：</p><ul><li>base64</li><li>Caesar</li><li>Morse</li><li>幂数加密</li><li>Railfence</li><li>不仅仅是Morse</li><li>混合编码</li><li>easy_RSA</li><li>easychallenge</li><li>转轮机加密</li><li>Normal_RSA</li><li>esay_ECC</li></ul><p>在开始进行密码学的题目问题思路分析的开始之前，首先进行一部分知识的了解。</p><p>密码学的CTF题目通常都是以附件形式来进行考察的。不像网页需要进入到平台设定的docker靶机中</p><p>CTF中密码学题目目前的趋势是越来越难，而且分值越来越高。密码学的题目往往分为编码题目和密码学题目，而密码学题目又会分为古典密码学题目和现代密码学题目。</p><p>密码学早在公元前400多年就已经产生，人类使用密码的历史几乎与使用文字的时间一样长，密码学的发展大致可以分为 3 个阶段: 1949 年之前的古典密码学阶段; 1949 年至 1975 年密码学成为科学的分支; 1976 年以后对称密钥密码算法得到进一步发展，产生了密码学的新方向—公钥密码学。1976 年，W.Diffie 和 M.Hellman 在发表的文章“密码学的新方向”中首次公开提出了公钥密码( Public-key Cryptography) 的概念。公钥密码的提出实现了加密密钥和解密密钥之间的独立，解决了对称密码体制中通信双方必须共享密钥的问题，在密码学界具有划时代的意义。1</p><p>CTF中的编码题目往往会考察一些常用的编码类型，当然也会出现一些比较偏的编码方式进行编码。</p><p>常用的编码方式有：ASCii编码，Base64编码，Bin编码，Hex编码，URL编码以及HTML编码。</p><p>CTF中的古典密码学题目可以通过查找相关的密码学算法来了解与密码学相关内容的更多信息，通过网络方式进行解决，或者获取一些灵感。古典密码学经常会考察最基础的凯撒密码，栅栏密码，或者替换密码。这些古典密码学的处理思路和方式都比较相似，而且网络已经有很多处理这些密码的算法工具来进行加密和解密。</p><p>CTF中的现代密码学题目主要会考察RSA加密算法，ECC加密算法等经典的现代密码学算法。也会有一些新的加密算法题目，这种题目往往需要进行算法分析，通过加密算法的语法逻辑来设计解密算法通过逆元的思维求出明文。</p><p>关于密码学的更多内容，可以访问：<a href="http://eol.sicau.edu.cn:8080/">http://eol.sicau.edu.cn:8080/</a> 来了解更多密码学相关的内容。</p><p>下面就开始本回的题目！</p><h2 id="base64"><a href="#base64" class="headerlink" title="base64"></a>base64</h2><p>看到这道题目，猜想这道题目可能是考察base64编码方式的密码学题目</p><p>进入道题目页面，看看是否可以得到一点tip：</p><p><img src="post_5.assets/image.png" alt="img">base64题目</p><p>没有什么特别的tip，只是给题目一个情景化的描述，没有太多有用信息的描述。</p><p>直接下载附件内容，并打开附件文件进行查看：</p><p><img src="post_5.assets/image-1-1024x120.png" alt="img">附件文件</p><p>文件内容有一段字符型文字：Y3liZXJwZWFjZXtXZWxjb21lX3RvX25ld19Xb3JsZCF9</p><p>根据题目的内容，尝试使用一下base64进行解码，可以使用在线的解码工具，也可以使用python脚本进行解码。这里编写简单的python脚本进行解码：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-comment"># python3 脚本</span><br><span class="hljs-attribute">import</span> base<span class="hljs-number">64</span><br><br><span class="hljs-attribute">cipher</span>=&#x27;Y<span class="hljs-number">3</span>liZXJwZWFjZXtXZWxjb<span class="hljs-number">21</span>lX<span class="hljs-number">3</span>RvX<span class="hljs-number">25</span>ld<span class="hljs-number">19</span>Xb<span class="hljs-number">3</span>JsZCF<span class="hljs-number">9</span>&#x27;<br><span class="hljs-attribute">plainer</span>= base<span class="hljs-number">64</span>.b<span class="hljs-number">64</span>decode(cipher)<br><span class="hljs-attribute">print</span>(str(plainer,&#x27;utf-<span class="hljs-number">8</span>&#x27;))<br><span class="hljs-comment"># python2 脚本</span><br><span class="hljs-attribute">import</span> base<span class="hljs-number">64</span><br><br><span class="hljs-attribute">cipher</span>=&#x27;Y<span class="hljs-number">3</span>liZXJwZWFjZXtXZWxjb<span class="hljs-number">21</span>lX<span class="hljs-number">3</span>RvX<span class="hljs-number">25</span>ld<span class="hljs-number">19</span>Xb<span class="hljs-number">3</span>JsZCF<span class="hljs-number">9</span>&#x27;<br><span class="hljs-attribute">plainer</span>= base<span class="hljs-number">64</span>.b<span class="hljs-number">64</span>decode(cipher)<br><span class="hljs-attribute">print</span>(plainer)<br></code></pre></td></tr></table></figure><p>然后运行python脚本进行解码：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">python</span> base<span class="hljs-number">64</span>_decode.py # 这里创建的python<span class="hljs-number">2</span>脚本文件名是base<span class="hljs-number">64</span>_decode.py<br><br><span class="hljs-attribute">python3</span> base<span class="hljs-number">64</span>_decode<span class="hljs-number">3</span>.py # 这里创建的python<span class="hljs-number">3</span>脚本文件名是base<span class="hljs-number">64</span>_decode<span class="hljs-number">3</span>.py<br></code></pre></td></tr></table></figure><p>执行命令后查看执行结果</p><p><img src="post_5.assets/image-2.png" alt="img"></p><p>成功拿到flag数据，这道题目是道签到题。</p><p>这道题目主要考察base64编码知识，没有什么难度，就是一道签到题目。</p><h2 id="Caesar"><a href="#Caesar" class="headerlink" title="Caesar"></a>Caesar</h2><p>看到题目，自然就联系到Caesar cipher，翻译成中文就是凯撒密码。</p><p>所有解决这道题目的关键就是凯撒密码的密码逻辑了</p><p>凯撒密码（英语：Caesar cipher），或称凯撒加密、凯撒变换、变换加密，是一种最简单且最广为人知的加密技术。凯撒密码是一种替换加密技术，明文中的所有字母都在字母表上向后（或向前）按照一个固定数目进行偏移后被替换成密文。例如，当偏移量是3的时候，所有的字母A将被替换成D，B变成E，以此类推。这个加密方法是以罗马共和时期凯撒的名字命名的，据称当年凯撒曾用此方法与其将军们进行联系。2</p><p>点开题目的页面，看看是否有些有用的信息</p><p><img src="post_5.assets/image-3-1024x301.png" alt="img">Caesar题目</p><p>从题目描述中依旧获取不到更多的信息，没有太多有用的信息可以帮助解题</p><p>直接下载附件并进行查看：</p><p><img src="post_5.assets/image-4-1024x134.png" alt="img">附件内容</p><p>附件内容中，只有一段加密文字：oknqdbqmoq{kag_tmhq_xqmdzqp_omqemd_qzodkbfuaz}</p><p>根据题目这应该是凯撒加密算法，可以使用在线的工具进行解密，也可以使用python脚本进行解决，这里使用python脚本进行解密：</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs vim"># python2脚本<br>dict_list = [<span class="hljs-string">&#x27;a&#x27;</span>,<span class="hljs-string">&#x27;b&#x27;</span>,<span class="hljs-string">&#x27;c&#x27;</span>,<span class="hljs-string">&#x27;d&#x27;</span>,<span class="hljs-string">&#x27;e&#x27;</span>,<span class="hljs-string">&#x27;f&#x27;</span>,<span class="hljs-string">&#x27;g&#x27;</span>,<span class="hljs-string">&#x27;h&#x27;</span>,<span class="hljs-string">&#x27;i&#x27;</span>,<span class="hljs-string">&#x27;j&#x27;</span>,<span class="hljs-string">&#x27;k&#x27;</span>,<span class="hljs-string">&#x27;l&#x27;</span>,<span class="hljs-string">&#x27;m&#x27;</span>,<span class="hljs-string">&#x27;n&#x27;</span>,<span class="hljs-string">&#x27;o&#x27;</span>,<span class="hljs-string">&#x27;p&#x27;</span>,<span class="hljs-string">&#x27;q&#x27;</span>,<span class="hljs-string">&#x27;r&#x27;</span>,<span class="hljs-string">&#x27;s&#x27;</span>,<span class="hljs-string">&#x27;t&#x27;</span>,<span class="hljs-string">&#x27;u&#x27;</span>,<span class="hljs-string">&#x27;v&#x27;</span>,<span class="hljs-string">&#x27;w&#x27;</span>,<span class="hljs-string">&#x27;x&#x27;</span>,<span class="hljs-string">&#x27;y&#x27;</span>,<span class="hljs-string">&#x27;z&#x27;</span>]<br>cipher = <span class="hljs-string">&quot;oknqdbqmoq&#123;kag_tmhq_xqmdzqp_omqemd_qzodkbfuaz&#125;&quot;</span><br><span class="hljs-keyword">for</span> <span class="hljs-keyword">j</span> in <span class="hljs-built_in">range</span>(<span class="hljs-number">26</span>):<br>    plainer = <span class="hljs-string">&quot;&quot;</span><br>    <span class="hljs-keyword">for</span> i in cipher:<br>        <span class="hljs-keyword">if</span> i in dict_lis<span class="hljs-variable">t:</span><br>            plainer += dict_list[(dict_list.<span class="hljs-built_in">index</span>(i)-<span class="hljs-keyword">j</span>)%<span class="hljs-number">26</span>]<br><br>        <span class="hljs-keyword">else</span>:<br>            plainer += i<br>    <span class="hljs-keyword">print</span> plainer<br># pyhton3脚本<br>dict_list = [<span class="hljs-string">&#x27;a&#x27;</span>,<span class="hljs-string">&#x27;b&#x27;</span>,<span class="hljs-string">&#x27;c&#x27;</span>,<span class="hljs-string">&#x27;d&#x27;</span>,<span class="hljs-string">&#x27;e&#x27;</span>,<span class="hljs-string">&#x27;f&#x27;</span>,<span class="hljs-string">&#x27;g&#x27;</span>,<span class="hljs-string">&#x27;h&#x27;</span>,<span class="hljs-string">&#x27;i&#x27;</span>,<span class="hljs-string">&#x27;j&#x27;</span>,<span class="hljs-string">&#x27;k&#x27;</span>,<span class="hljs-string">&#x27;l&#x27;</span>,<span class="hljs-string">&#x27;m&#x27;</span>,<span class="hljs-string">&#x27;n&#x27;</span>,<span class="hljs-string">&#x27;o&#x27;</span>,<span class="hljs-string">&#x27;p&#x27;</span>,<span class="hljs-string">&#x27;q&#x27;</span>,<span class="hljs-string">&#x27;r&#x27;</span>,<span class="hljs-string">&#x27;s&#x27;</span>,<span class="hljs-string">&#x27;t&#x27;</span>,<span class="hljs-string">&#x27;u&#x27;</span>,<span class="hljs-string">&#x27;v&#x27;</span>,<span class="hljs-string">&#x27;w&#x27;</span>,<span class="hljs-string">&#x27;x&#x27;</span>,<span class="hljs-string">&#x27;y&#x27;</span>,<span class="hljs-string">&#x27;z&#x27;</span>]<br>cipher = <span class="hljs-string">&quot;oknqdbqmoq&#123;kag_tmhq_xqmdzqp_omqemd_qzodkbfuaz&#125;&quot;</span><br><span class="hljs-keyword">for</span> <span class="hljs-keyword">j</span> in <span class="hljs-built_in">range</span>(<span class="hljs-number">26</span>):<br>    plainer = <span class="hljs-string">&quot;&quot;</span><br>    <span class="hljs-keyword">for</span> i in cipher:<br>        <span class="hljs-keyword">if</span> i in dict_lis<span class="hljs-variable">t:</span><br>            plainer += dict_list[(dict_list.<span class="hljs-built_in">index</span>(i)-<span class="hljs-keyword">j</span>)%<span class="hljs-number">26</span>]<br><br>        <span class="hljs-keyword">else</span>:<br>            plainer += i<br>    <span class="hljs-keyword">print</span>(plainer)<br></code></pre></td></tr></table></figure><p>这道题目的python2和python3脚本差别不大，虽然密码学的大多数题目还是推荐使用python2进行编写，但是对于使用sagemath的密码学题目，python3还是比较适合。下面运行python脚本：</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs vim"># python2 <br><span class="hljs-keyword">python</span> Caesar_decode.<span class="hljs-keyword">py</span><br># <span class="hljs-keyword">python3</span><br><span class="hljs-keyword">python3</span> Caesar_decode3.<span class="hljs-keyword">py</span><br></code></pre></td></tr></table></figure><p>查看终端显示的运行结果：</p><p><img src="post_5.assets/image-5.png" alt="img">运行结果</p><p>从运行结果发现：cyberpeace{you_have_learned_caesar_encryption} 应该是有明显含义的解密的文段，很可能是这道题目的flag。尝试进行提交，发现这段数据就是flag数据。</p><p>这道题目解决，题目没有什么难度，算是签到题。</p><p>题目主要考察凯撒密码的相关知识，非常直接的解密方法，没有什么难度。</p><h2 id="Morse"><a href="#Morse" class="headerlink" title="Morse"></a>Morse</h2><p>看到题目Morse，自然而然便联想到了摩尔斯电码。这道题目有可能是在考察摩尔斯电码。</p><p>点开题目页面，看看题目描述中会有什么有用的信息：</p><p><img src="post_5.assets/image-6-1024x280.png" alt="img">Morse题目</p><p>题目描述依然是大片无用的信息，但是最后提示了提交flag的格式和内容要求。</p><p>直接打开附件并进行查看需要进行解密的内容：</p><p><img src="post_5.assets/image-7-1024x101.png" alt="img">附件内容</p><p>文件内容非常像bin方式的加密，但是考虑到题目Morse，应该是Morse电码方式的加密</p><p>首先，需要了解什么摩尔斯电码：</p><p>摩尔斯电码（英语：Morse code）是一种时通时断的信号代码，通过不同的排列顺序来表达不同的英文字母、数字和标点符号。是由美国人艾尔菲德·维尔与萨缪尔·摩尔斯在1836年发明。3</p><p>摩尔斯电码是一种早期的数字化通信形式，但是它不同于现代只使用0和1两种状态的二进制代码，它的代码包括五种：</p><ol><li>点（·）：1</li><li>划（-）：111</li><li>字符内部的停顿（在点和划之间）：0</li><li>字符之间的停顿：000</li><li>单词之间的停顿：0000000</li></ol><p>根据摩尔斯电码的知识点，这道题目可以使用在线工具进行解密，也可以使用python脚本进行解密。这里使用python脚本进行解密：</p><blockquote><p>这里的密文文段和摩尔斯代码的文段不太一致，需要进行一下代换。这里使用 1 代表 - ，0 代表 ·</p><p>来进行摩尔斯电码的解密算法的设计和编写。</p></blockquote><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><code class="hljs 1c"><span class="hljs-meta"># python2脚本</span><br>dict_list = &#123;<br>             &#x27;01&#x27;:&#x27;a&#x27;,<br>             &#x27;<span class="hljs-number">1000</span>&#x27;:&#x27;b&#x27;,<br>             &#x27;<span class="hljs-number">1010</span>&#x27;:&#x27;c&#x27;,<br>             &#x27;100&#x27;:&#x27;d&#x27;,<br>             &#x27;0&#x27;:&#x27;e&#x27;,<br>             &#x27;<span class="hljs-number">0010</span>&#x27;:&#x27;f&#x27;,<br>             &#x27;110&#x27;:&#x27;g&#x27;,<br>             &#x27;<span class="hljs-number">0000</span>&#x27;:&#x27;h&#x27;,<br>             &#x27;00&#x27;:&#x27;i&#x27;,<br>             &#x27;<span class="hljs-number">0111</span>&#x27;:&#x27;j&#x27;,<br>             &#x27;101&#x27;:&#x27;k&#x27;,<br>             &#x27;<span class="hljs-number">0100</span>&#x27;:&#x27;l&#x27;,<br>             &#x27;11&#x27;:&#x27;m&#x27;,<br>             &#x27;10&#x27;:&#x27;n&#x27;,<br>             &#x27;111&#x27;:&#x27;o&#x27;,<br>             &#x27;<span class="hljs-number">0110</span>&#x27;:&#x27;p&#x27;,<br>             &#x27;<span class="hljs-number">1101</span>&#x27;:&#x27;q&#x27;,<br>             &#x27;010&#x27;:&#x27;r&#x27;,<br>             &#x27;000&#x27;:&#x27;s&#x27;,<br>             &#x27;1&#x27;:&#x27;t&#x27;,<br>             &#x27;001&#x27;:&#x27;u&#x27;,<br>             &#x27;<span class="hljs-number">0001</span>&#x27;:&#x27;v&#x27;,<br>             &#x27;011&#x27;:&#x27;w&#x27;,<br>             &#x27;<span class="hljs-number">1001</span>&#x27;:&#x27;x&#x27;,<br>             &#x27;<span class="hljs-number">1011</span>&#x27;:&#x27;y&#x27;,<br>             &#x27;<span class="hljs-number">1100</span>&#x27;:&#x27;z&#x27;<br>             &#125;<br><br>cipher=<span class="hljs-string">&quot;11 111 010 000 0 1010 111 100 0 00 000 000 111 00 10 1 0 010 0 000 1 00 10 110&quot;</span><br>plainer=<span class="hljs-string">&quot;&quot;</span><br><br>cipher_arr = cipher.split(<span class="hljs-string">&quot; &quot;</span>)<br>for i in cipher_arr:<br>    plainer += dict_list[i]<br><br>print plainer<br><span class="hljs-meta"># python3脚本</span><br>dict_list = &#123;<br>             &#x27;01&#x27;:&#x27;a&#x27;,<br>             &#x27;<span class="hljs-number">1000</span>&#x27;:&#x27;b&#x27;,<br>             &#x27;<span class="hljs-number">1010</span>&#x27;:&#x27;c&#x27;,<br>             &#x27;100&#x27;:&#x27;d&#x27;,<br>             &#x27;0&#x27;:&#x27;e&#x27;,<br>             &#x27;<span class="hljs-number">0010</span>&#x27;:&#x27;f&#x27;,<br>             &#x27;110&#x27;:&#x27;g&#x27;,<br>             &#x27;<span class="hljs-number">0000</span>&#x27;:&#x27;h&#x27;,<br>             &#x27;00&#x27;:&#x27;i&#x27;,<br>             &#x27;<span class="hljs-number">0111</span>&#x27;:&#x27;j&#x27;,<br>             &#x27;101&#x27;:&#x27;k&#x27;,<br>             &#x27;<span class="hljs-number">0100</span>&#x27;:&#x27;l&#x27;,<br>             &#x27;11&#x27;:&#x27;m&#x27;,<br>             &#x27;10&#x27;:&#x27;n&#x27;,<br>             &#x27;111&#x27;:&#x27;o&#x27;,<br>             &#x27;<span class="hljs-number">0110</span>&#x27;:&#x27;p&#x27;,<br>             &#x27;<span class="hljs-number">1101</span>&#x27;:&#x27;q&#x27;,<br>             &#x27;010&#x27;:&#x27;r&#x27;,<br>             &#x27;000&#x27;:&#x27;s&#x27;,<br>             &#x27;1&#x27;:&#x27;t&#x27;,<br>             &#x27;001&#x27;:&#x27;u&#x27;,<br>             &#x27;<span class="hljs-number">0001</span>&#x27;:&#x27;v&#x27;,<br>             &#x27;011&#x27;:&#x27;w&#x27;,<br>             &#x27;<span class="hljs-number">1001</span>&#x27;:&#x27;x&#x27;,<br>             &#x27;<span class="hljs-number">1011</span>&#x27;:&#x27;y&#x27;,<br>             &#x27;<span class="hljs-number">1100</span>&#x27;:&#x27;z&#x27;<br>             &#125;<br><br>cipher=<span class="hljs-string">&quot;11 111 010 000 0 1010 111 100 0 00 000 000 111 00 10 1 0 010 0 000 1 00 10 110&quot;</span><br>plainer=<span class="hljs-string">&quot;&quot;</span><br><br>cipher_arr = cipher.split(<span class="hljs-string">&quot; &quot;</span>)<br>for i in cipher_arr:<br>    plainer += dict_list[i]<br><br>print(plainer)<br></code></pre></td></tr></table></figure><p>这道题目的python2和python3的求解脚本差别也不是非常大，执行脚本后直接查看执行结果：</p><p><img src="post_5.assets/image-8.png" alt="img">执行结果</p><p>发现执行结果是一句有意义的句子，应该就是flag数据了。然后再利用题目描述所说的信息对执行出来的flag数据进行个加帽处理：cyberpeace{morsecodeissointeresting}</p><p>题目解决，题目也是签到题，没有什么难度。</p><p>题目主要考察了摩尔斯电码的解密方法，以及摩尔斯电码相关知识，签到题。</p><h2 id="幂数加密"><a href="#幂数加密" class="headerlink" title="幂数加密"></a>幂数加密</h2><p>看到题目的时候有些懵逼，本菜鸡不太了解什么的是幂数加密，于是只能求助一下搜索引擎。</p><p><img src="post_5.assets/image-9.png" alt="img">二进制幂数加密-百度百科</p><p>好像是一个加密方法，这种加密方法大致逻辑是：</p><ol><li>将明文对应字母序列</li><li>对字母序列进行处理加密</li><li>使用间隔符进行间隔</li><li>获得密文</li></ol><p>现在知道这种加密方法，点开题目的描述看看是否可以获取到更多的信息</p><p><img src="post_5.assets/image-10-1024x284.png" alt="img">幂数加密题目</p><p>题目描述中仅仅告诉了需要提交的flag格式，和flag数据类型。题目描述的其他信息都是无用的信息。</p><p>将附件下载下来并查看附件中的密文信息内容：</p><p><img src="post_5.assets/image-11-1024x69.png" alt="img">附件资料</p><p>发现密文数据不太对劲呀，二进制幂数加密的数据都是01234的形式，这个密文的形式是01248的形式</p><p>于是作为菜鸡的我只能去再次求助于搜索引擎了，查到了云影密码：</p><h3 id="01248云影密码"><a href="#01248云影密码" class="headerlink" title="01248云影密码"></a>01248云影密码</h3><p>原理：有1，2，4，8这四个数字，可以通过加法来用这四个数字表示0-9中的任何一个数字，列如0=28， 也就是0=2+8，同理7=124， 9=18。这样之后再用1-26来表示26个英文字母，就有了密文与明文之间的对应关系。引入0来作为间隔，以免出现混乱。所以云影密码又叫“01248密码”。4</p><p>看来密文是云影密码没错了，由于云影密码是比较少见的密码，而是加密逻辑比较简单，网络上几乎没有什么可用的在线工具。这道题目可以使用手工解密，也可以使用python脚本进行解密。这里使用python脚本进行解密：</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs vim"># python2<br>dict_list = [<span class="hljs-string">&#x27;a&#x27;</span>,<span class="hljs-string">&#x27;b&#x27;</span>,<span class="hljs-string">&#x27;c&#x27;</span>,<span class="hljs-string">&#x27;d&#x27;</span>,<span class="hljs-string">&#x27;e&#x27;</span>,<span class="hljs-string">&#x27;f&#x27;</span>,<span class="hljs-string">&#x27;g&#x27;</span>,<span class="hljs-string">&#x27;h&#x27;</span>,<span class="hljs-string">&#x27;i&#x27;</span>,<span class="hljs-string">&#x27;j&#x27;</span>,<span class="hljs-string">&#x27;k&#x27;</span>,<span class="hljs-string">&#x27;l&#x27;</span>,<span class="hljs-string">&#x27;m&#x27;</span>,<span class="hljs-string">&#x27;n&#x27;</span>,<span class="hljs-string">&#x27;o&#x27;</span>,<span class="hljs-string">&#x27;p&#x27;</span>,<span class="hljs-string">&#x27;q&#x27;</span>,<span class="hljs-string">&#x27;r&#x27;</span>,<span class="hljs-string">&#x27;s&#x27;</span>,<span class="hljs-string">&#x27;t&#x27;</span>,<span class="hljs-string">&#x27;u&#x27;</span>,<span class="hljs-string">&#x27;v&#x27;</span>,<span class="hljs-string">&#x27;w&#x27;</span>,<span class="hljs-string">&#x27;x&#x27;</span>,<span class="hljs-string">&#x27;y&#x27;</span>,<span class="hljs-string">&#x27;z&#x27;</span>]<br><br>cipher=<span class="hljs-string">&quot;8842101220480224404014224202480122&quot;</span><br>cipher_array = cipher.<span class="hljs-keyword">split</span>(<span class="hljs-string">&quot;0&quot;</span>)<br>cipher_arr = []<br>flag = <span class="hljs-string">&quot;&quot;</span><br><br><span class="hljs-keyword">for</span> i in cipher_array:<br>    <span class="hljs-keyword">k</span> = <span class="hljs-number">0</span><br>    <span class="hljs-keyword">for</span> <span class="hljs-keyword">j</span> in <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(i)):<br>        <span class="hljs-keyword">k</span> += <span class="hljs-keyword">int</span>(i[<span class="hljs-keyword">j</span>])<br>    cipher_arr.<span class="hljs-keyword">append</span>(<span class="hljs-keyword">k</span>)<br><span class="hljs-keyword">for</span> <span class="hljs-keyword">m</span> in cipher_arr:<br>    flag += dict_list[<span class="hljs-keyword">m</span>-<span class="hljs-number">1</span>]<br><br><span class="hljs-keyword">print</span> flag<br># <span class="hljs-keyword">python3</span><br>dict_list = [<span class="hljs-string">&#x27;a&#x27;</span>,<span class="hljs-string">&#x27;b&#x27;</span>,<span class="hljs-string">&#x27;c&#x27;</span>,<span class="hljs-string">&#x27;d&#x27;</span>,<span class="hljs-string">&#x27;e&#x27;</span>,<span class="hljs-string">&#x27;f&#x27;</span>,<span class="hljs-string">&#x27;g&#x27;</span>,<span class="hljs-string">&#x27;h&#x27;</span>,<span class="hljs-string">&#x27;i&#x27;</span>,<span class="hljs-string">&#x27;j&#x27;</span>,<span class="hljs-string">&#x27;k&#x27;</span>,<span class="hljs-string">&#x27;l&#x27;</span>,<span class="hljs-string">&#x27;m&#x27;</span>,<span class="hljs-string">&#x27;n&#x27;</span>,<span class="hljs-string">&#x27;o&#x27;</span>,<span class="hljs-string">&#x27;p&#x27;</span>,<span class="hljs-string">&#x27;q&#x27;</span>,<span class="hljs-string">&#x27;r&#x27;</span>,<span class="hljs-string">&#x27;s&#x27;</span>,<span class="hljs-string">&#x27;t&#x27;</span>,<span class="hljs-string">&#x27;u&#x27;</span>,<span class="hljs-string">&#x27;v&#x27;</span>,<span class="hljs-string">&#x27;w&#x27;</span>,<span class="hljs-string">&#x27;x&#x27;</span>,<span class="hljs-string">&#x27;y&#x27;</span>,<span class="hljs-string">&#x27;z&#x27;</span>]<br><br>cipher=<span class="hljs-string">&quot;8842101220480224404014224202480122&quot;</span><br>cipher_array = cipher.<span class="hljs-keyword">split</span>(<span class="hljs-string">&quot;0&quot;</span>)<br>cipher_arr = []<br>flag = <span class="hljs-string">&quot;&quot;</span><br><br><span class="hljs-keyword">for</span> i in cipher_array:<br>    <span class="hljs-keyword">k</span> = <span class="hljs-number">0</span><br>    <span class="hljs-keyword">for</span> <span class="hljs-keyword">j</span> in <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(i)):<br>        <span class="hljs-keyword">k</span> += <span class="hljs-keyword">int</span>(i[<span class="hljs-keyword">j</span>])<br>    cipher_arr.<span class="hljs-keyword">append</span>(<span class="hljs-keyword">k</span>)<br><span class="hljs-keyword">for</span> <span class="hljs-keyword">m</span> in cipher_arr:<br>    flag += dict_list[<span class="hljs-keyword">m</span>-<span class="hljs-number">1</span>]<br><br><span class="hljs-keyword">print</span>(flag)<br></code></pre></td></tr></table></figure><p>执行python脚本并查看终端输出的结果：</p><p><img src="post_5.assets/image-12.png" alt="img"></p><p>获取到明文，然后对明文加个flag数据形式的帽子并进行字母大写：cyberpeace{WELLDONE}</p><p>这道题目解决，题目属于签到题，没有什么难度</p><p>这道题目主要考察幂数加密的知识，（云影密码的设计逻辑其实和幂数加密相似，只是在设计过程进行了修改。）题目难度比较低·，签到题。</p><h2 id="Railfence"><a href="#Railfence" class="headerlink" title="Railfence"></a>Railfence</h2><p>看到题目大致知道考察的是什么密码的加密算法了，题目是栅栏，应该就是栅栏密码的密码知识考察</p><p>什么是栅栏密码呢？</p><p>所谓栅栏密码，就是把要加密的明文分成N个一组，然后把每组的第1个字连起来，形成一段无规律的话。 不过栅栏密码本身有一个潜规则，就是组成栅栏的字母一般不会太多。（一般不超过30个，也就是一、两句话）。加密原理：</p><ol><li>把将要传递的信息中的字母交替排成上下两行。</li><li>再将下面一行字母排在上面一行的后边，从而形成一段密码。5</li></ol><p>栅栏密码大致就是一种分组密码的一种密码算法，便于更好理解栅栏密码，这里有一个例子：</p><p>明文：THE LONGEST DAY MUST HAVE AN END5</p><p>加密：</p><ol><li>把将要传递的信息中的字母交替排成上下两行。<br>T E O G S D Y U T A E N N<br>H L N E T A M S H V A E D</li><li>密文：将下面一行字母排在上面一行的后边。<br>TEOGSDYUTAENN HLNETAMSHVAED</li></ol><p>解密：</p><p>先将密文分为两行</p><p>T E O G S D Y U T A E N N</p><p>H L N E T A M S H V A E D</p><p>再按上下上下的顺序组合成一句话明文：</p><p>THE LONGEST DAY MUST HAVE AN EN</p><p>现在知识也大致了解了，点开题目揭开这道题目的真实面目吧！</p><p><img src="post_5.assets/image-13-1024x266.png" alt="img">Railfence题目</p><p>题目描述中也暗示了是栅栏密码的信息</p><p>于是直接下载附件，看看附件中的描述内容密文究竟是啥样：</p><p><img src="post_5.assets/image-14-1024x120.png" alt="img">附件内容</p><p>密文形式看样子像是解密出来直接就是flag数据。</p><p>这道题目可以使用在线工具进行解密，也可以使用python脚本进行解密。这里还是一如既往，使用python脚本进行解密：（这道题目比较狗，是W型的栅栏密码解密）</p><blockquote><p>栅栏密码有两种类型：一种是传统型栅栏密码，一种是W型栅栏密码，W型栅栏密码比较复杂。</p></blockquote><p>传统型栅栏密码脚本：</p><figure class="highlight sas"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs sas">def decrype(cipher,<span class="hljs-meta">key</span>):<br>    cipher_len = l<span class="hljs-meta">en(</span>cipher)<br>    <span class="hljs-meta">if</span> cipher_len<span class="hljs-name">%key</span> == 0:<br>        <span class="hljs-meta">key</span> = cipher_len / <span class="hljs-meta">key</span><br>    <span class="hljs-meta">else</span>:<br>        <span class="hljs-meta">key</span> = cipher_len / <span class="hljs-meta">key</span> + 1<br>    result = &#123;<span class="hljs-meta">x</span>:<span class="hljs-string">&#x27;&#x27;</span> for <span class="hljs-meta">x</span> <span class="hljs-meta">in</span><span class="hljs-meta"> range(</span><span class="hljs-meta">key</span>)&#125;<br>    for i <span class="hljs-meta">in</span><span class="hljs-meta"> range(</span>cipher_len):<br>        a = i<span class="hljs-name">%key</span>;<br>        result.u<span class="hljs-meta">pdate(</span>&#123;a:result[a]+cipher[i]&#125;)<br>    plainer=<span class="hljs-string">&quot;&quot;</span><br>    for i <span class="hljs-meta">in</span><span class="hljs-meta"> range(</span><span class="hljs-meta">key</span>):<br>        plainer = plainer + result[i]<br>    print plainer<br><br>cipher=<span class="hljs-string">&quot;TEOGSDYUTAENNHLNETAMSHVAED&quot;</span><br>for n <span class="hljs-meta">in</span><span class="hljs-meta"> range(</span>2,10):<br>    decrype(cipher,n)<br></code></pre></td></tr></table></figure><p>W型栅栏密码脚本：</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">def fence(lst, numrails):<br>    fence = [[<span class="hljs-keyword">None</span>] * len(lst) <span class="hljs-keyword">for</span> n <span class="hljs-keyword">in</span> range(numrails)]<br>    rails =list(range(numrails - <span class="hljs-number">1</span>))+ list(range(numrails - <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">-1</span>))<br>    <span class="hljs-keyword">for</span> n, x <span class="hljs-keyword">in</span> enumerate(lst):<br>        fence[rails[n % len(rails)]][n] = x<br>    <span class="hljs-keyword">return</span> [c <span class="hljs-keyword">for</span> rail <span class="hljs-keyword">in</span> fence <span class="hljs-keyword">for</span> c <span class="hljs-keyword">in</span> rail <span class="hljs-keyword">if</span> c <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">None</span>]<br><br>def encode(<span class="hljs-type">text</span>, n):<br>    <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;&#x27;</span>.<span class="hljs-keyword">join</span>(fence(<span class="hljs-type">text</span>, n))<br><br>def decode(<span class="hljs-type">text</span>, n):<br>    rng = range(len(<span class="hljs-type">text</span>))<br>    pos = fence(rng, n)<br>    <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;&#x27;</span>.<span class="hljs-keyword">join</span>(<span class="hljs-type">text</span>[pos.<span class="hljs-keyword">index</span>(n)] <span class="hljs-keyword">for</span> n <span class="hljs-keyword">in</span> rng)<br><br>z = &quot;ccehgyaefnpeoobe&#123;lcirg&#125;epriec_ora_g&quot;<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> range(<span class="hljs-number">2</span>,<span class="hljs-number">10</span>):<br>    y = decode(z,i)<br>    print(y) <br></code></pre></td></tr></table></figure><p>这道题目是W型的栅栏密码，这里使用W型栅栏密码的脚本进行破解：</p><p><img src="post_5.assets/image-15.png" alt="img"></p><p>成功跑出flag数据：cyberpeace{railfence_cipher_gogogo}</p><p>题目解决，这道题目属于简单题目</p><p>题目主要考察对栅栏密码的知识全面性考察，如果知识不全面可能会有一点绕，不容易解出。难度算是简单题目。</p><h2 id="不仅仅是Morse"><a href="#不仅仅是Morse" class="headerlink" title="不仅仅是Morse"></a>不仅仅是Morse</h2><p>看题目应该知道这道题目不是非常简单的样子，应该是一个复合加密的题目，就是涉及多种加密算法的加密。</p><p>点开题目页面，希望可以获取到更多关于题目的tip：</p><p><img src="post_5.assets/image-16-1024x205.png" alt="img">题目页面</p><p>题目描述中有两个重要的tip信息：flag的数据格式和flag是一种食物的单词。对于解题有主要作用的是flag数据是一种食物的单词。</p><p>下面打开附件，进行解密：</p><p><img src="post_5.assets/image-17.png" alt="img">附件内容</p><p>看来是一个摩尔斯电码的加密：</p><p>–/.-/-.–/..–.-/-…/./..–.-/…./.-/…-/./..–.-/.-/-./—/-/…././.-./..–.-/-.././-.-./—/-.././…./…./…./…./.-/.-/.-/.-/.-/-…/.-/.-/-…/-…/-…/.-/.-/-…/-…/.-/.-/.-/.-/.-/.-/.-/.-/-…/.-/.-/-…/.-/-…/.-/.-/.-/.-/.-/.-/.-/-…/-…/.-/-…/.-/.-/.-/-…/-…/.-/.-/.-/-…/-…/.-/.-/-…/.-/.-/.-/.-/-…/.-/-…/.-/.-/-…/.-/.-/.-/-…/-…/.-/-…/.-/.-/.-/-…/.-/.-/.-/-…/.-/.-/-…/.-/-…/-…/.-/.-/-…/-…/-…/.-/-…/.-/.-/.-/-…/.-/-…/.-/-…/-…/.-/.-/.-/-…/-…/.-/-…/.-/.-/.-/-…/.-/.-/-…/.-/.-/-…/.-/.-/.-/.-/-…/-…/.-/-…/-…/.-/.-/-…/-…/.-/.-/-…/.-/.-/-…/.-/.-/.-/-…/.-/.-/-…/.-/.-/-…/.-/.-/-…/.-/-…/.-/.-/-…/-…/.-/-…/.-/.-/.-/.-/-…/-…/.-/-…/.-/.-/-…/-…/.-</p><p>首先先编写一个摩尔斯电码的解密脚本：（当然也可以使用在线的摩尔斯电码解密工具进行解密）</p><figure class="highlight roboconf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs roboconf"><span class="hljs-comment"># python2</span><br>dict_list = &#123;<br>             &#x27;.<span class="hljs-attribute">-&#x27;</span>:&#x27;a&#x27;,<br>             &#x27;-...&#x27;:&#x27;b&#x27;,<br>             &#x27;-<span class="hljs-variable">.-</span>.&#x27;:&#x27;c&#x27;,<br>             &#x27;-..&#x27;:&#x27;d&#x27;,<br>             &#x27;.&#x27;:&#x27;e&#x27;,<br>             &#x27;.<span class="hljs-variable">.-</span>.&#x27;:&#x27;f&#x27;,<br>             &#x27;--.&#x27;:&#x27;g&#x27;,<br>             &#x27;....&#x27;:&#x27;h&#x27;,<br>             &#x27;..&#x27;:&#x27;i&#x27;,<br>             &#x27;<span class="hljs-variable">.---</span>&#x27;:&#x27;j&#x27;,<br>             &#x27;-<span class="hljs-variable">.-</span>&#x27;:&#x27;k&#x27;,<br>             &#x27;<span class="hljs-variable">.-</span>..&#x27;:&#x27;l&#x27;,<br>             &#x27;--&#x27;:&#x27;m&#x27;,<br>             &#x27;-.&#x27;:&#x27;n&#x27;,<br>             &#x27;---&#x27;:&#x27;o&#x27;,<br>             &#x27;<span class="hljs-variable">.--</span>.&#x27;:&#x27;p&#x27;,<br>             &#x27;--<span class="hljs-variable">.-</span>&#x27;:&#x27;q&#x27;,<br>             &#x27;<span class="hljs-variable">.-</span>.&#x27;:&#x27;r&#x27;,<br>             &#x27;...&#x27;:&#x27;s&#x27;,<br>             &#x27;-&#x27;:&#x27;t&#x27;,<br>             &#x27;.<span class="hljs-variable">.-</span>&#x27;:&#x27;u&#x27;,<br>             &#x27;..<span class="hljs-variable">.-</span>&#x27;:&#x27;v&#x27;,<br>             &#x27;<span class="hljs-variable">.--</span>&#x27;:&#x27;w&#x27;,<br>             &#x27;-.<span class="hljs-variable">.-</span>&#x27;:&#x27;x&#x27;,<br>             &#x27;-<span class="hljs-variable">.--</span>&#x27;:&#x27;y&#x27;,<br>             &#x27;--..&#x27;:&#x27;z&#x27;,<br>             &#x27;.<span class="hljs-variable">.--</span><span class="hljs-variable">.-</span>&#x27;:&#x27;_&#x27;<br>             &#125;<br><br>cipher = &quot;--/<span class="hljs-variable">.-</span>/-<span class="hljs-variable">.--</span>/.<span class="hljs-variable">.--</span><span class="hljs-variable">.-</span>/-..././.<span class="hljs-variable">.--</span><span class="hljs-variable">.-</span>/..../<span class="hljs-variable">.-</span>/..<span class="hljs-variable">.-</span>/./.<span class="hljs-variable">.--</span><span class="hljs-variable">.-</span>/<span class="hljs-variable">.-</span>/-./---/-/...././<span class="hljs-variable">.-</span>./.<span class="hljs-variable">.--</span><span class="hljs-variable">.-</span>/-.././-<span class="hljs-variable">.-</span>./---/-.././..../..../..../..../<span class="hljs-variable">.-</span>/<span class="hljs-variable">.-</span>/<span class="hljs-variable">.-</span>/<span class="hljs-variable">.-</span>/<span class="hljs-variable">.-</span>/-.../<span class="hljs-variable">.-</span>/<span class="hljs-variable">.-</span>/-.../-.../-.../<span class="hljs-variable">.-</span>/<span class="hljs-variable">.-</span>/-.../-.../<span class="hljs-variable">.-</span>/<span class="hljs-variable">.-</span>/<span class="hljs-variable">.-</span>/<span class="hljs-variable">.-</span>/<span class="hljs-variable">.-</span>/<span class="hljs-variable">.-</span>/<span class="hljs-variable">.-</span>/<span class="hljs-variable">.-</span>/-.../<span class="hljs-variable">.-</span>/<span class="hljs-variable">.-</span>/-.../<span class="hljs-variable">.-</span>/-.../<span class="hljs-variable">.-</span>/<span class="hljs-variable">.-</span>/<span class="hljs-variable">.-</span>/<span class="hljs-variable">.-</span>/<span class="hljs-variable">.-</span>/<span class="hljs-variable">.-</span>/<span class="hljs-variable">.-</span>/-.../-.../<span class="hljs-variable">.-</span>/-.../<span class="hljs-variable">.-</span>/<span class="hljs-variable">.-</span>/<span class="hljs-variable">.-</span>/-.../-.../<span class="hljs-variable">.-</span>/<span class="hljs-variable">.-</span>/<span class="hljs-variable">.-</span>/-.../-.../<span class="hljs-variable">.-</span>/<span class="hljs-variable">.-</span>/-.../<span class="hljs-variable">.-</span>/<span class="hljs-variable">.-</span>/<span class="hljs-variable">.-</span>/<span class="hljs-variable">.-</span>/-.../<span class="hljs-variable">.-</span>/-.../<span class="hljs-variable">.-</span>/<span class="hljs-variable">.-</span>/-.../<span class="hljs-variable">.-</span>/<span class="hljs-variable">.-</span>/<span class="hljs-variable">.-</span>/-.../-.../<span class="hljs-variable">.-</span>/-.../<span class="hljs-variable">.-</span>/<span class="hljs-variable">.-</span>/<span class="hljs-variable">.-</span>/-.../<span class="hljs-variable">.-</span>/<span class="hljs-variable">.-</span>/<span class="hljs-variable">.-</span>/-.../<span class="hljs-variable">.-</span>/<span class="hljs-variable">.-</span>/-.../<span class="hljs-variable">.-</span>/-.../-.../<span class="hljs-variable">.-</span>/<span class="hljs-variable">.-</span>/-.../-.../-.../<span class="hljs-variable">.-</span>/-.../<span class="hljs-variable">.-</span>/<span class="hljs-variable">.-</span>/<span class="hljs-variable">.-</span>/-.../<span class="hljs-variable">.-</span>/-.../<span class="hljs-variable">.-</span>/-.../-.../<span class="hljs-variable">.-</span>/<span class="hljs-variable">.-</span>/<span class="hljs-variable">.-</span>/-.../-.../<span class="hljs-variable">.-</span>/-.../<span class="hljs-variable">.-</span>/<span class="hljs-variable">.-</span>/<span class="hljs-variable">.-</span>/-.../<span class="hljs-variable">.-</span>/<span class="hljs-variable">.-</span>/-.../<span class="hljs-variable">.-</span>/<span class="hljs-variable">.-</span>/-.../<span class="hljs-variable">.-</span>/<span class="hljs-variable">.-</span>/<span class="hljs-variable">.-</span>/<span class="hljs-variable">.-</span>/-.../-.../<span class="hljs-variable">.-</span>/-.../-.../<span class="hljs-variable">.-</span>/<span class="hljs-variable">.-</span>/-.../-.../<span class="hljs-variable">.-</span>/<span class="hljs-variable">.-</span>/-.../<span class="hljs-variable">.-</span>/<span class="hljs-variable">.-</span>/-.../<span class="hljs-variable">.-</span>/<span class="hljs-variable">.-</span>/<span class="hljs-variable">.-</span>/-.../<span class="hljs-variable">.-</span>/<span class="hljs-variable">.-</span>/-.../<span class="hljs-variable">.-</span>/<span class="hljs-variable">.-</span>/-.../<span class="hljs-variable">.-</span>/<span class="hljs-variable">.-</span>/-.../<span class="hljs-variable">.-</span>/-.../<span class="hljs-variable">.-</span>/<span class="hljs-variable">.-</span>/-.../-.../<span class="hljs-variable">.-</span>/-.../<span class="hljs-variable">.-</span>/<span class="hljs-variable">.-</span>/<span class="hljs-variable">.-</span>/<span class="hljs-variable">.-</span>/-.../-.../<span class="hljs-variable">.-</span>/-.../<span class="hljs-variable">.-</span>/<span class="hljs-variable">.-</span>/-.../-.../<span class="hljs-variable">.-</span>&quot;<br>plainer = &quot;&quot;<br>cipher_arr = cipher<span class="hljs-variable">.split</span>(&#x27;/&#x27;)<br>for i in cipher_arr:<br>    plainer += dict_list[i]<br><br>print plainer<br></code></pre></td></tr></table></figure><p>执行编写好的python脚本，并查看终端的返回结果：</p><p><img src="post_5.assets/image-18.png" alt="img"></p><p>获得一段解密后的文段：</p><p>may_be_have_another_decodehhhhaaaaabaabbbaabbaaaaaaaabaababaaaaaaabbabaaabbaaabbaabaaaababaabaaabbabaaabaaabaababbaabbbabaaabababbaaabbabaaabaabaabaaaabbabbaabbaabaabaaabaabaabaababaabbabaaaabbabaabba</p><p>仔细看看文段，好像出题人想要我们去解密后面那段ab组成的密文</p><p>那段密文形式没有见过，于是本菜鸡又去求助搜索引擎了。搜索发现是培根密码，正好于tip相对应了。那什么是培根密码呢？</p><p>培根密码，又名倍康尼密码（英语：Bacon’s cipher）是由法兰西斯·培根发明的一种隐写术。</p><p>加密时，明文中的每个字母都会转换成一组五个英文字母。其转换依靠下表：</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm">a   AAAAA   g     AABBA   n    ABBAA   t     <span class="hljs-keyword">BAABA</span><br><span class="hljs-keyword"></span><span class="hljs-keyword">b </span>  AAAAB   h     AABBB   o    ABBAB   u-v   <span class="hljs-keyword">BAABB</span><br><span class="hljs-keyword"></span>c   AAABA   i-<span class="hljs-keyword">j </span>  ABAAA   p    ABBBA   w     <span class="hljs-keyword">BABAA</span><br><span class="hljs-keyword"></span>d   AAABB   k     ABAAB   q    ABBBB   x     <span class="hljs-keyword">BABAB</span><br><span class="hljs-keyword"></span>e   AABAA   l     ABABA   r    <span class="hljs-keyword">BAAAA </span>  y     <span class="hljs-keyword">BABBA</span><br><span class="hljs-keyword"></span>f   AABAB   m     ABABB   s    <span class="hljs-keyword">BAAAB </span>  z     <span class="hljs-keyword">BABBB</span><br></code></pre></td></tr></table></figure><p>这只是一款最常用的加密表，有另外一款将每种字母配以不同的字母组予以转换，即I与J、U与V皆有不同编号。</p><p>加密者需使用两种不同字体，分别代表A和B。准备好一篇包含相同AB字数的假信息后，按照密文格式化假信息，即依密文中每个字母是A还是B分别套用两种字体。</p><p>解密时，将上述方法倒转。所有字体一转回A，字体二转回B，以后再按上表拼回字母。</p><p>法兰西斯·培根另外准备了一种方法，其将大小写分别看作A与B，可用于无法使用不同字体的场合（例如只能处理纯文本时）。但这样比起字体不同更容易被看出来，而且和语言对大小写的要求也不太兼容。</p><p>培根密码本质上是将二进制信息通过样式的区别，加在了正常书写之上。培根密码所包含的信息可以和用于承载其的文章完全无关。6</p><p>将摩尔斯电码解密出来的文段的后半部分取出作为密文，即：</p><p>aaaaabaabbbaabbaaaaaaaabaababaaaaaaabbabaaabbaaabbaabaaaababaabaaabbabaaabaaabaababbaabbbabaaabababbaaabbabaaabaabaabaaaabbabbaabbaabaabaaabaabaabaababaabbabaaaabbabaabba</p><p>可以使用网上的培根密码工具进行解密也可以使用python脚本进行解密，这里使用python脚本进行解密：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs go"># python2<br>dict_list=&#123;<br>            <span class="hljs-string">&#x27;aaaaa&#x27;</span>:<span class="hljs-string">&#x27;a&#x27;</span>,<br>            <span class="hljs-string">&#x27;aaaab&#x27;</span>:<span class="hljs-string">&#x27;b&#x27;</span>,<br>            <span class="hljs-string">&#x27;aaaba&#x27;</span>:<span class="hljs-string">&#x27;c&#x27;</span>,<br>            <span class="hljs-string">&#x27;aaabb&#x27;</span>:<span class="hljs-string">&#x27;d&#x27;</span>,<br>            <span class="hljs-string">&#x27;aabaa&#x27;</span>:<span class="hljs-string">&#x27;e&#x27;</span>,<br>            <span class="hljs-string">&#x27;aabab&#x27;</span>:<span class="hljs-string">&#x27;f&#x27;</span>,<br>            <span class="hljs-string">&#x27;aabba&#x27;</span>:<span class="hljs-string">&#x27;g&#x27;</span>,<br>            <span class="hljs-string">&#x27;aabbb&#x27;</span>:<span class="hljs-string">&#x27;h&#x27;</span>,<br>            <span class="hljs-string">&#x27;abaaa&#x27;</span>:<span class="hljs-string">&#x27;i&#x27;</span>,<br>            <span class="hljs-string">&#x27;abaab&#x27;</span>:<span class="hljs-string">&#x27;j&#x27;</span>,<br>            <span class="hljs-string">&#x27;ababa&#x27;</span>:<span class="hljs-string">&#x27;k&#x27;</span>,<br>            <span class="hljs-string">&#x27;ababb&#x27;</span>:<span class="hljs-string">&#x27;l&#x27;</span>,<br>            <span class="hljs-string">&#x27;abbaa&#x27;</span>:<span class="hljs-string">&#x27;m&#x27;</span>,<br>            <span class="hljs-string">&#x27;abbab&#x27;</span>:<span class="hljs-string">&#x27;n&#x27;</span>,<br>            <span class="hljs-string">&#x27;abbba&#x27;</span>:<span class="hljs-string">&#x27;o&#x27;</span>,<br>            <span class="hljs-string">&#x27;abbbb&#x27;</span>:<span class="hljs-string">&#x27;p&#x27;</span>,<br>            <span class="hljs-string">&#x27;baaaa&#x27;</span>:<span class="hljs-string">&#x27;q&#x27;</span>,<br>            <span class="hljs-string">&#x27;baaab&#x27;</span>:<span class="hljs-string">&#x27;r&#x27;</span>,<br>            <span class="hljs-string">&#x27;baaba&#x27;</span>:<span class="hljs-string">&#x27;s&#x27;</span>,<br>            <span class="hljs-string">&#x27;baabb&#x27;</span>:<span class="hljs-string">&#x27;t&#x27;</span>,<br>            <span class="hljs-string">&#x27;babaa&#x27;</span>:<span class="hljs-string">&#x27;u&#x27;</span>,<br>            <span class="hljs-string">&#x27;babab&#x27;</span>:<span class="hljs-string">&#x27;v&#x27;</span>,<br>            <span class="hljs-string">&#x27;babba&#x27;</span>:<span class="hljs-string">&#x27;w&#x27;</span>,<br>            <span class="hljs-string">&#x27;babbb&#x27;</span>:<span class="hljs-string">&#x27;x&#x27;</span>,<br>            <span class="hljs-string">&#x27;bbaaa&#x27;</span>:<span class="hljs-string">&#x27;y&#x27;</span>,<br>            <span class="hljs-string">&#x27;bbaab&#x27;</span>:<span class="hljs-string">&#x27;z&#x27;</span><br>            &#125;<br>cipher = <span class="hljs-string">&quot;aaaaabaabbbaabbaaaaaaaabaababaaaaaaabbabaaabbaaabbaabaaaababaabaaabbabaaabaaabaababbaabbbabaaabababbaaabbabaaabaabaabaaaabbabbaabbaabaabaaabaabaabaababaabbabaaaabbabaabba&quot;</span><br>plainer = <span class="hljs-string">&quot;&quot;</span><br>cipher_arr = []<br>[cipher_arr.<span class="hljs-built_in">append</span>(cipher[i:i+<span class="hljs-number">5</span>]) <span class="hljs-keyword">for</span> i in <span class="hljs-keyword">range</span>(<span class="hljs-number">0</span>,<span class="hljs-built_in">len</span>(cipher),<span class="hljs-number">5</span>)]<br><span class="hljs-keyword">for</span> i in cipher_arr:<br>    plainer =plainer+dict_list[i]<br><span class="hljs-built_in">print</span> plainer<br></code></pre></td></tr></table></figure><p>执行python脚本，并查看终端返回的结果：</p><p><img src="post_5.assets/image-19.png" alt="img"></p><p>看来输出的结果应该就是未成熟的flag数据：attackanddefenceworldisinteresting</p><p>对这个数据进行加帽处理：cyberpeace{attackanddefenceworldisinteresting}</p><p>flag数据成功拿到</p><p>这道题目主要考察古典密码学的替换加密算法知识，难度上应该算是简单题，思路也是比较流畅的。</p><h2 id="混合编码"><a href="#混合编码" class="headerlink" title="混合编码"></a>混合编码</h2><p>看到题目，这道题应该是考察编码相关的知识的内容</p><p>点开题目页面，看看能得到什么关键信息：</p><p><img src="post_5.assets/image-20-1024x293.png" alt="img">混合编码题目</p><p>题目描述中就有一个关键信息，就是题目的要求提交的flag数据格式信息，没有其他关键性的信息了</p><p>下载附件并打开查看密文：</p><p><img src="post_5.assets/image-21-1024x150.png" alt="img">附件内容</p><p>附件中的密文内容看样子像是base64编码格式的：</p><p>JiM3NjsmIzEyMjsmIzY5OyYjMTIwOyYjNzk7JiM4MzsmIzU2OyYjMTIwOyYjNzc7JiM2ODsmIzY5OyYjMTE4OyYjNzc7JiM4NDsmIzY1OyYjNTI7JiM3NjsmIzEyMjsmIzEwNzsmIzUzOyYjNzY7JiMxMjI7JiM2OTsmIzEyMDsmIzc3OyYjODM7JiM1NjsmIzEyMDsmIzc3OyYjNjg7JiMxMDc7JiMxMTg7JiM3NzsmIzg0OyYjNjU7JiMxMjA7JiM3NjsmIzEyMjsmIzY5OyYjMTIwOyYjNzg7JiMxMDU7JiM1NjsmIzEyMDsmIzc3OyYjODQ7JiM2OTsmIzExODsmIzc5OyYjODQ7JiM5OTsmIzExODsmIzc3OyYjODQ7JiM2OTsmIzUwOyYjNzY7JiMxMjI7JiM2OTsmIzEyMDsmIzc4OyYjMTA1OyYjNTY7JiM1MzsmIzc4OyYjMTIxOyYjNTY7JiM1MzsmIzc5OyYjODM7JiM1NjsmIzEyMDsmIzc3OyYjNjg7JiM5OTsmIzExODsmIzc5OyYjODQ7JiM5OTsmIzExODsmIzc3OyYjODQ7JiM2OTsmIzExOTsmIzc2OyYjMTIyOyYjNjk7JiMxMTk7JiM3NzsmIzY3OyYjNTY7JiMxMjA7JiM3NzsmIzY4OyYjNjU7JiMxMTg7JiM3NzsmIzg0OyYjNjU7JiMxMjA7JiM3NjsmIzEyMjsmIzY5OyYjMTE5OyYjNzc7JiMxMDU7JiM1NjsmIzEyMDsmIzc3OyYjNjg7JiM2OTsmIzExODsmIzc3OyYjODQ7JiM2OTsmIzExOTsmIzc2OyYjMTIyOyYjMTA3OyYjNTM7JiM3NjsmIzEyMjsmIzY5OyYjMTE5OyYjNzc7JiM4MzsmIzU2OyYjMTIwOyYjNzc7JiM4NDsmIzEwNzsmIzExODsmIzc3OyYjODQ7JiM2OTsmIzEyMDsmIzc2OyYjMTIyOyYjNjk7JiMxMjA7JiM3ODsmIzY3OyYjNTY7JiMxMjA7JiM3NzsmIzY4OyYjMTAzOyYjMTE4OyYjNzc7JiM4NDsmIzY1OyYjMTE5Ow==</p><p>使用在base64关卡中的python脚本进行base64解密（当然也可以使用在线工具进行base64解密）</p><p><img src="post_5.assets/image-22-1024x63.png" alt="img"></p><p>接出来的数据好像又是一种编码格式：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-symbol">&amp;#76;</span><span class="hljs-symbol">&amp;#122;</span><span class="hljs-symbol">&amp;#69;</span><span class="hljs-symbol">&amp;#120;</span><span class="hljs-symbol">&amp;#79;</span><span class="hljs-symbol">&amp;#83;</span><span class="hljs-symbol">&amp;#56;</span><span class="hljs-symbol">&amp;#120;</span><span class="hljs-symbol">&amp;#77;</span><span class="hljs-symbol">&amp;#68;</span><span class="hljs-symbol">&amp;#69;</span><span class="hljs-symbol">&amp;#118;</span><span class="hljs-symbol">&amp;#77;</span><span class="hljs-symbol">&amp;#84;</span><span class="hljs-symbol">&amp;#65;</span><span class="hljs-symbol">&amp;#52;</span><span class="hljs-symbol">&amp;#76;</span><span class="hljs-symbol">&amp;#122;</span><span class="hljs-symbol">&amp;#107;</span><span class="hljs-symbol">&amp;#53;</span><span class="hljs-symbol">&amp;#76;</span><span class="hljs-symbol">&amp;#122;</span><span class="hljs-symbol">&amp;#69;</span><span class="hljs-symbol">&amp;#120;</span><span class="hljs-symbol">&amp;#77;</span><span class="hljs-symbol">&amp;#83;</span><span class="hljs-symbol">&amp;#56;</span><span class="hljs-symbol">&amp;#120;</span><span class="hljs-symbol">&amp;#77;</span><span class="hljs-symbol">&amp;#68;</span><span class="hljs-symbol">&amp;#107;</span><span class="hljs-symbol">&amp;#118;</span><span class="hljs-symbol">&amp;#77;</span><span class="hljs-symbol">&amp;#84;</span><span class="hljs-symbol">&amp;#65;</span><span class="hljs-symbol">&amp;#120;</span><span class="hljs-symbol">&amp;#76;</span><span class="hljs-symbol">&amp;#122;</span><span class="hljs-symbol">&amp;#69;</span><span class="hljs-symbol">&amp;#120;</span><span class="hljs-symbol">&amp;#78;</span><span class="hljs-symbol">&amp;#105;</span><span class="hljs-symbol">&amp;#56;</span><span class="hljs-symbol">&amp;#120;</span><span class="hljs-symbol">&amp;#77;</span><span class="hljs-symbol">&amp;#84;</span><span class="hljs-symbol">&amp;#69;</span><span class="hljs-symbol">&amp;#118;</span><span class="hljs-symbol">&amp;#79;</span><span class="hljs-symbol">&amp;#84;</span><span class="hljs-symbol">&amp;#99;</span><span class="hljs-symbol">&amp;#118;</span><span class="hljs-symbol">&amp;#77;</span><span class="hljs-symbol">&amp;#84;</span><span class="hljs-symbol">&amp;#69;</span><span class="hljs-symbol">&amp;#50;</span><span class="hljs-symbol">&amp;#76;</span><span class="hljs-symbol">&amp;#122;</span><span class="hljs-symbol">&amp;#69;</span><span class="hljs-symbol">&amp;#120;</span><span class="hljs-symbol">&amp;#78;</span><span class="hljs-symbol">&amp;#105;</span><span class="hljs-symbol">&amp;#56;</span><span class="hljs-symbol">&amp;#53;</span><span class="hljs-symbol">&amp;#78;</span><span class="hljs-symbol">&amp;#121;</span><span class="hljs-symbol">&amp;#56;</span><span class="hljs-symbol">&amp;#53;</span><span class="hljs-symbol">&amp;#79;</span><span class="hljs-symbol">&amp;#83;</span><span class="hljs-symbol">&amp;#56;</span><span class="hljs-symbol">&amp;#120;</span><span class="hljs-symbol">&amp;#77;</span><span class="hljs-symbol">&amp;#68;</span><span class="hljs-symbol">&amp;#99;</span><span class="hljs-symbol">&amp;#118;</span><span class="hljs-symbol">&amp;#79;</span><span class="hljs-symbol">&amp;#84;</span><span class="hljs-symbol">&amp;#99;</span><span class="hljs-symbol">&amp;#118;</span><span class="hljs-symbol">&amp;#77;</span><span class="hljs-symbol">&amp;#84;</span><span class="hljs-symbol">&amp;#69;</span><span class="hljs-symbol">&amp;#119;</span><span class="hljs-symbol">&amp;#76;</span><span class="hljs-symbol">&amp;#122;</span><span class="hljs-symbol">&amp;#69;</span><span class="hljs-symbol">&amp;#119;</span><span class="hljs-symbol">&amp;#77;</span><span class="hljs-symbol">&amp;#67;</span><span class="hljs-symbol">&amp;#56;</span><span class="hljs-symbol">&amp;#120;</span><span class="hljs-symbol">&amp;#77;</span><span class="hljs-symbol">&amp;#68;</span><span class="hljs-symbol">&amp;#65;</span><span class="hljs-symbol">&amp;#118;</span><span class="hljs-symbol">&amp;#77;</span><span class="hljs-symbol">&amp;#84;</span><span class="hljs-symbol">&amp;#65;</span><span class="hljs-symbol">&amp;#120;</span><span class="hljs-symbol">&amp;#76;</span><span class="hljs-symbol">&amp;#122;</span><span class="hljs-symbol">&amp;#69;</span><span class="hljs-symbol">&amp;#119;</span><span class="hljs-symbol">&amp;#77;</span><span class="hljs-symbol">&amp;#105;</span><span class="hljs-symbol">&amp;#56;</span><span class="hljs-symbol">&amp;#120;</span><span class="hljs-symbol">&amp;#77;</span><span class="hljs-symbol">&amp;#68;</span><span class="hljs-symbol">&amp;#69;</span><span class="hljs-symbol">&amp;#118;</span><span class="hljs-symbol">&amp;#77;</span><span class="hljs-symbol">&amp;#84;</span><span class="hljs-symbol">&amp;#69;</span><span class="hljs-symbol">&amp;#119;</span><span class="hljs-symbol">&amp;#76;</span><span class="hljs-symbol">&amp;#122;</span><span class="hljs-symbol">&amp;#107;</span><span class="hljs-symbol">&amp;#53;</span><span class="hljs-symbol">&amp;#76;</span><span class="hljs-symbol">&amp;#122;</span><span class="hljs-symbol">&amp;#69;</span><span class="hljs-symbol">&amp;#119;</span><span class="hljs-symbol">&amp;#77;</span><span class="hljs-symbol">&amp;#83;</span><span class="hljs-symbol">&amp;#56;</span><span class="hljs-symbol">&amp;#120;</span><span class="hljs-symbol">&amp;#77;</span><span class="hljs-symbol">&amp;#84;</span><span class="hljs-symbol">&amp;#107;</span><span class="hljs-symbol">&amp;#118;</span><span class="hljs-symbol">&amp;#77;</span><span class="hljs-symbol">&amp;#84;</span><span class="hljs-symbol">&amp;#69;</span><span class="hljs-symbol">&amp;#120;</span><span class="hljs-symbol">&amp;#76;</span><span class="hljs-symbol">&amp;#122;</span><span class="hljs-symbol">&amp;#69;</span><span class="hljs-symbol">&amp;#120;</span><span class="hljs-symbol">&amp;#78;</span><span class="hljs-symbol">&amp;#67;</span><span class="hljs-symbol">&amp;#56;</span><span class="hljs-symbol">&amp;#120;</span><span class="hljs-symbol">&amp;#77;</span><span class="hljs-symbol">&amp;#68;</span><span class="hljs-symbol">&amp;#103;</span><span class="hljs-symbol">&amp;#118;</span><span class="hljs-symbol">&amp;#77;</span><span class="hljs-symbol">&amp;#84;</span><span class="hljs-symbol">&amp;#65;</span><span class="hljs-symbol">&amp;#119;</span><br></code></pre></td></tr></table></figure><p>看样子应该是ascii编码格式，可以使用在线的ascii编码工具进行解密，也可使用python脚本进行解密，一如既往，这里使用python脚本进行解密：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs xml"># python2<br>cipher=&quot;<span class="hljs-symbol">&amp;#76;</span><span class="hljs-symbol">&amp;#122;</span><span class="hljs-symbol">&amp;#69;</span><span class="hljs-symbol">&amp;#120;</span><span class="hljs-symbol">&amp;#79;</span><span class="hljs-symbol">&amp;#83;</span><span class="hljs-symbol">&amp;#56;</span><span class="hljs-symbol">&amp;#120;</span><span class="hljs-symbol">&amp;#77;</span><span class="hljs-symbol">&amp;#68;</span><span class="hljs-symbol">&amp;#69;</span><span class="hljs-symbol">&amp;#118;</span><span class="hljs-symbol">&amp;#77;</span><span class="hljs-symbol">&amp;#84;</span><span class="hljs-symbol">&amp;#65;</span><span class="hljs-symbol">&amp;#52;</span><span class="hljs-symbol">&amp;#76;</span><span class="hljs-symbol">&amp;#122;</span><span class="hljs-symbol">&amp;#107;</span><span class="hljs-symbol">&amp;#53;</span><span class="hljs-symbol">&amp;#76;</span><span class="hljs-symbol">&amp;#122;</span><span class="hljs-symbol">&amp;#69;</span><span class="hljs-symbol">&amp;#120;</span><span class="hljs-symbol">&amp;#77;</span><span class="hljs-symbol">&amp;#83;</span><span class="hljs-symbol">&amp;#56;</span><span class="hljs-symbol">&amp;#120;</span><span class="hljs-symbol">&amp;#77;</span><span class="hljs-symbol">&amp;#68;</span><span class="hljs-symbol">&amp;#107;</span><span class="hljs-symbol">&amp;#118;</span><span class="hljs-symbol">&amp;#77;</span><span class="hljs-symbol">&amp;#84;</span><span class="hljs-symbol">&amp;#65;</span><span class="hljs-symbol">&amp;#120;</span><span class="hljs-symbol">&amp;#76;</span><span class="hljs-symbol">&amp;#122;</span><span class="hljs-symbol">&amp;#69;</span><span class="hljs-symbol">&amp;#120;</span><span class="hljs-symbol">&amp;#78;</span><span class="hljs-symbol">&amp;#105;</span><span class="hljs-symbol">&amp;#56;</span><span class="hljs-symbol">&amp;#120;</span><span class="hljs-symbol">&amp;#77;</span><span class="hljs-symbol">&amp;#84;</span><span class="hljs-symbol">&amp;#69;</span><span class="hljs-symbol">&amp;#118;</span><span class="hljs-symbol">&amp;#79;</span><span class="hljs-symbol">&amp;#84;</span><span class="hljs-symbol">&amp;#99;</span><span class="hljs-symbol">&amp;#118;</span><span class="hljs-symbol">&amp;#77;</span><span class="hljs-symbol">&amp;#84;</span><span class="hljs-symbol">&amp;#69;</span><span class="hljs-symbol">&amp;#50;</span><span class="hljs-symbol">&amp;#76;</span><span class="hljs-symbol">&amp;#122;</span><span class="hljs-symbol">&amp;#69;</span><span class="hljs-symbol">&amp;#120;</span><span class="hljs-symbol">&amp;#78;</span><span class="hljs-symbol">&amp;#105;</span><span class="hljs-symbol">&amp;#56;</span><span class="hljs-symbol">&amp;#53;</span><span class="hljs-symbol">&amp;#78;</span><span class="hljs-symbol">&amp;#121;</span><span class="hljs-symbol">&amp;#56;</span><span class="hljs-symbol">&amp;#53;</span><span class="hljs-symbol">&amp;#79;</span><span class="hljs-symbol">&amp;#83;</span><span class="hljs-symbol">&amp;#56;</span><span class="hljs-symbol">&amp;#120;</span><span class="hljs-symbol">&amp;#77;</span><span class="hljs-symbol">&amp;#68;</span><span class="hljs-symbol">&amp;#99;</span><span class="hljs-symbol">&amp;#118;</span><span class="hljs-symbol">&amp;#79;</span><span class="hljs-symbol">&amp;#84;</span><span class="hljs-symbol">&amp;#99;</span><span class="hljs-symbol">&amp;#118;</span><span class="hljs-symbol">&amp;#77;</span><span class="hljs-symbol">&amp;#84;</span><span class="hljs-symbol">&amp;#69;</span><span class="hljs-symbol">&amp;#119;</span><span class="hljs-symbol">&amp;#76;</span><span class="hljs-symbol">&amp;#122;</span><span class="hljs-symbol">&amp;#69;</span><span class="hljs-symbol">&amp;#119;</span><span class="hljs-symbol">&amp;#77;</span><span class="hljs-symbol">&amp;#67;</span><span class="hljs-symbol">&amp;#56;</span><span class="hljs-symbol">&amp;#120;</span><span class="hljs-symbol">&amp;#77;</span><span class="hljs-symbol">&amp;#68;</span><span class="hljs-symbol">&amp;#65;</span><span class="hljs-symbol">&amp;#118;</span><span class="hljs-symbol">&amp;#77;</span><span class="hljs-symbol">&amp;#84;</span><span class="hljs-symbol">&amp;#65;</span><span class="hljs-symbol">&amp;#120;</span><span class="hljs-symbol">&amp;#76;</span><span class="hljs-symbol">&amp;#122;</span><span class="hljs-symbol">&amp;#69;</span><span class="hljs-symbol">&amp;#119;</span><span class="hljs-symbol">&amp;#77;</span><span class="hljs-symbol">&amp;#105;</span><span class="hljs-symbol">&amp;#56;</span><span class="hljs-symbol">&amp;#120;</span><span class="hljs-symbol">&amp;#77;</span><span class="hljs-symbol">&amp;#68;</span><span class="hljs-symbol">&amp;#69;</span><span class="hljs-symbol">&amp;#118;</span><span class="hljs-symbol">&amp;#77;</span><span class="hljs-symbol">&amp;#84;</span><span class="hljs-symbol">&amp;#69;</span><span class="hljs-symbol">&amp;#119;</span><span class="hljs-symbol">&amp;#76;</span><span class="hljs-symbol">&amp;#122;</span><span class="hljs-symbol">&amp;#107;</span><span class="hljs-symbol">&amp;#53;</span><span class="hljs-symbol">&amp;#76;</span><span class="hljs-symbol">&amp;#122;</span><span class="hljs-symbol">&amp;#69;</span><span class="hljs-symbol">&amp;#119;</span><span class="hljs-symbol">&amp;#77;</span><span class="hljs-symbol">&amp;#83;</span><span class="hljs-symbol">&amp;#56;</span><span class="hljs-symbol">&amp;#120;</span><span class="hljs-symbol">&amp;#77;</span><span class="hljs-symbol">&amp;#84;</span><span class="hljs-symbol">&amp;#107;</span><span class="hljs-symbol">&amp;#118;</span><span class="hljs-symbol">&amp;#77;</span><span class="hljs-symbol">&amp;#84;</span><span class="hljs-symbol">&amp;#69;</span><span class="hljs-symbol">&amp;#120;</span><span class="hljs-symbol">&amp;#76;</span><span class="hljs-symbol">&amp;#122;</span><span class="hljs-symbol">&amp;#69;</span><span class="hljs-symbol">&amp;#120;</span><span class="hljs-symbol">&amp;#78;</span><span class="hljs-symbol">&amp;#67;</span><span class="hljs-symbol">&amp;#56;</span><span class="hljs-symbol">&amp;#120;</span><span class="hljs-symbol">&amp;#77;</span><span class="hljs-symbol">&amp;#68;</span><span class="hljs-symbol">&amp;#103;</span><span class="hljs-symbol">&amp;#118;</span><span class="hljs-symbol">&amp;#77;</span><span class="hljs-symbol">&amp;#84;</span><span class="hljs-symbol">&amp;#65;</span><span class="hljs-symbol">&amp;#119;</span>&quot;<br>plainer=&quot;&quot;<br>cipher_arr = cipher[2:-1].split(&#x27;;&amp;#&#x27;)<br><br>for i in  cipher_arr:<br>    plainer += chr(int(i))<br><br>print plainer<br></code></pre></td></tr></table></figure><p>执行编写好的python代码并查看终端输出情况：</p><p><img src="post_5.assets/image-24-1024x51.png" alt="img"></p><p>输出的解密信息像是base64格式的编码：</p><p>LzExOS8xMDEvMTA4Lzk5LzExMS8xMDkvMTAxLzExNi8xMTEvOTcvMTE2LzExNi85Ny85OS8xMDcvOTcvMTEwLzEwMC8xMDAvMTAxLzEwMi8xMDEvMTEwLzk5LzEwMS8xMTkvMTExLzExNC8xMDgvMTAw</p><p>可以再使用一次base64解码的python脚本进行base64解码（也可以使用在线base64工具进行解码）：</p><p><img src="post_5.assets/image-25.png" alt="img"></p><p>解码后又是一段ascii的编码格式，这里还是编写一个ascii解码的python脚本：</p><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs dns"># python2<br>cipher = &quot;/<span class="hljs-number">119/101/108/99</span>/<span class="hljs-number">111/109/101/116</span>/<span class="hljs-number">111/97/116/116</span>/<span class="hljs-number">97/99/107/97</span>/<span class="hljs-number">110/100/100/101</span>/<span class="hljs-number">102/101/110/99</span>/<span class="hljs-number">101/119/111/114</span>/<span class="hljs-number">108/100</span>&quot;<br>plainer = &quot;&quot;<br>cipher_arr = cipher[<span class="hljs-number">1</span>:].split(&#x27;/&#x27;)<br>for i in cipher_arr:<br>    plainer += chr(int(i))<br><br>print plainer<br></code></pre></td></tr></table></figure><p>执行编写好的python代码并查看终端输出的结果：</p><p><img src="post_5.assets/image-26.png" alt="img"></p><p>解码出来的数据应该就是flag数据：welcometoattackanddefenceworld</p><p>根据题目要求，需要对这个flag数据进行加帽处理：cyberpeace{welcometoattackanddefenceworld}</p><p>题目解决，题目属于简单题目，思路就是反复套娃操作：base64-&gt;ASCII-&gt;base64-&gt;ASCII</p><p>题目主要考察对编码数据的识别和基本编码方式的解决，简单题。</p><h2 id="easy-RSA"><a href="#easy-RSA" class="headerlink" title="easy_RSA"></a>easy_RSA</h2><p>看题目，这应该是考察到ctf中密码学的核心模块，也就是现代密码学的部分，RSA加密算法。</p><p>什么是RSA加密算法？</p><p>RSA加密算法是一种非对称加密算法，在公开密钥加密和电子商业中被广泛使用。RSA是由罗纳德·李维斯特（Ron Rivest）、阿迪·萨莫尔（Adi Shamir）和伦纳德·阿德曼（Leonard Adleman）在1977年一起提出的。当时他们三人都在麻省理工学院工作。RSA 就是他们三人姓氏开头字母拼在一起组成的。</p><p>对极大整数做因数分解的难度决定了 RSA 算法的可靠性。换言之，对一极大整数做因数分解愈困难，RSA 算法愈可靠。假如有人找到一种快速因数分解的算法的话，那么用 RSA 加密的信息的可靠性就会极度下降。但找到这样的算法的可能性是非常小的。今天只有短的 RSA 钥匙才可能被强力方式破解。到目前为止，世界上还没有任何可靠的攻击RSA算法的方式。只要其钥匙的长度足够长，用RSA加密的信息实际上是不能被破解的。7</p><p>RSA是现在密码学的一个典型代表，加密过程不像古典密码学中的密码那么简单，加密过程是非常复杂的。RSA加密算法的安全性也是相当高的。</p><h3 id="RSA算法8"><a href="#RSA算法8" class="headerlink" title="RSA算法8"></a><strong>RSA算法</strong>8</h3><p>密钥生成的步骤</p><p>我们通过一个例子，来理解RSA算法。假设爱丽丝要与鲍勃进行加密通信，她该怎么生成公钥和私钥呢？</p><p><strong>第一步，随机选择两个不相等的质数p和q。</strong></p><p>爱丽丝选择了61和53。（实际应用中，这两个质数越大，就越难破解。）</p><p><strong>第二步，计算p和q的乘积n。</strong></p><p>爱丽丝就把61和53相乘。</p><blockquote><p>n = 61×53 = 3233</p></blockquote><p>n的长度就是密钥长度。3233写成二进制是110010100001，一共有12位，所以这个密钥就是12位。实际应用中，RSA密钥一般是1024位，重要场合则为2048位。</p><p><strong>第三步，计算n的欧拉函数φ(n)。</strong></p><blockquote><p>n是质数，则 φ(n)=n-1<br>n = p1 × p2<br>φ(n) = φ(p1p2) = φ(p1)φ(p2)<br>=&gt; φ(n) = (p-1)(q-1)</p></blockquote><p>爱丽丝算出φ(3233)等于60×52，即3120。</p><p><strong>第四步，随机选择一个整数e，条件是1&lt; e &lt; φ(n)，且e与φ(n) 互质。</strong></p><p>爱丽丝就在1到3120之间，随机选择了17。（实际应用中，常常选择65537。）</p><p><strong>第五步，计算e对于φ(n)的模反元素d。</strong></p><p>所谓”模反元素”就是指有一个整数d，可以使得ed被φ(n)除的余数为1。</p><blockquote><p>ed ≡ 1 (mod φ(n))</p></blockquote><p>这个式子等价于</p><blockquote><p>ed - 1 = kφ(n)</p></blockquote><p>于是，找到模反元素d，实质上就是对下面这个二元一次方程求解。(-k = y)</p><blockquote><p>ex + φ(n)y = 1</p></blockquote><p>已知 e=17, φ(n)=3120，</p><blockquote><p>17x + 3120y = 1</p></blockquote><p>这个方程可以用“扩展欧几里得算法”(又叫辗转相除法)求解，此处省略具体过程。总之，爱丽丝算出一组整数解为 (x,y)=(2753,-15)，即 d=2753。</p><p>至此所有计算完成。</p><p><strong>第六步，将n和e封装成公钥，n和d封装成私钥。</strong></p><p>在爱丽丝的例子中，n=3233，e=17，d=2753，所以公钥就是 (3233,17)，私钥就是（3233, 2753）。</p><p>实际应用中，公钥和私钥的数据都采用ASN.1格式表达。</p><p>这些RSA加密算法的流程和重要的几个参数是解决RSA算法密码学题目的核心，只有清晰地了解RSA加密算法的每个细节，面对RSA题目才能胸有成竹、游刃有余。</p><p>点开题目，看看题目描述能给出哪些提示吧：</p><p><img src="post_5.assets/image-27-1024x280.png" alt="img">easy_RSA</p><p>题目中只有提交格式的提示，除此之外，都是描述性的信息，但是对解题没有太多作用。</p><p>下载附件，直接查看附件中的信息：</p><p><img src="post_5.assets/image-28.png" alt="img">附件内容</p><p>这道题目应该是简单的计算，即根据RSA设计的算法过程进行逆向计算。这道题目可以使用rsatool工具进行直接求解，本菜鸡还是编写一个python脚本进行求解吧：（此脚本只能针对简单问题）</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-comment"># python2</span><br><span class="hljs-attribute">p</span>=473398607161<br><span class="hljs-attribute">q</span>=4511491<br><span class="hljs-attribute">e</span>=17<br>pn=(p-1)*(q-1)<br>flag=(pn+1)/e<br><br><span class="hljs-builtin-name">print</span> flag<br></code></pre></td></tr></table></figure><p>执行编写的脚本，查看终端输出的结果：</p><p><img src="post_5.assets/image-29.png" alt="img"></p><p>这段输出的数据应该就是flag数据：125631357777427553</p><p>给这段flag数据加个帽子：cyberpeace{125631357777427553}</p><p>这道题目是RSA题目中的签到题，难度非常低，思路也非常简单</p><p>题目主要考察RSA加密算法的过程，签到题。</p><h2 id="easychallenge"><a href="#easychallenge" class="headerlink" title="easychallenge"></a>easychallenge</h2><p>这道题的题目似乎看不出什么门路来，于是只能点开题目描述的页面：</p><p><img src="post_5.assets/image-30-1024x292.png" alt="img">easychallenge题目</p><p>这道题目应该是在说程序方面的问题，题目描述也得到不了太多有用的信息，于是下载附件来获取到这道题目的真实面目：</p><p><img src="post_5.assets/image-31.png" alt="img"></p><p>发现附件是一个python的一个可以执行的文件，查看文件的属性：</p><p><img src="post_5.assets/image-32.png" alt="img"></p><p>发现是一个pyc文件，本菜鸡不知道什么是pyc文件，于是通过互联网的搜索引擎求助一波：</p><p>pyc是一种二进制文件，是由Python文件经过编译后所生成的文件，它是一种byte code，Python文件变成pyc文件后，加载的速度有所提高，而且pyc还是一种跨平台的字节码，由python的虚拟机来执行的，就类似于JAVA或者.NET的虚拟机的概念。pyc的内容与python的版本是相关的，不同版本编译后的pyc文件是不同的，例如2.5版本编译的是pyc文件，而2.4版本编译的python是无法执行的。9</p><p>pyc文件是py文件经过编译的文件格式，文件内容是一种可执行字节码，尝试执行一下这个文件：</p><p><img src="post_5.assets/image-33.png" alt="img"></p><p>发现需要执行一下这个文件，需要输入flag数据，看来flag数据很可能就在这个文件内部。这里就需要进行反编译，即把pyc文件打回原形。通过互联网的搜索引擎查询到python内置了一个uncompyle模块可以进行pyc反编译。</p><p>于是可以使用<code>pip install uncompyle </code>命令安装一下uncompyle。</p><p>在命令行中执行：<code>uncompyle6 -o test.py &#39;.\42aa1a89e3ae48c38e8b713051557020 (1).pyc&#39;</code></p><p>文件应该成功输出成了一个test.py文件。</p><p>通过代码编辑器，查看到这个文件的源代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># uncompyle6 version 3.7.4</span><br><span class="hljs-comment"># Python bytecode 2.7 (62211)</span><br><span class="hljs-comment"># Decompiled from: Python 3.8.6 (tags/v3.8.6:db45529, Sep 23 2020, 15:52:53) [MSC v.1927 64 bit (AMD64)]</span><br><span class="hljs-comment"># Embedded file name: ans.py</span><br><span class="hljs-comment"># Compiled at: 2018-08-09 11:29:44</span><br><span class="hljs-keyword">import</span> base64<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">encode1</span>(<span class="hljs-params">ans</span>):</span><br>    s = <span class="hljs-string">&#x27;&#x27;</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> ans:<br>        x = <span class="hljs-built_in">ord</span>(i) ^ <span class="hljs-number">36</span><br>        x = x + <span class="hljs-number">25</span><br>        s += <span class="hljs-built_in">chr</span>(x)<br><br>    <span class="hljs-keyword">return</span> s<br><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">encode2</span>(<span class="hljs-params">ans</span>):</span><br>    s = <span class="hljs-string">&#x27;&#x27;</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> ans:<br>        x = <span class="hljs-built_in">ord</span>(i) + <span class="hljs-number">36</span><br>        x = x ^ <span class="hljs-number">36</span><br>        s += <span class="hljs-built_in">chr</span>(x)<br><br>    <span class="hljs-keyword">return</span> s<br><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">encode3</span>(<span class="hljs-params">ans</span>):</span><br>    <span class="hljs-keyword">return</span> base64.b32encode(ans)<br><br><br>flag = <span class="hljs-string">&#x27; &#x27;</span><br><span class="hljs-built_in">print</span> <span class="hljs-string">&#x27;Please Input your flag:&#x27;</span><br>flag = raw_input()<br>final = <span class="hljs-string">&#x27;UC7KOWVXWVNKNIC2XCXKHKK2W5NLBKNOUOSK3LNNVWW3E===&#x27;</span><br><span class="hljs-keyword">if</span> encode3(encode2(encode1(flag))) == final:<br>    <span class="hljs-built_in">print</span> <span class="hljs-string">&#x27;correct&#x27;</span><br><span class="hljs-keyword">else</span>:<br>    <span class="hljs-built_in">print</span> <span class="hljs-string">&#x27;wrong&#x27;</span><br></code></pre></td></tr></table></figure><p>看到文件源代码，发现flag数据是进行三次加密的：</p><ol><li>异或处理-&gt;加数值chuli-&gt;ASCII编码</li><li>加数值处理-&gt;异或处理-&gt;ASCII编码</li><li>base32编码处理</li></ol><p>我们可以根据这个代码逻辑逆向设计一个加密算法脚本来解决：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># python2</span><br><span class="hljs-keyword">import</span> base64<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">decode1</span>(<span class="hljs-params">ans</span>):</span><br>    <span class="hljs-keyword">return</span> base64.b32decode(ans)<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">decode2</span>(<span class="hljs-params">ans</span>):</span><br>    s=<span class="hljs-string">&#x27;&#x27;</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> ans:<br>        x = <span class="hljs-built_in">ord</span>(i) ^ <span class="hljs-number">36</span><br>        x = x -<span class="hljs-number">36</span><br>        s += <span class="hljs-built_in">chr</span>(x)<br><br>    <span class="hljs-keyword">return</span> s<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">decode3</span>(<span class="hljs-params">ans</span>):</span><br>    s=<span class="hljs-string">&#x27;&#x27;</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> ans:<br>        x = <span class="hljs-built_in">ord</span>(i)-<span class="hljs-number">25</span><br>        x = x ^ <span class="hljs-number">36</span><br>        s += <span class="hljs-built_in">chr</span>(x)<br><br>    <span class="hljs-keyword">return</span> s<br><br>cipher = <span class="hljs-string">&quot;UC7KOWVXWVNKNIC2XCXKHKK2W5NLBKNOUOSK3LNNVWW3E===&quot;</span><br>plainer = decode3(decode2(decode1(cipher)))<br><br><span class="hljs-built_in">print</span> plainer<br></code></pre></td></tr></table></figure><p>执行一下编写好的代码，查看终端输出的结果：</p><p><img src="post_5.assets/image-35.png" alt="img"></p><p>看输出结果，应该是flag数据没错了。</p><p>再次执行以下pyc程序验证一下：</p><p><img src="post_5.assets/image-36.png" alt="img"></p><p>看来是没错了，成功获取这道题目的flag数据：cyberpeace{interestinghhhhh}</p><p>这道题目的难度上也是简单题，思路也是比较流畅的。</p><p>题目主要考察pyc文件的反编译，以及编码和密码学的一些简单理论。简单题。</p><h2 id="转轮机加密"><a href="#转轮机加密" class="headerlink" title="转轮机加密"></a>转轮机加密</h2><p>看到题目有些懵懵的，本菜鸡不知道啥是转轮机加密，于是只能求助一下搜索引擎来获取与转轮机加密相关的更多信息：</p><p>转轮机是古典加密方法的集大成者，二战时轴心国普遍应用了该技术，可惜惨遭盟军攻破，德日还蒙在鼓里，一定程度上改变了最终的战局。</p><p>转轮机的原理概括起来就是循环置换的多表代换技术，尤其是多筒转轮机，可重复使用数以万计的字母替换表。</p><p>以三筒转轮机为例：</p><p><img src="post_5.assets/929265-20160422083905866-1151128365.jpg" alt="img"></p><p>有三个可以独立旋转的圆筒，每个圆筒内部有26个输入引脚和26个输出引脚，内部连线使得输入与输出唯一连接。</p><p>每按一下输入键（旋转键），快速转子旋转一个引脚，当快速转子转满一轮（循环归位）时，带动中速转子旋转一个引脚，以此类推，类似钟表的秒分时。</p><p>今天，转轮机的意义在于它曾经给目前最广泛使用的密码–数据加密标准DES指明了方向。10</p><p>转轮机加密是一种古典密码学的一种加密方法，应该是古典密码学的分组密码</p><p>加密过程大致是：</p><p>明文-&gt;分组处理（类似于栅栏密码处理方式）-&gt;文段内容位移+密文-&gt;多文段顺序重排+密钥-&gt;密文组</p><p>下面点开题目描述，看看可以得到什么信息：</p><p><img src="post_5.assets/image-37-1024x272.png" alt="img">转轮机加密题目</p><p>根据题目描述的信息，可以获得以下几点提示：</p><ol><li>二战</li><li>托马斯·杰斐逊</li><li>flag格式</li></ol><p>下面下载附件，并进行查看：</p><p><img src="post_5.assets/image-38.png" alt="img">附件内容</p><p>要想获取到flag数据，应该就需要对附件内容的数据进行机密，这里编写一个python脚本来解密：</p><figure class="highlight prolog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs prolog"># python2<br>dict_list = &#123;<br>            <span class="hljs-string">&#x27;1&#x27;</span>:<span class="hljs-string">&#x27;ZWAXJGDLUBVIQHKYPNTCRMOSFE&#x27;</span>,<br>            <span class="hljs-string">&#x27;2&#x27;</span>:<span class="hljs-string">&#x27;KPBELNACZDTRXMJQOYHGVSFUWI&#x27;</span>,<br>            <span class="hljs-string">&#x27;3&#x27;</span>:<span class="hljs-string">&#x27;BDMAIZVRNSJUWFHTEQGYXPLOCK&#x27;</span>,<br>            <span class="hljs-string">&#x27;4&#x27;</span>:<span class="hljs-string">&#x27;RPLNDVHGFCUKTEBSXQYIZMJWAO&#x27;</span>,<br>            <span class="hljs-string">&#x27;5&#x27;</span>:<span class="hljs-string">&#x27;IHFRLABEUOTSGJVDKCPMNZQWXY&#x27;</span>,<br>            <span class="hljs-string">&#x27;6&#x27;</span>:<span class="hljs-string">&#x27;AMKGHIWPNYCJBFZDRUSLOQXVET&#x27;</span>,<br>            <span class="hljs-string">&#x27;7&#x27;</span>:<span class="hljs-string">&#x27;GWTHSPYBXIZULVKMRAFDCEONJQ&#x27;</span>,<br>            <span class="hljs-string">&#x27;8&#x27;</span>:<span class="hljs-string">&#x27;NOZUTWDCVRJLXKISEFAPMYGHBQ&#x27;</span>,<br>            <span class="hljs-string">&#x27;9&#x27;</span>:<span class="hljs-string">&#x27;XPLTDSRFHENYVUBMCQWAOIKZGJ&#x27;</span>,<br>            <span class="hljs-string">&#x27;10&#x27;</span>:<span class="hljs-string">&#x27;UDNAJFBOWTGVRSCZQKELMXYIHP&#x27;</span>,<br>            <span class="hljs-string">&#x27;11&#x27;</span>:<span class="hljs-string">&#x27;MNBVCXZQWERTPOIUYALSKDJFHG&#x27;</span>,<br>            <span class="hljs-string">&#x27;12&#x27;</span>:<span class="hljs-string">&#x27;LVNCMXZPQOWEIURYTASBKJDFHG&#x27;</span>, <br>            <span class="hljs-string">&#x27;13&#x27;</span>:<span class="hljs-string">&#x27;JZQAWSXCDERFVBGTYHNUMKILOP&#x27;</span><br>            &#125;<br><br>key=[<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">7</span>,<span class="hljs-number">5</span>,<span class="hljs-number">13</span>,<span class="hljs-number">12</span>,<span class="hljs-number">9</span>,<span class="hljs-number">1</span>,<span class="hljs-number">8</span>,<span class="hljs-number">10</span>,<span class="hljs-number">4</span>,<span class="hljs-number">11</span>,<span class="hljs-number">6</span>]<br>cipher=<span class="hljs-string">&quot;NFQKSEVOQOFNP&quot;</span><br>cipher_arr=[]<br>plainer_arr=[]<br>plainer_list=[]<br>index = <span class="hljs-number">0</span><br><br>for i in key:<br>    cipher_arr.append(dict_list[str(i)])<br><br>for j in cipher_arr:<br>    location = j.index(cipher[index])<br>    str_get = j[location:] + j[:location]<br>    plainer_arr.append(str_get)<br>    index += <span class="hljs-number">1</span><br><br>for i in range(len(plainer_arr[<span class="hljs-number">0</span>])):<br>    str_get=<span class="hljs-string">&quot;&quot;</span><br>    for j in plainer_arr:<br>        str_get += j[i]<br>    print str_get.lower()<br></code></pre></td></tr></table></figure><p>执行刚刚编写好的python脚本，并在终端命令行中查看执行结果：</p><p><img src="post_5.assets/image-39.png" alt="img"></p><p>得到了一个明文的列表：</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm">nfqksevoqofnp<br>ahgcxiusnwcbn<br>ctwpcubfotuvy<br>zetmdrmezgkcc<br>dqhneyczuvtxj<br>tgszrtqwtrezb<br>rypqfawawsbqf<br>xxywvsaxdcswz<br>mpbxbbojczxed<br><span class="hljs-keyword">jlxygkigvqqrr</span><br><span class="hljs-keyword"></span>qoiitjkdrkytu<br>oczhydzljeips<br>ykufhfgullzol<br>hblrnhjbxmmio<br>gdvlugxvkxjuq<br>vmkamlpiiywyx<br>sambkvlqsiaav<br>fireinthehole<br>uzaulcdkfprst<br>wvfoomsyaupka<br>irdtpxrppdldm<br>kncsjzfnmnnjk<br>psegzphtyadfg<br><span class="hljs-keyword">bjojqqecgjvhh</span><br><span class="hljs-keyword"></span>eunvaonrhfhgi<br><span class="hljs-keyword">lwjdwwymbbgmw</span><br></code></pre></td></tr></table></figure><p>列表中存在明文，这时候需要看看题目描述的3个tip：</p><ol><li>二战</li><li>托马斯·杰斐逊</li><li>flag格式</li></ol><p>由于转轮机加密是托马斯·杰斐逊发明的，因而tip2已经使用，tip3是要在提交的时候使用，这时候还有一个tip1，二战。找一下明文列表中是否有与二战相关的文段。</p><p>发现文段：fireinthehole 与二战相关，这个明文段应该就是flag数据了。</p><p>根据题目描述的flag数据要求，fireinthehole就是正确的flag数据了。</p><p>题目解决，题目的思路也是比较流畅简单的，难度上算是简单题。</p><p>题目主要考察的是古典密码学中的转轮机加密，简单题。</p><h2 id="Normal-RSA"><a href="#Normal-RSA" class="headerlink" title="Normal_RSA"></a>Normal_RSA</h2><p>看到题目，感觉这道题目应该不简单，明显的一道RSA加密算法题目，估计也是考察RSA加密算法相关知识的题目。</p><p>直接点开题目描述，看看可以获取到什么有用的tip</p><p><img src="post_5.assets/image-40-1024x273.png" alt="img">Normal_RSA题目</p><p>根据题目描述，这道题目应该是需要使用到工具的。RSA加密算法题目通常会使用到openssl，rsatool，factordb，sagemath工具进行rsa的公钥私钥的运算。</p><p>下载附件，查看附件有什么东西吧：</p><p><img src="post_5.assets/image-41.png" alt="img">附件</p><p>附件个压缩文件，我们对压缩文件进行解压获得一个文件夹：</p><p><img src="post_5.assets/image-42.png" alt="img"></p><p>打开这个文件夹：</p><p><img src="post_5.assets/image-43.png" alt="img">文件夹内容</p><p>发现有两个文件，一个是公钥，一个是密文。pem格式的文件应该是openssl的一种文件格式</p><p><img src="post_5.assets/image-44.png" alt="img"></p><p>这里使用openssl来获取到公钥文件的e和n，使用openssl的rsa功能之前可以先看看rsa功能的帮助：</p><p><img src="post_5.assets/image-45.png" alt="img">openssl rsa帮助</p><p>了解了大致参数，执行命令<code>rsa -pubin -text -modulus -in pubkey.pem</code> 来获取e和n的数据：</p><p><img src="post_5.assets/image-46.png" alt="img"></p><p>exponent就是e，modulus就是n。</p><p>这里的e是十进制的，n是十六进制的：</p><p>Exponent: 65537 (0x10001)</p><p>Modulus=C2636AE5C3D8E43FFB97AB09028F1AAC6C0BF6CD3D70EBCA281BFFE97FBE30DD</p><p>需要进行转换，使用ipython交互求出十进制数值：</p><p><img src="post_5.assets/image-48.png" alt="img"></p><p>现在得到：</p><p>n=87924348264132406875276140514499937145050893665602592992418171647042491658461</p><p>e=65537</p><p>下面需要求出p和q，这里需要进行大数分解，这里使用<a href="http://factordb.com/">focterdb</a>进行大数分解：</p><p><img src="post_5.assets/image-49-1024x111.png" alt="img"></p><p>现在得到的数据有：</p><p>p=275127860351348928173285174381581152299</p><p>q=319576316814478949870590164193048041239</p><p>n=87924348264132406875276140514499937145050893665602592992418171647042491658461</p><p>e=65537</p><p>现在这些数据可以求出参数d了，这里使用rsatool求解参数d、生成私钥文件：</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus">python ~/rsatool/rsatool<span class="hljs-selector-class">.py</span>  -f PEM -o private<span class="hljs-selector-class">.pem</span>  -<span class="hljs-selector-tag">p</span> <span class="hljs-number">275127860351348928173285174381581152299</span> -<span class="hljs-selector-tag">q</span> <span class="hljs-number">319576316814478949870590164193048041239</span> -e <span class="hljs-number">65537</span> <br></code></pre></td></tr></table></figure><p><img src="post_5.assets/image-53-1024x313.png" alt="img"></p><p>现在得到了私钥文件和公钥文件了，可以使用openssl进行解密了</p><p>opensssl解密RSA加密算法的模块是rsautl，解密之前，先看看rsautl的帮助：</p><p><img src="post_5.assets/image-51.png" alt="img"></p><p>了解大致参数后，执行命令开始进行求解：</p><figure class="highlight sqf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sqf">rsautl -<span class="hljs-built_in">in</span> <span class="hljs-built_in">flag</span>.enc -inkey <span class="hljs-keyword">private</span>.pem -out <span class="hljs-built_in">flag</span>.txt -decrypt<br></code></pre></td></tr></table></figure><p>然后查看生成的txt文件内容：</p><p><img src="post_5.assets/image-54.png" alt="img"></p><p>成功获取到flag数据：PCTF{256b_i5_m3dium}</p><p>题目解决，题目是比较常规的RSA题目，题目主要考察RSA知识的掌握以及RSA工具的使用。</p><p>题目难度上，题目算是简单题目。</p><h2 id="esay-ECC"><a href="#esay-ECC" class="headerlink" title="esay_ECC"></a>esay_ECC</h2><p>看到题目，这道题目应该是一个比较难的题目，题目考察到的是ecc加密算法，是密码学中比较难也是比较核心的考察点。ecc加密算法也是ctf密码学的难点。什么是ecc加密算法？</p><p>椭圆曲线密码学（英语：Elliptic Curve Cryptography，缩写：ECC）是一种基于椭圆曲线数学的公开密钥加密算法。椭圆曲线在密码学中的使用是在1985年由Neal Koblitz（英语：Neal Koblitz）和Victor Miller（英语：Victor Miller）分别独立提出的。</p><p>ECC的主要优势是它相比RSA加密算法使用较小的密钥长度并提供相当等级的安全性。ECC的另一个优势是可以定义群之间的双线性映射，基于Weil对或是Tate对；双线性映射已经在密码学中发现了大量的应用，例如基于身份的加密。11</p><p>点开题目，看看题目能给我们什么有用的信息：</p><p><img src="post_5.assets/image-55-1024x301.png" alt="img">easy_ECC题目</p><p>题目的描述提示了ecc基本原理和提交的flag格式。这道题目解决的关键应该就是ecc基本原理。</p><p>点开附件进行下载，查看附件内容：</p><p><img src="post_5.assets/image-56.png" alt="img">附件内容</p><p>本菜鸡现在实在是看不懂ecc加密算法的基本原理，这道题目直接搬大佬的脚本求解：12</p><figure class="highlight nix"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs nix"><span class="hljs-attr">Gx</span> = <span class="hljs-number">6478678675</span><br><span class="hljs-attr">Gy</span> = <span class="hljs-number">5636379357093</span><br><span class="hljs-attr">a</span> = <span class="hljs-number">16546484</span> <br><span class="hljs-attr">b</span> = <span class="hljs-number">4548674875</span><br><span class="hljs-attr">p</span> = <span class="hljs-number">15424654874903</span><br><span class="hljs-attr">k</span> = <span class="hljs-number">546768</span><br><span class="hljs-attr">x</span> = Gx<br><span class="hljs-attr">y</span> = Gy<br>for i <span class="hljs-keyword">in</span> range(k-<span class="hljs-number">1</span>):<br>    <span class="hljs-keyword">if</span> (<span class="hljs-attr">x==Gx</span> <span class="hljs-literal">and</span> <span class="hljs-attr">y==Gy):</span><br>        <span class="hljs-attr">inv</span> = pow(<span class="hljs-number">2</span>*Gy, p-<span class="hljs-number">2</span>,p)<br>        <span class="hljs-attr">temp</span> = (<span class="hljs-number">3</span>*Gx*Gx+a)*inv%p<br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-attr">inv</span> = pow((x-Gx), p-<span class="hljs-number">2</span>,p)<br>        <span class="hljs-attr">temp</span> = (y-Gy)*inv%p<br><br>    <span class="hljs-attr">xr</span> = (temp*temp-Gx-x)%p<br>    <span class="hljs-attr">yr</span> = (temp*(x-xr)-y)%p<br> <span class="hljs-comment">#print(i,xr,yr)</span><br>    <span class="hljs-attr">x</span> = xr<br>    <span class="hljs-attr">y</span> = yr<br>print(x+y)<br></code></pre></td></tr></table></figure><p>执行脚本进行求解：</p><p><img src="post_5.assets/image-57.png" alt="img"></p><p>解出来的数值：19477226185390。对解出来的数值加个帽子：cyberpeace{19477226185390}</p><p>flag数据就是：cyberpeace{19477226185390}</p><p>题目解决，难度适中，主要考察ecc基本原理（本菜鸡现在看不懂，嘤嘤嘤）</p><h2 id="参考："><a href="#参考：" class="headerlink" title="参考："></a>参考：</h2><ol><li><a href="https://blog.csdn.net/jiang_xinxing/article/details/89360638">密码学发展简史</a></li><li><a href="https://wiwiki.kfd.me/wiki/%E5%87%AF%E6%92%92%E5%AF%86%E7%A0%81">凯撒密码-维基百科</a></li><li><a href="https://wiwiki.kfd.me/wiki/%E6%91%A9%E5%B0%94%E6%96%AF%E7%94%B5%E7%A0%81">摩尔斯电码-维基百科</a></li><li><a href="https://www.jianshu.com/p/b5aa5cf60f83">01248云影密码-简书</a></li><li><a href="https://baike.baidu.com/item/%E6%A0%85%E6%A0%8F%E5%AF%86%E7%A0%81/228209">栅栏密码-百度百科</a></li><li><a href="https://wiwiki.kfd.me/wiki/%E5%9F%B9%E6%A0%B9%E5%AF%86%E7%A2%BC">培根密码-维基百科</a></li><li><a href="https://wiwiki.kfd.me/wiki/RSA%E5%8A%A0%E5%AF%86%E6%BC%94%E7%AE%97%E6%B3%95">RSA加密算法-维基百科</a></li><li><a href="https://www.ruanyifeng.com/blog/2013/07/rsa_algorithm_part_two.html">RSA加密算法-阮一峰</a></li><li><a href="https://www.php.cn/python-tutorials-416352.html">什么是.pyc文件-Python教程-PHP中文网</a></li><li><a href="https://www.cnblogs.com/block2016/p/5419894.html">古典加密方法（三）转轮机 - block2016 - 博客园</a></li><li><a href="https://wiwiki.kfd.me/wiki/%E6%A4%AD%E5%9C%86%E6%9B%B2%E7%BA%BF%E5%AF%86%E7%A0%81%E5%AD%A6?__cf_chl_jschl_tk__=a9978b71ec35dea51611bffa9ddfde17af6370e0-1617507761-0-AS1qzJ-oZAEq_LTzowb0J7phGWNrxR30GyxWwo6CyT69z-ihrCQkPQyVQt09Ilbvz62nswUGfiKGW0V7wr81F8k7VR2CTAXsMzT-d0exQRmElW9n_yv_SYJl2ZMXNsx1IF8xd9OYYwHGTSD_-s2IngOPyneCJ2vgpXqo9Ni7n7kPjZpACS3_rMdRHNdn9nCJNQX7QmB-220VQx5FnGlcQZzU9u4WOLCZDnB04Ui439-MF7E9NDg4g3poRLyDAA2mB3SznYOkHvz-9GPxSImOa87p75BN9SNM69QUdhG0fuDleenL6XoNzcYBuM-Q1lgNA-S_BnZsPAuTtUo3aDdZNP8woYFz6qr5K2WzLVQ-fYEofJN4TCVQPCn1f1PbnffLiUhOHT342PmSBmuo0xDZy6RHHJMOjFSeWT5TixJIYYmYiz2EbnrifJikVyt0-CZycYnh_-QPhzzbqleCFm90uSXCfvMuTtZ9kAzWZHqBLVpLcS1VS6spCfFZYw78f9bC7pUZUqcNYyB7pY_vhuQX6Mg">椭圆曲线密码学-维基百科</a></li><li><a href="https://blog.csdn.net/weixin_46227016/article/details/111565136">XCTF easy_ECC WP</a></li></ol><p>XCTF的新手区密码学题目可能难度不是很高，但是XCTF新手区的密码学题目涉及的范围还是比较广的。从编码到密码，从古典到现代，从rsa到ecc都有涉及，密码学考察的基本知识都涉及到了。</p><p>本期wp分享到此为止，有时间再来喝杯茶呀！</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title></title>
    <link href="/2021/06/21/post_4/"/>
    <url>/2021/06/21/post_4/</url>
    
    <content type="html"><![CDATA[<hr><h2 id="title-XCTF-WEB-新手区-writeup"><a href="#title-XCTF-WEB-新手区-writeup" class="headerlink" title="title:XCTF-WEB-新手区 writeup"></a>title:XCTF-WEB-新手区 writeup</h2><p>来点时效性的文章，不能总闲聊吧？</p><p><a href="https://adworld.xctf.org.cn/">XCTF</a>是一个国内比较常用的CTF的刷题网站，网站页面如下：</p><p><img src="post_4.assets/image-1.png" alt="image-1">XCTF攻防世界页面</p><p>初次写writeup，解题思路可能不是很明确。</p><p>本次要解决的题目如下：</p><p><img src="post_4.assets/image-2.png" alt="image-2">XCTF WEB新手区题目</p><ul><li>view source</li><li>robots</li><li>backup</li><li>cookie</li><li>disabled button</li><li>weak auth</li><li>simple php</li><li>get post</li><li>xff referer</li><li>webshell</li><li>command execution</li><li>simple js</li></ul><h2 id="view-source"><a href="#view-source" class="headerlink" title="view_source"></a>view_source</h2><p>进入到题目页面中，获取与解题相关的信息</p><p><img src="post_4.assets/image-3.png" alt="image-3">view_source题目</p><p>根据题目要求可知，鼠标右键不可用了。</p><p>我们进入环境来一探究竟</p><p><img src="post_4.assets/image-4.png" alt="image-4">靶机环境</p><p>靶机展示的页面非常简单，说flag不在这儿，我不大相信，尝试使用右键查看源代码</p><p>发现右键不能使用。看来靶机的代码把浏览器的右键给禁用了，解决方法有两个：</p><ol><li>使用F12进行检查源代码</li><li>开启浏览器禁用js模式</li></ol><p>这里使用F12进行查看源代码（开启禁用js模式比较麻烦）</p><p><img src="post_4.assets/image-5.png" alt="image-5"></p><p>页面源代码</p><p>F12成功打开页面源代码调试，可以看到flag就在源代码的注释中，简单题</p><p>本题主要考察对浏览器调试器的使用技巧，没有什么难度。</p><h2 id="robots"><a href="#robots" class="headerlink" title="robots"></a>robots</h2><p>进入到题目页面环境中，查看题目信息和相关描述。</p><p><img src="post_4.assets/image-6.png" alt="image-6">robots题目</p><p>题目描述中提到了robots协议，本菜鸡不知道什么是robots协议，但是可以肯定robots协议就是本题的突破点，我去搜索查找一下有关robots协议的相关信息。</p><p><img src="post_4.assets/image-7.png" alt="image-7">robots协议相关信息</p><p>根据百度百科的说明，其实robots协议就是网站目录下的robots.txt文件</p><p>预备的知识信息获取到了，下面进入到靶机环境，去拿flag</p><p><img src="post_4.assets/image-8.png" alt="image-8">靶机页面</p><p>靶机页面是个空白页面，在靶机地址后面输入/robots.txt尝试找到flag</p><p><img src="post_4.assets/image-9.png" alt="image-9"></p><p>进入到robots.txt页面寻找有关flag的相关信息</p><p><img src="post_4.assets/image-10.png" alt="image-10">robots.txt页面信息</p><p>根据robots.txt展示的页面信息，可知flag就在flag_1s_h3re.php文件中</p><p>那就进入到这个文件中</p><p><img src="post_4.assets/image-11.png" alt="image-11">flag_1s_h3re.php文件页面</p><p>成功拿到flag数据信息，题目也是简单题</p><p>这道题目主要考察robots协议的相关知识以及网站目录的部分知识，也是简单题，思路非常明确</p><h2 id="backup"><a href="#backup" class="headerlink" title="backup"></a>backup</h2><p>进入到题目页面中，寻找有用的题目突破信息</p><p><img src="post_4.assets/image-12-1024x292.png" alt="image-12-1024x292">backup题目</p><p>根据题目描述，这道题目是在考察备份文件，备份文件是解题的关键</p><p>根据备份文件的相关信息可知，备份文件通常都是后缀名.bak的文件</p><p>已有知识准备好了，现在进入到靶机环境中拿flag</p><p><img src="post_4.assets/image-13.png" alt="image-13">靶机页面</p><p>靶机直接就把提示摆到页面上面了，直接访问index.php.bak文件就可以了</p><p>一般来说index.php的备份文件就是index.php.bak文件</p><p>访问url/index.php.bak，备份文件成功被下载下来</p><p><img src="post_4.assets/image-14.png" alt="image-14">备份文件</p><p>打开备份文件寻找信息</p><p><img src="post_4.assets/image-15.png" alt="image-15">备份文件信息</p><p>发现flag数据就在备份文件中，题目解决，也是一道简单题目</p><p>题目主要考察的就是备份文件的相关知识，简单题，思路非常明确</p><h2 id="cookie"><a href="#cookie" class="headerlink" title="cookie"></a>cookie</h2><p>进入到题目页面，寻找与解题相关的信息</p><p><img src="post_4.assets/image-16-1024x282.png" alt="image-16-1024x282">cookie题目</p><p>题目描述和题目明显提示是cookie相关的知识，cookie的知识一般做web安全都是必须知道且需要了解的一个重要的知识点。这里搬出MDN上面对于<a href="https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Cookies">cookie</a>的说明，cookie知识不清楚的可以去MDN页面中了解</p><p><img src="post_4.assets/image-17.png" alt="image-17">MDN cookie</p><p>简单来说，cookie就是存储在用户服务器上的一段信息内容</p><p>可以使用浏览器的调试器查看该页面的cookie数据，准备知识现在已经完备。</p><p>进入到靶机环境，拿flag！</p><p><img src="post_4.assets/image-18.png" alt="image-18">靶机页面</p><p>靶机页面信息展示的很明确，就是cookie</p><p>打开F12调试器查看cookie信息</p><p><img src="post_4.assets/image-19-1024x234.png" alt="image-19-1024x234">cookie数据</p><p>发现有很多条cookie数据，不知道该选择哪一条cookie数据，我发现这些cookie的domain信息不太一样。有四条的domain信息是baidu.com，只有一条的domain信息是靶机的ip地址，看来需要的cookie信息就是domain信息是靶机ip地址的那条cookie</p><p><img src="post_4.assets/image-20.png" alt="image-20">靶机cookie数据</p><p>cookie的键值对是look-here:cookie.php，cookie.php显然不是flag数据，估计是想让我们访问这个文件，我们来访问一下这个文件</p><p><img src="post_4.assets/image-21.png" alt="image-21"></p><p>cookie.php页面信息</p><p>这个页面展示的内容也是非常简单的，让我们去看看response信息。</p><p>可能有人会问response是什么？response就是http头部信息的响应信息，在调试器的网络那一栏可以查看到页面的http头部信息。关于http头部信息的更多内容，可以访问<a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers">MDN的HTTP头部列表</a></p><p>打开浏览器的调试器</p><p><img src="post_4.assets/image-22-1024x140.png" alt="image-22-1024x140">网络响应数据</p><p>如果响应数据中没有任何信息，可以刷新一下页面来找到响应数据</p><p>然后我们选择响应数据中的cookie.php的数据信息</p><p><img src="post_4.assets/image-23.png" alt="image-23">cookie.php的响应信息</p><p>发现响应标头的信息中有flag数据，本题也就成功解出，也是简单题目，跟着引导走，很快就能拿到flag</p><p>题目主要考察cookie相关知识和htpp头的相关知识内容，这里也可以使用burp suite来抓包获取http信息，简单题，思路也相对比较流畅。</p><h2 id="disabled-button"><a href="#disabled-button" class="headerlink" title="disabled button"></a>disabled button</h2><p>看到这个题目就大致知道这道题目的考察目标了，应该是一道非常简单的题目</p><p>来看看题目内容有什么具体的描述信息</p><p><img src="post_4.assets/image-24-1024x287.png" alt="img">disabled_button题目</p><p>根据题目描述可以知道，这道题目是考察前端知识的。根据题目disabled_button，这道题目很可能是在考察html标签属性的，下面我们进入到题目中一探究竟</p><p><img src="post_4.assets/image-25.png" alt="img">靶机页面</p><p>页面展示的信息非常清晰不能按的按钮，而且flag信息就藏在这个按钮后面</p><p>直接点开F12查看源代码</p><p><img src="post_4.assets/image-26.png" alt="img">源代码检查</p><p>发现input标签有关disabled属性，我们将disabled属性删除，按钮就可以按了</p><p><img src="post_4.assets/image-27.png" alt="img">源代码修改</p><p>然后返回到页面上去，发现按钮可以被按下</p><p><img src="post_4.assets/image-28.png" alt="img">按钮页面</p><p>按下按钮，查看可以获取到的信息</p><p><img src="post_4.assets/image-29.png" alt="img">flag信息</p><p>成功获取到flag信息，题目解决，这道题目非常简单，应该是道签到题</p><p>题目主要考察前端的html知识，签到题</p><h2 id="weak-auth"><a href="#weak-auth" class="headerlink" title="weak auth"></a>weak auth</h2><p>进入到题目页面，查看可以利用的信息及提示</p><p><img src="post_4.assets/image-30-1024x277.png" alt="img">weak_auth</p><p>根据题目和题目描述信息可以知道，这道题目是一个登录页面，而且采用的是弱口令进行认证的页面。</p><p>考察的信息应该是暴力破解的知识以及暴力破解的工具使用。</p><p>这里说一下暴力破解的内容知识：</p><p>暴力破解也叫蛮力攻击，是一种非常无脑的攻击手段，经常会和社会工程学一起采用来达到成功破解用户密码的效果。</p><p>蛮力攻击（英语：Brute-force attack），又称为穷举攻击（英语：Exhaustive attack）或暴力破解，是一种密码分析的方法，即将密码进行逐个推算直到找出真正的密码为止。例如：一个已知是四位数并且全部由阿拉伯数字组成的密码，其可能共有10000种组合，因此最多尝试9999次就能找到正确的密码。理论上除了具有完善保密性的密码以外，利用这种方法可以破解任何一种密码，问题只在于如何缩短试误时间。有些人运用计算机来增加效率，有些人透过字典攻击（英语：Dictionary attack）来缩小密码组合的范围。1</p><p>如果要解决这道题目，就必不可少一些暴力破解会使用的工具来进行暴力破解。暴力破解工具有很多，一般来说，web安全会有一些比较常用的暴力破解工具，这道题目可能需要使用到kali操作系统来辅助解题。常用的暴力破解工具一般有：Hydra，Medusa，Burp suite。</p><p>这里可能使用到Hydra进行暴力破解，这里说明一些Hydra的暴力破解的方法和相关参数</p><p><strong>hydra</strong> 是一个支持众多协议的爆破工具，已经集成到KaliLinux中，直接在终端打开即可。2</p><p>常用的hydra的暴力破解命令：</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><code class="hljs stylus"><span class="hljs-number">1</span>、破解ssh： <br>hydra -l 用户名 -<span class="hljs-selector-tag">p</span> 密码字典 -t 线程 -vV -e ns ip ssh <br>hydra -l 用户名 -<span class="hljs-selector-tag">p</span> 密码字典 -t 线程 -o save<span class="hljs-selector-class">.log</span> -vV ip ssh <br><br><br><span class="hljs-number">2</span>、破解ftp： <br>hydra ip ftp -l 用户名 -P 密码字典 -t 线程(默认<span class="hljs-number">16</span>) -vV <br>hydra ip ftp -l 用户名 -P 密码字典 -e ns -vV <br><br><br><span class="hljs-number">3</span>、get方式提交，破解web登录： <br>hydra -l 用户名 -<span class="hljs-selector-tag">p</span> 密码字典 -t 线程 -vV -e ns ip http-get /admin/ <br>hydra -l 用户名 -<span class="hljs-selector-tag">p</span> 密码字典 -t 线程 -vV -e ns -f ip http-get /admin/index<span class="hljs-selector-class">.php</span><br><br><br><span class="hljs-number">4</span>、post方式提交，破解web登录： <br>hydra -l 用户名 -P 密码字典 -s <span class="hljs-number">80</span> ip http-post-<span class="hljs-selector-tag">form</span> <span class="hljs-string">&quot;/admin/login.php:username=^USER^&amp;password=^PASS^&amp;submit=login:sorry password&quot;</span> <br>hydra -t <span class="hljs-number">3</span> -l admin -P pass<span class="hljs-selector-class">.txt</span> -o out<span class="hljs-selector-class">.txt</span> -f <span class="hljs-number">10.36</span>.<span class="hljs-number">16.18</span> http-post-<span class="hljs-selector-tag">form</span> <span class="hljs-string">&quot;login.php:id=^USER^&amp;passwd=^PASS^:&lt;title&gt;wrong username or password&lt;/title&gt;&quot;</span> <br>（参数说明：-t同时线程数<span class="hljs-number">3</span>，-l用户名是admin，字典pass.txt，保存为out.txt，-f 当破解了一个密码就停止， <span class="hljs-number">10.36</span>.<span class="hljs-number">16.18</span>目标ip，http-post-form表示破解是采用http的post方式提交的表单密码破解,&lt;title&gt;中 的内容是表示错误猜解的返回信息提示。） <br><br><br><span class="hljs-number">5</span>、破解https： <br>hydra -m /index<span class="hljs-selector-class">.php</span> -l muts -P pass<span class="hljs-selector-class">.txt</span> <span class="hljs-number">10.36</span>.<span class="hljs-number">16.18</span> https <br><br><span class="hljs-number">6</span>、破解teamspeak： <br>hydra -l 用户名 -P 密码字典 -s 端口号 -vV ip teamspeak <br><br><span class="hljs-number">7</span>、破解cisco： <br>hydra -P pass<span class="hljs-selector-class">.txt</span> <span class="hljs-number">10.36</span>.<span class="hljs-number">16.18</span> cisco <br>hydra -m cloud -P pass<span class="hljs-selector-class">.txt</span> <span class="hljs-number">10.36</span>.<span class="hljs-number">16.18</span> cisco-enable <br><br><span class="hljs-number">8</span>、破解smb： <br>hydra -l administrator -P pass<span class="hljs-selector-class">.txt</span> <span class="hljs-number">10.36</span>.<span class="hljs-number">16.18</span> smb <br><br><span class="hljs-number">9</span>、破解pop3： <br>hydra -l muts -P pass<span class="hljs-selector-class">.txt</span> my<span class="hljs-selector-class">.pop3</span><span class="hljs-selector-class">.mail</span> pop3 <br><br><span class="hljs-number">10</span>、破解rdp： <br>hydra ip rdp -l administrator -P pass<span class="hljs-selector-class">.txt</span> -V <br><br><span class="hljs-number">11</span>、破解http-proxy： <br>hydra -l admin -P pass<span class="hljs-selector-class">.txt</span> http-proxy:<span class="hljs-comment">//10.36.16.18 </span><br><br><span class="hljs-number">12</span>、破解imap： <br>hydra -L user<span class="hljs-selector-class">.txt</span> -<span class="hljs-selector-tag">p</span> secret <span class="hljs-number">10.36</span>.<span class="hljs-number">16.18</span> imap PLAIN <br>hydra -C defaults<span class="hljs-selector-class">.txt</span> -<span class="hljs-number">6</span> imap:<span class="hljs-comment">//[fe80::2c:31ff:fe12:ac11]:143/PLAIN</span><br></code></pre></td></tr></table></figure><p>这些常用的命令解决这道题目应该是足够的。</p><p>现在工具和知识都已经准备完毕了，进入靶机来一探究竟</p><p><img src="post_4.assets/image-31.png" alt="img"></p><p>weak_auth页面</p><p>非常简单的一个登录认证页面，先进行简单的密码猜测</p><p>使用root:root进行登录尝试</p><p><img src="post_4.assets/image-32.png" alt="img"></p><p>弹出提示，please login as admin，说明登录的用户名必须要素admin</p><p>下面试试admin:admin进行登录尝试</p><p><img src="post_4.assets/image-33.png" alt="img"></p><p>弹出提示，password error，登录错误的提示，然后点击确定查看一下页面的源代码</p><p><img src="post_4.assets/image-34.png" alt="img">靶机error页面源代码</p><p>发现登录错误关键字error，然后查看页面的响应标头确定传输方式</p><p><img src="post_4.assets/image-35.png" alt="img"></p><p>发现页面数据的传输方式是post方式进行传输的。而且页面存在着跳转，hydra的易用性相对较差，这里需要选用burpsuite进行暴力破解</p><p>进入到kali系统中，抓取页面信息进行暴力破解攻击</p><p><img src="post_4.assets/image-36.png" alt="img">bp抓到的数据包</p><p>右键将页面发送到intruder页面中</p><p><img src="post_4.assets/image-37.png" alt="img"></p><p>然后点击intruder页面进行暴力破解的设置</p><p><img src="post_4.assets/image-38-1024x287.png" alt="img"></p><p>调整好参数，然后进入到option的配置页面中进行攻击，（最好找一个弱口令字典）</p><p><img src="post_4.assets/image-41-1024x490.png" alt="img"></p><p>简单设置进行暴力破解的字典，然后设置匹配项。由于我们知道页面登录失败的时候会出现password error的选项，因此进入到option页面中设置匹配。</p><p><img src="post_4.assets/image-42.png" alt="img"></p><p>点击clear将所有的匹配规则清除</p><p><img src="post_4.assets/image-43.png" alt="img"></p><p>点击add将error的匹配规则添加进去</p><p><img src="post_4.assets/image-44.png" alt="img"></p><p>然后点击start attack开始攻击</p><p><img src="post_4.assets/image-45.png" alt="img"></p><p>稍微等一下，等攻击结果出现</p><p><img src="post_4.assets/image-46.png" alt="img"></p><p>发现123456这个密码没有匹配到error的规则，然后进入到页面中将123456密码输入进去</p><p><img src="post_4.assets/image-47.png" alt="img"></p><p>进入到跳转页面中，成功找到flag数据。</p><p>本题也成功解决，题目的思路也是比较简单的。考察的要点就是暴力破解，通过暴力破解解决问题。</p><p>题目属于简单题。</p><h2 id="simple-php"><a href="#simple-php" class="headerlink" title="simple php"></a>simple php</h2><p>这道题的题目是simple_php，应该是一道考察php代码的简单题目</p><p>进入到题目页面，来获取到更多信息</p><p><img src="post_4.assets/image-48-1024x287.png" alt="img">simple_php题目</p><p>页面中的题目描述信息也是在说php代码的问题，这道题目应该是在考察php代码的简单使用情况</p><p>进入到靶机环境来一探究竟</p><p><img src="post_4.assets/image-49.png" alt="img"></p><p>直接展示出源代码，这应该是一道简单的php代码审计题目，本菜鸡的php基础还可以，这道题目主要是考察php代码的特性和缺陷。</p><p>这道题目中有三个特性进行了考察：</p><ol><li>php中的字符串在进行比较的时候都会被当作0来处理</li><li>php中的变量如果被赋值了数字加字符，在进行数值判断的时候，字符会被忽略</li><li>php中的<code>is_numeric()</code>函数会判断变量是否是纯数字，如果是纯数字就返回true，如果不是纯数字就返回false</li></ol><p>有时候php代码审计的题目遇到不认识的代码或者函数，可以进行搜索引擎的使用和查找</p><p>代码可控的地方是get传输的数据，a和b参数作为数据接收并进行传递的</p><p>由于这道题目比较简单，直接在url上面进行构造</p><p>构造payload：<code>url?a=Flag&amp;b=1235s</code></p><p><img src="post_4.assets/image-50.png" alt="img"></p><p>成功获取到flag数据，题目解决。</p><p>题目主要考察get传输方式和php代码的特性，思路也比较简单，分析代码的逻辑进行简单的注入就可以解决问题。属于简单题目。</p><h2 id="get-post"><a href="#get-post" class="headerlink" title="get post"></a>get post</h2><p>看题目，这道题目应该是考察http的传输数据的方式，get传输方式和post传输数据的方式</p><p>点开题目，希望可以从题目页面中获取到更多的信息</p><p><img src="post_4.assets/image-51-1024x307.png" alt="img">get_post题目</p><p>题目描述也是说用get和post方式，看来这道题目的关键点就是get和post传输数据的方式。</p><p>由于这里涉及的post方式的传输，这里需要使用一个Hackbar的插件攻击来辅助进行注入进攻来获取到flag数据。这里给出hackbar的GitHub地址：<a href="https://github.com/Hack-Free/HackBar%EF%BC%8C%E5%A6%82%E6%9E%9C%E6%B2%A1%E6%9C%89%E8%BF%99%E4%B8%AA%E5%B7%A5%E5%85%B7%E5%8F%AF%E4%BB%A5%E8%BF%9B%E8%A1%8C%E4%B8%8B%E8%BD%BD%E4%BD%BF%E7%94%A8%E3%80%82">https://github.com/Hack-Free/HackBar，如果没有这个工具可以进行下载使用。</a></p><p>现在工具齐全了，可以进行尝试去拿flag了，打开靶机进入到环境中</p><p><img src="post_4.assets/image-52.png" alt="img"></p><p>页面中展示的信息非常明确，而且比较明了。为了方便操作，进入到kali系统中的已装好hackbar的firefox浏览器中进行操作。</p><p><img src="post_4.assets/image-53-1024x222.png" alt="img"></p><p>首先使用get方法进行提交，点击execut进行传输</p><p><img src="post_4.assets/image-54.png" alt="img"></p><p>页面内容发生了变化，这次使用post数据进行传输</p><p><img src="post_4.assets/image-55-1024x333.png" alt="img"></p><p>点击execute进行传输数据</p><p><img src="post_4.assets/image-56.png" alt="img"></p><p>数据传输过去后，页面发生变化，然后flag数据就展示在眼前，题目解决。</p><p>这道题目的思路非常清晰，就是引导性的题目，没有什么难度，应该是道签到题目。</p><p>题目考察的知识点是http传输数据的方式，属于签到题。</p><h2 id="xff-referer"><a href="#xff-referer" class="headerlink" title="xff referer"></a>xff referer</h2><p>刚开始看到这个题目标题的时候还是有点懵逼的，因为本菜鸡并不知道什么是xff和referer</p><p>于是使用搜索引擎解决一下问题</p><p><strong><code>X-Forwarded-For</code></strong> (XFF) 在客户端访问服务器的过程中如果需要经过HTTP代理或者负载均衡服务器，可以被用来获取最初发起请求的客户端的IP地址，这个消息首部成为事实上的标准。在消息流从客户端流向服务器的过程中被拦截的情况下，服务器端的访问日志只能记录代理服务器或者负载均衡服务器的IP地址。如果想要获得最初发起请求的客户端的IP地址的话，那么 X-Forwarded-For 就派上了用场。3</p><p><code>**Referer**</code> 请求头包含了当前请求页面的来源页面的地址，即表示当前页面是通过此来源页面里的链接进入的。服务端一般使用 <code>Referer</code> 请求头识别访问来源，可能会以此进行统计分析、日志记录以及缓存优化等。4</p><p>发现Xff和Referer就是一个可以进行IP代理的东西和一个可以进行来源记录的东西</p><p>再去查一下Xff和Referer的语法格式，确保对于Xff和Referer的知识掌握的比较完善。</p><p>于是再去MDN上查看一波：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">X</span>-Forwarded-For: &lt;client&gt;, &lt;proxy<span class="hljs-number">1</span>&gt;, &lt;proxy<span class="hljs-number">2</span>&gt;<br><br><span class="hljs-comment"># 示例</span><br><span class="hljs-attribute">X</span>-Forwarded-For: <span class="hljs-number">2001</span>:db<span class="hljs-number">8</span>:<span class="hljs-number">85</span>a<span class="hljs-number">3</span>:<span class="hljs-number">8</span>d<span class="hljs-number">3</span>:<span class="hljs-number">1319</span>:<span class="hljs-number">8</span>a<span class="hljs-number">2</span>e:<span class="hljs-number">370</span>:<span class="hljs-number">7348</span><br><br><span class="hljs-attribute">X</span>-Forwarded-For: <span class="hljs-number">203.0.113.195</span><br><br><span class="hljs-attribute">X</span>-Forwarded-For: <span class="hljs-number">203.0.113.195</span>, <span class="hljs-number">70.41.3.18</span>, <span class="hljs-number">150.172.238.178</span><br><span class="hljs-attribute">Referer</span>: &lt;url&gt;<br><br><span class="hljs-comment"># 示例</span><br><span class="hljs-attribute">Referer</span>: https://developer.mozilla.org/en-US/docs/Web/JavaScript<br></code></pre></td></tr></table></figure><p>点开题目查看，题目中又有些什么信息</p><p><img src="post_4.assets/image-57-1024x287.png" alt="img">xff_referer题目</p><p>根据题目描述，xff和referer是可以伪造的，可以知道这道题目应该是伪造xff和referer的题目，由于xff和referer都是http头部的信息，所以需要使用burp suite进行抓包来伪造xff和referer信息，需要先启动一下kali操作系统。</p><p>目前，知识基础和工具基础都准备好了，进入到靶机环境</p><p><img src="post_4.assets/image-58.png" alt="img">靶机环境</p><p>要求ip必须为123.123.123.123，用burp suite抓到数据包，修改xff数据来进行伪造</p><p><img src="post_4.assets/image-59.png" alt="img"></p><p>然后进行放行来查看页面情况</p><p><img src="post_4.assets/image-60.png" alt="img"></p><p>页面返回了一个必须来自<a href="https://www.google.com/">https://www.google.com</a></p><p>再次抓包，设置一下referer和xff的信息</p><p><img src="post_4.assets/image-61.png" alt="img"></p><p>将数据包放行，然后查看页面信息</p><p><img src="post_4.assets/image-62.png" alt="img"></p><p>最后，页面成功出现flag信息，题目成功解决，题目比较简单，具有引导性</p><p>题目属于简单的题目，应该算是签到题，题目主要考察对于xff和referer的http头部信息的了解和掌握，思路比较流程，具有引导性。</p><h2 id="webshell"><a href="#webshell" class="headerlink" title="webshell"></a>webshell</h2><p>看到这个·题目，首先第一反应是上传php一句话木马拿webshell。可能有人不解，什么是webshell？什么是一句话木马？这里搬出百度百科的解释，对webshell简单说明：</p><p>webshell就是以asp、php、jsp或者cgi等网页文件形式存在的一种代码执行环境，也可以将其称做为一种网页后门。黑客在入侵了一个网站后，通常会将asp或php后门文件与网站服务器WEB目录下正常的网页文件混在一起，然后就可以使用浏览器来访问asp或者php后门，得到一个命令执行环境，以达到控制网站服务器的目的。5</p><p>webshell简单来说就是命令执行的环境，而一句话木马就是在创建一个可以连接到网站的命令执行环境的一个后门程序，这个后门程序通常都是比较简单，比较小的文件。可以通过网站的文件上传漏洞进行文件上传，创建后门木马。</p><p>进入到题目页面，看看可以获取到什么额外的信息：</p><p><img src="post_4.assets/image-63-1024x274.png" alt="img">webshell题目</p><p>根据题目描述，这道题目应是考察一句话木马的题目，而且是php一句话木马的题目。</p><p>根据目前的推出和知识分析，进入环境来看看怎么拿flag</p><p><img src="post_4.assets/image-64.png" alt="img">靶机环境</p><p>靶机环境中的页面直接把页面中写入的php一句话木马展示出来了，是通过post方式进行参数传递的。</p><p>这道题目可以使用hackbar插件进行post数据的传输，首先进行hello world输出来测试webshell的稳定性，根据页面回显情况来进行下一步操作。</p><p><img src="post_4.assets/image-66-1024x352.png" alt="img"></p><p>查看一下，页面的回显情况</p><p><img src="post_4.assets/image-71.png" alt="img"></p><p>页面将hello world成功输出到页面上面，说明页面会直接将代码执行结果回显到页面上面，回显效果良好。</p><p>接下来，讲一个的php的小技巧：</p><blockquote><p>php代码中的反引号```可以直接执行终端shell命令.并返回输出</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span> <br>    <span class="hljs-keyword">echo</span> `ls`; <span class="hljs-comment">#会将ls命令的输出结果输出到php页面上面</span><br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>下面我们就可以根据这个小技巧来构造payload：<code>shell=echo </code>ls<code>;</code></p><p><img src="post_4.assets/image-67-1024x340.png" alt="img"></p><p>查看页面返回的结果</p><p><img src="post_4.assets/image-68.png" alt="img"></p><p>发现网站的站点目录下有两个文件，一个是index.php文件，一个是flag.txt文件</p><p>显然flag文件肯定就是目标文件，需要查看到flag.txt文件中究竟写了些什么样的内容，flag.txt文件很可能藏着flag文件</p><p>构造payload：<code>shell=echo </code>cat flag.txt<code>;</code></p><p><img src="post_4.assets/image-69-1024x363.png" alt="img"></p><p>查看页面显示的结果</p><p><img src="post_4.assets/image-70.png" alt="img"></p><p>发现flag.txt文件中写的就是flag数据，题目解决</p><p>题目主要考察php一句话木马，php特性和linux命令的简单使用，整体思路还是比较流畅的，题目难度比较简单，顺着思路就可以解决了。当然此题有多种解法。</p><h2 id="command-execution"><a href="#command-execution" class="headerlink" title="command execution"></a>command execution</h2><p>看到题目，可能是考察命令执行漏洞的题目，从题目也获取不到太多信息</p><p>直接点开题目页面，来看看有没有更多的信息</p><p><img src="post_4.assets/image-72-1024x290.png" alt="img">command_execution题目</p><p>题目描述说是ping功能，题目可能于ping功能有些出入，进入靶场环境看看情况</p><p><img src="post_4.assets/image-73.png" alt="img"></p><p>靶机环境</p><p>页面非常简单，好像就是一个ping功能的页面，首先试试使用127.0.0.1地址进行测试</p><p><img src="post_4.assets/image-74.png" alt="img"></p><p>发现这是一个命令执行环境，可控的地方就是输入框</p><p>来分析一下输入框的输入模式：</p><blockquote><p>输入框可以输入ip地址和url地址</p><p>输入的内容前方会被增加<code>ping -c 3 </code>的代码</p><p>输入内容的后面不会增加任何额外代码</p><p>页面输出内容会把终端输出内容返回</p></blockquote><p>因此，这里可以使用一点shell的语法技巧来构造payload</p><p><code>&amp;&amp;</code>在shell语法中是前面的命令执行成功后继续执行后面的代码</p><figure class="highlight dos"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dos"><span class="hljs-built_in">ping</span> -c <span class="hljs-number">3</span> <span class="hljs-number">127</span>.<span class="hljs-number">0</span>.<span class="hljs-number">0</span>.<span class="hljs-number">1</span> &amp;&amp; ls # 会先执行<span class="hljs-built_in">ping</span>命令，<span class="hljs-built_in">ping</span>命令执行成功会再执行ls命令<br></code></pre></td></tr></table></figure><p>于是构造payload：<code>127.0.0.1 &amp;&amp; ls</code> ，并输入到输入框中来执行</p><p><img src="post_4.assets/image-75.png" alt="img"></p><p>发现网站页面下没有藏有flag文件，下一个可能的目录是home目录或是root目录</p><p>访问root目录需要权限，于是先查看一下ping功能的用户权限</p><p>构造payload：<code>127.0.0.1 &amp;&amp; id</code> ，并输入到输入框中来执行</p><p><img src="post_4.assets/image-76.png" alt="img"></p><p>发现ping的权限仅仅知识apache的权限，使用的服务器很可能是Ubuntu服务</p><p>构造payload：<code>127.0.0.1 &amp;&amp; uname -a</code> ，并输入到输入框中执行</p><p><img src="post_4.assets/image-77.png" alt="img"></p><p>发现服务器确实是Ubuntu服务器</p><p>根据目前收集到的信息，可能只能访问到home目录下，那就先尝试查看到home目录，如果home目录下没有再尝试提权进入到root目录下</p><p>构造查看home目录的payload：<code>127.0.0.1 &amp;&amp; ls /home </code>，输入到输入框中执行</p><p><img src="post_4.assets/image-78.png" alt="img"></p><p>发现home目录下存在有flag文件，让本菜鸡来瞧瞧这个flag.txt里面写的啥</p><p>构造payload：<code>127.0.0.1 &amp;&amp; cat /home/flag.txt </code>，输入到输入框中执行</p><p><img src="post_4.assets/image-79.png" alt="img"></p><p>发现flag.txt里面写的就是flag数据，题目解决</p><p>题目主要考察linux命令行的使用以及对于命令执行漏洞的觉察，题目的解题思路还是比较流畅的，题目应该也属于简单题。难度并不是很高。</p><h2 id="simple-js"><a href="#simple-js" class="headerlink" title="simple js"></a>simple js</h2><p>看到题目，应该是一个简单JavaScript代码审计的题目</p><p>进入到题目页面中，希望可以获取到更多相关的数据</p><p><img src="post_4.assets/image-80-1024x304.png" alt="img">simple_js题目</p><p>看到题目的难度系数，可知这道题目应该不简单，网页一直输入不对密码，这应该是一个提示</p><p>下面就直接进入到靶机环境来看看情况</p><p><img src="post_4.assets/image-81.png" alt="img"></p><p>页面直接就是一个提示框，先随便输入点内容</p><p><img src="post_4.assets/image-82.png" alt="img"></p><p>就报出了另一个提示框，然后页面内容是空白的</p><p><img src="post_4.assets/image-83.png" alt="img"></p><p>这种情况下，只能尝试从F12检查源代码中找到一些有用的信息</p><p><img src="post_4.assets/image-84.png" alt="img"></p><p>在源代码检查的过程中找到了js的代码，这道题目应该是对js源代码的审计</p><figure class="highlight taggerscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs taggerscript">function dechiffre(pass_enc) &#123;<br>    var pass = &quot;70,65,85,88,32,80,65,83,83,87,79,82,68,32,72,65,72,65&quot;;<br>    var tab = pass_enc.split(&#x27;,&#x27;);<br>    var tab2 = pass.split(&#x27;,&#x27;);<br>    var i, j, k, l = 0,<br>        m, n, o, p = &quot;&quot;;<br>    i = 0;<br>    j = tab.length;<br>    k = j + (l) + (n = 0);<br>    n = tab2.length;<br>    for (i = (o = 0); i &lt; (k = j = n); i++) &#123;<br>        o = tab[i - l];<br>        p += String.fromCharCode((o = tab2[i]));<br>        if (i == 5) break;<br>    &#125;<br>    for (i = (o = 0); i &lt; (k = j = n); i++) &#123;<br>        o = tab[i - l];<br>        if (i &gt; 5 &amp;&amp; i &lt; k - 1)<br>            p += String.fromCharCode((o = tab2[i]));<br>    &#125;<br>    p += String.fromCharCode(tab2[17]);<br>    pass = p;<br>    return pass;<br>&#125;<br>String[&quot;fromCharCode&quot;](dechiffre(&quot;<span class="hljs-symbol">\x</span>35<span class="hljs-symbol">\x</span>35<span class="hljs-symbol">\x</span>2c<span class="hljs-symbol">\x</span>35<span class="hljs-symbol">\x</span>36<span class="hljs-symbol">\x</span>2c<span class="hljs-symbol">\x</span>35<span class="hljs-symbol">\x</span>34<span class="hljs-symbol">\x</span>2c<span class="hljs-symbol">\x</span>37<span class="hljs-symbol">\x</span>39<span class="hljs-symbol">\x</span>2c<span class="hljs-symbol">\x</span>31<span class="hljs-symbol">\x</span>31<span class="hljs-symbol">\x</span>35<span class="hljs-symbol">\x</span>2c<span class="hljs-symbol">\x</span>36<span class="hljs-symbol">\x</span>39<span class="hljs-symbol">\x</span>2c<span class="hljs-symbol">\x</span>31<span class="hljs-symbol">\x</span>31<span class="hljs-symbol">\x</span>34<span class="hljs-symbol">\x</span>2c<span class="hljs-symbol">\x</span>31<span class="hljs-symbol">\x</span>31<span class="hljs-symbol">\x</span>36<span class="hljs-symbol">\x</span>2c<span class="hljs-symbol">\x</span>31<span class="hljs-symbol">\x</span>30<span class="hljs-symbol">\x</span>37<span class="hljs-symbol">\x</span>2c<span class="hljs-symbol">\x</span>34<span class="hljs-symbol">\x</span>39<span class="hljs-symbol">\x</span>2c<span class="hljs-symbol">\x</span>35<span class="hljs-symbol">\x</span>30&quot;));<br><br>h = window.prompt(&#x27;Enter password&#x27;);<br>alert(dechiffre(h));<br></code></pre></td></tr></table></figure><p>然后对这段js代码进行简单分析：</p><blockquote><p>\1. 从js代码整体来看，代码先定义了一个dechiffre的函数，然后定义了一个字符串数组，然后使用了两个功能性函数进行弹窗。</p><p>\2. 整段js代码的核心应该是应该是定义的dechiffre的函数，对于dechiffre函数的分析应该就是解决这道题目的关键性问题</p></blockquote><p>下面对JS源代码中的dechiffre函数进行分析：</p><p>首先将dechiffre函数内部进行划分</p><figure class="highlight nix"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs nix">function dechiffre(pass_enc) &#123;<br><br>    // 变量定义区<br>    var <span class="hljs-attr">pass</span> = <span class="hljs-string">&quot;70,65,85,88,32,80,65,83,83,87,79,82,68,32,72,65,72,65&quot;</span>;<br>    var <span class="hljs-attr">tab</span> = pass_enc.split(&#x27;,&#x27;);<br>    var <span class="hljs-attr">tab2</span> = pass.split(&#x27;,&#x27;);<br>    var i, j, k, <span class="hljs-attr">l</span> = <span class="hljs-number">0</span>,<br>        m, n, o, <span class="hljs-attr">p</span> = <span class="hljs-string">&quot;&quot;</span>;<br><br>    // 变量处理区<br>    <span class="hljs-attr">i</span> = <span class="hljs-number">0</span>;<br>    <span class="hljs-attr">j</span> = tab.length;<br>    <span class="hljs-attr">k</span> = j + (l) + (<span class="hljs-attr">n</span> = <span class="hljs-number">0</span>);<br>    <span class="hljs-attr">n</span> = tab2.length;<br><br>    // 逻辑处理区<br>    for (<span class="hljs-attr">i</span> = (<span class="hljs-attr">o</span> = <span class="hljs-number">0</span>); i &lt; (<span class="hljs-attr">k</span> = <span class="hljs-attr">j</span> = n); i++) &#123;<br>        <span class="hljs-attr">o</span> = tab[i - l];<br>        p += String.fromCharCode((<span class="hljs-attr">o</span> = tab2[i]));<br>        <span class="hljs-keyword">if</span> (<span class="hljs-attr">i</span> == <span class="hljs-number">5</span>) break;<br>    &#125;<br>    for (<span class="hljs-attr">i</span> = (<span class="hljs-attr">o</span> = <span class="hljs-number">0</span>); i &lt; (<span class="hljs-attr">k</span> = <span class="hljs-attr">j</span> = n); i++) &#123;<br>        <span class="hljs-attr">o</span> = tab[i - l];<br>        <span class="hljs-keyword">if</span> (i &gt; <span class="hljs-number">5</span> &amp;&amp; i &lt; k - <span class="hljs-number">1</span>)<br>            p += String.fromCharCode((<span class="hljs-attr">o</span> = tab2[i]));<br>    &#125;<br><br>    // 最终输出区<br>    p += String.fromCharCode(tab2[<span class="hljs-number">17</span>]);<br>    <span class="hljs-attr">pass</span> = p;<br>    return pass;<br>&#125;<br></code></pre></td></tr></table></figure><p>js函数被划分成四个区域：</p><ol><li>变量定义区</li><li>变量处理区</li><li>逻辑处理区</li><li>最终输出区</li></ol><p>下面对这四个分区进行逐一分析</p><p>变量定义区：</p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs stata"><span class="hljs-keyword">var</span> pass = <span class="hljs-string">&quot;70,65,85,88,32,80,65,83,83,87,79,82,68,32,72,65,72,65&quot;</span>;<br>    <span class="hljs-keyword">var</span> <span class="hljs-keyword">tab</span> = pass_enc.<span class="hljs-keyword">split</span>(&#x27;,&#x27;);<br>    <span class="hljs-keyword">var</span> <span class="hljs-keyword">tab2</span> = pass.<span class="hljs-keyword">split</span>(&#x27;,&#x27;);<br>    <span class="hljs-keyword">var</span> i, j, k, <span class="hljs-keyword">l</span> = 0,<br>        <span class="hljs-keyword">m</span>, <span class="hljs-keyword">n</span>, o, p = <span class="hljs-string">&quot;&quot;</span>;<br></code></pre></td></tr></table></figure><blockquote><p>\1. 定义了一个pass变量并赋值”70,65,85,88,32,80,65,83,83,87,79,82,68,32,72,65,72,65”</p><p>\2. 定义了一个tab变量并赋值pass_enc参数进行分隔成数组</p><p>\3. 定义了一个tab2变量并赋值pass变量进行分隔成数组[70,65,85,88,32,80,65,83,83,87,79,82,68,32,72,65,72,65]</p><p>\4. 定义了变量i，j，k，l并赋值为0，定义了变量m，n，o，p并赋值为“”</p></blockquote><p>变量处理区</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">i</span> = <span class="hljs-number">0</span><span class="hljs-comment">;</span><br><span class="hljs-attr">j</span> = tab.length<span class="hljs-comment">;</span><br><span class="hljs-attr">k</span> = j + (l) + (n = <span class="hljs-number">0</span>)<span class="hljs-comment">;</span><br><span class="hljs-attr">n</span> = tab2.length<span class="hljs-comment">;</span><br></code></pre></td></tr></table></figure><blockquote><p>\1. 将变量i再次赋值为0</p><p>\2. 将变量j赋值为tab的长度</p><p>\3. 将变量k赋值为j的值加上l和n=0的数值</p><p>\4. 将变量n赋值为tab2的长度，即n=18</p></blockquote><p>逻辑处理区</p><figure class="highlight nix"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs nix">for (<span class="hljs-attr">i</span> = (<span class="hljs-attr">o</span> = <span class="hljs-number">0</span>); i &lt; (<span class="hljs-attr">k</span> = <span class="hljs-attr">j</span> = n); i++) &#123;<br>    <span class="hljs-attr">o</span> = tab[i - l];<br>    p += String.fromCharCode((<span class="hljs-attr">o</span> = tab2[i]));<br>    <span class="hljs-keyword">if</span> (<span class="hljs-attr">i</span> == <span class="hljs-number">5</span>) break;<br>&#125;<br>for (<span class="hljs-attr">i</span> = (<span class="hljs-attr">o</span> = <span class="hljs-number">0</span>); i &lt; (<span class="hljs-attr">k</span> = <span class="hljs-attr">j</span> = n); i++) &#123;<br>    <span class="hljs-attr">o</span> = tab[i - l];<br>    <span class="hljs-keyword">if</span> (i &gt; <span class="hljs-number">5</span> &amp;&amp; i &lt; k - <span class="hljs-number">1</span>)<br>        p += String.fromCharCode((<span class="hljs-attr">o</span> = tab2[i]));<br>&#125;<br></code></pre></td></tr></table></figure><blockquote><p>\1. 对于第一个循环，初始值i被赋值为0，限制条件是i&lt;18，循环条件是i++</p><p>   循环内部是对于o变量的处理，第一个赋值语句是无用的赋值语句，由于下面的语句会对o进行   重新赋值处理。下面<code>p += String.fromCharCode((o = tab2[i]));</code>语句涉及了string对象和fromCharCode（）函数。经过搜索和查询，发现fromcharcode函数是将unicode值转换为字符的函数，属于String对象的api。这条语句的作用是对p变量进行累计赋值处理。如果i==5循环就结束。</p><p>\2. 对于第二个循环，初始值i被赋值为0，限制条件是i&lt;18，循环条件是i++</p><p>   循环内部依旧是对于o变量的处理，还是和第一个循环非常类似的处理，都是最终对于p变量进行累计赋值。</p><p>\3. 两个循环都是对于p变量进行累加赋值。</p></blockquote><p>最终输出区</p><figure class="highlight fortran"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs fortran">p += String.fromCharCode(tab2[<span class="hljs-number">17</span>]);<br><span class="hljs-keyword">pass</span> = p;<br><span class="hljs-keyword">return</span> <span class="hljs-keyword">pass</span>;<br></code></pre></td></tr></table></figure><blockquote><p>\1. 仍然是对p变量进行赋值处理</p><p>\2. 将p的值赋值给pass</p><p>\3. 将pass变量返回</p></blockquote><p>总体对这个函数进行分析，这个函数根本没有涉及任何传入参数的处理情况，简单来说就是没有tab数组任何事情。无论传入什么变量都只返回tab2数组的数据。</p><p>再看看代码最后的调用情况</p><figure class="highlight taggerscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs taggerscript">String[&quot;fromCharCode&quot;](dechiffre(&quot;<span class="hljs-symbol">\x</span>35<span class="hljs-symbol">\x</span>35<span class="hljs-symbol">\x</span>2c<span class="hljs-symbol">\x</span>35<span class="hljs-symbol">\x</span>36<span class="hljs-symbol">\x</span>2c<span class="hljs-symbol">\x</span>35<span class="hljs-symbol">\x</span>34<span class="hljs-symbol">\x</span>2c<span class="hljs-symbol">\x</span>37<span class="hljs-symbol">\x</span>39<span class="hljs-symbol">\x</span>2c<span class="hljs-symbol">\x</span>31<span class="hljs-symbol">\x</span>31<span class="hljs-symbol">\x</span>35<span class="hljs-symbol">\x</span>2c<span class="hljs-symbol">\x</span>36<span class="hljs-symbol">\x</span>39<span class="hljs-symbol">\x</span>2c<span class="hljs-symbol">\x</span>31<span class="hljs-symbol">\x</span>31<span class="hljs-symbol">\x</span>34<span class="hljs-symbol">\x</span>2c<span class="hljs-symbol">\x</span>31<span class="hljs-symbol">\x</span>31<span class="hljs-symbol">\x</span>36<span class="hljs-symbol">\x</span>2c<span class="hljs-symbol">\x</span>31<span class="hljs-symbol">\x</span>30<span class="hljs-symbol">\x</span>37<span class="hljs-symbol">\x</span>2c<span class="hljs-symbol">\x</span>34<span class="hljs-symbol">\x</span>39<span class="hljs-symbol">\x</span>2c<span class="hljs-symbol">\x</span>35<span class="hljs-symbol">\x</span>30&quot;));<br><br>h = window.prompt(&#x27;Enter password&#x27;);<br>alert(dechiffre(h));<br></code></pre></td></tr></table></figure><blockquote><p>\1. 这个函数被调用两次。</p><p>\2. 第一次是调用了dechiffre并传入参数“\x35\x35\x2c\x35\x36\x2c\x35\x34\x2c\x37\x39\x2c\x31\x31\x35\x2c\x36\x39\x2c\x31\x31\x34\x2c\x31\x31\x36\x2c\x31\x30\x37\x2c\x34\x39\x2c\x35\x30”作为函数的实参进行传入数据</p><p>\3. 第二次是调用了用户输入的数据（无论传入什么数据结果都一样）</p></blockquote><p>所以这个JavaScript的代码中肯定藏有flag，flag可能藏在第一次传入的参数中</p><p>\x35\x35\x2c\x35\x36\x2c\x35\x34\x2c\x37\x39\x2c\x31\x31\x35\x2c\x36\x39\x2c\x31\x31\x34\x2c\x31\x31\x36\x2c\x31\x30\x37\x2c\x34\x39\x2c\x35\x30</p><p>编写js文件对第一次传入的参数进行处理</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;utf-8&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>test<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span>&gt;</span><span class="javascript"></span><br><span class="javascript"><span class="hljs-keyword">var</span> input=<span class="hljs-string">&quot;\x35\x35\x2c\x35\x36\x2c\x35\x34\x2c\x37\x39\x2c\x31\x31\x35\x2c\x36\x39\x2c\x31\x31\x34\x2c\x31\x31\x36\x2c\x31\x30\x37\x2c\x34\x39\x2c\x35\x30&quot;</span>;</span><br><span class="javascript"><span class="hljs-keyword">var</span> result;</span><br><span class="javascript"><span class="hljs-keyword">var</span> o=<span class="hljs-number">0</span>;</span><br><span class="javascript"><span class="hljs-keyword">var</span> tab=input.split(<span class="hljs-string">&#x27;,&#x27;</span>);</span><br><span class="javascript"><span class="hljs-built_in">document</span>.write(tab);</span><br><span class="javascript"><span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i&lt;tab.length; i++)&#123;</span><br><span class="javascript">result += <span class="hljs-built_in">String</span>.fromCharCode((o=tab[i]))</span><br><span class="javascript">&#125;</span><br><span class="javascript">    <span class="hljs-built_in">document</span>.write(result);</span><br><span class="javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p>在浏览器上运行一下这段代码</p><p><img src="post_4.assets/image-85.png" alt="img"></p><p>undefined后面那段字符就是flag数据：786OsErtk12</p><p>这道题目也解决了，分析过程比较复杂，需要一定的JavaScript基础。难度其实也应该是一道简单题目，但是思路比较绕，如果比较灵敏可以直接找到关键数据，对关键数据进行unicode解码在进行ascii解码就能得出flag数据。</p><p>这里提供几个网址，便于js基础不是非常牢固的人补习一下：</p><p><a href="https://javascript.ruanyifeng.com/">https://javascript.ruanyifeng.com/</a></p><p><a href="https://www.liaoxuefeng.com/wiki/1022910821149312">https://www.liaoxuefeng.com/wiki/1022910821149312</a></p><p><a href="https://developer.mozilla.org/zh-CN/docs/learn/JavaScript">https://developer.mozilla.org/zh-CN/docs/learn/JavaScript</a></p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ol><li><a href="https://wiwiki.kfd.me/wiki/%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3">WIKI百科-蛮力攻击</a></li><li><a href="https://www.jianshu.com/p/4da49f179cee">爆破工具 Hydra 简单使用</a></li><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/X-Forwarded-For">X-Forwarded-For MDN</a></li><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Referer">Referer MDN</a></li><li><a href="https://baike.baidu.com/item/WEBSHELL">webshell 百度百科</a></li></ol><p>本期wp分享到此为止，有时间再来喝杯茶呀！</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title></title>
    <link href="/2021/06/21/post_3/"/>
    <url>/2021/06/21/post_3/</url>
    
    <content type="html"><![CDATA[<hr><h2 id="title-茗叶溢香，旗扬四方"><a href="#title-茗叶溢香，旗扬四方" class="headerlink" title="title:茗叶溢香，旗扬四方"></a>title:茗叶溢香，旗扬四方</h2><h2 id="“浅谈CTF比赛”"><a href="#“浅谈CTF比赛”" class="headerlink" title="“浅谈CTF比赛”"></a>“浅谈CTF比赛”</h2><blockquote><p>茶，叶</p><p>一旗，一茗</p><p>杯茗间，旗影下</p><p>可否扬旗，仗剑苍穹</p></blockquote><p>CTF是网络安全行业经常会接触到的一类比赛，那么CTF究竟是什么样子的比赛呢？来，喝杯茶，我们细细聊聊CTF比赛。</p><p>CTF（Capture The Flag）中文一般译作夺旗赛，在网络安全领域中指的是网络安全技术人员之间进行技术竞技的一种比赛形式。CTF起源于1996年DEFCON全球黑客大会，以代替之前黑客们通过互相发起真实攻击进行技术比拼的方式。发展至今，已经成为全球范围网络安全圈流行的竞赛形式，2013年全球举办了超过五十场国际性CTF赛事。而DEFCON作为CTF赛制的发源地，DEFCON CTF也成为了目前全球最高技术水平和影响力的CTF竞赛，类似于CTF赛场中的“世界杯” 。1</p><p>夺旗赛，听起来好像不是很难的样子，CTF的基本目标其实就找到一个数据，即flag{xxxxx}类型的数据。通常是一种解题的方式进行的，一般来说，flag{xxxxx}类型的数据不会那么轻易的展示出来或者那么容易找到。比赛中一般会设置一道签到题目来进行参赛队员的签到，签到的题目的难度一般来说不会非常高，可以通过非常简单的方式解出来或者需要一些小技巧解出。</p><p><img src="post_3.assets/image.png" alt="image"></p><p>来自BUUCTF题库</p><p>这就是一道非常简单的签到题目，flag{xxxx}的数据直接告诉你，但是这种题目。CTF比赛是不是都像ACM、蓝桥杯那样的，是一种解题的比赛？解题，是CTF比赛的一部分。CTF比赛的初衷是网络安全技术的提高和提升。只是进行解题的CTF比赛显然是不足的，不能满足CTF比赛进行的初衷，我们在CTF解题赛中仅仅只扮演了进攻方的角色，而没有担任防守方，而在真正的网络安全工作中很多时候是进行防守方的建设，进行网络安全防御机制的规划。</p><p>因此，CTF比赛也有很多类型。</p><p>CTF竞赛模式分为以下三类：<br>一、解题模式（Jeopardy）在解题模式CTF赛制中，参赛队伍可以通过互联网或者现场网络参与，这种模式的CTF竞赛与ACM编程竞赛、信息学奥赛比较类似，以解决网络安全技术挑战题目的分值和时间来排名，通常用于在线选拔赛。题目主要包含逆向、漏洞挖掘与利用、Web渗透、密码、取证、隐写、安全编程等类别。<br>二、攻防模式（Attack-Defense）在攻防模式CTF赛制中，参赛队伍在网络空间互相进行攻击和防守，挖掘网络服务漏洞并攻击对手服务来得分，修补自身服务漏洞进行防御来避免丢分。攻防模式CTF赛制可以实时通过得分反映出比赛情况，最终也以得分直接分出胜负，是一种竞争激烈，具有很强观赏性和高度透明性的网络安全赛制。在这种赛制中，不仅仅是比参赛队员的智力和技术，也比体力（因为比赛一般都会持续48小时及以上），同时也比团队之间的分工配合与合作。<br>三、混合模式（Mix）结合了解题模式与攻防模式的CTF赛制，比如参赛队伍通过解题可以获取一些初始分数，然后通过攻防对抗进行得分增减的零和游戏，最终以得分高低分出胜负。采用混合模式CTF赛制的典型代表如iCTF国际CTF竞赛。1</p><p>在高校中的CTF比赛经常是以解题类型为主的CTF比赛类型，就是寻找flag{xxxxx}类型的数据，寻找数据在什么位置，然后将flag进行提交，完成题目的解题工作。这种类型的CTF往往与网络安全工作的贴合程度不是很高，而且近几年的题目往往比较具有偏离性。现在一些比较大型的CTF解题的比赛会采用比较真实的实验环境进行比赛，夺旗。</p><p>CTF解题类比赛一般会分为几个类型来针对不同参赛队员的专攻进行相应的分类。CTF 题目类型一般分为 Web 渗透、RE 逆向、Misc 杂项、PWN 二进制漏洞利用、Crypto 密码破译。2 但是，现在智能手机也得到了较大的发展，CTF比赛也要与时俱进对吧，于是CTF比赛也就多了一个题目类型——Mobile移动端渗透。CTF的新题型，移动端渗透的题目难度往往比较大，对萌新非常不友好。移动端往往都是基于xml文件进行渗透，以及一部分逆向和无线之类的渗透方式。</p><p>CTF比赛总体来说还是非常有意思的比赛，但是有时候也会比较痛苦吧，因为题目解不出来的感觉总是挺难受的。解出题目会有一种满满的成就感。做CTF是苦乐交织的过程，在这个过程中，可以体验到能力和技术水平飞速提升，以及学习能力方面的发展和提高。</p><p>斟茶，品茗，夺旗，键动，影现。此情此景，君忆几何？</p><h2 id="参考："><a href="#参考：" class="headerlink" title="参考："></a>参考：</h2><ol><li><a href="https://tieba.baidu.com/p/3933947157?red_tag=1830578322">CTF学习与交流</a></li><li><a href="https://www.jianshu.com/p/ade6c1824d97">啥是CTF？新手如何入门CTF？</a></li></ol><p>闲聊到此为止，来喝杯茶可好？</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title></title>
    <link href="/2021/06/21/post_2/"/>
    <url>/2021/06/21/post_2/</url>
    
    <content type="html"><![CDATA[<hr><h2 id="title-杯茗藏香，君闻几何"><a href="#title-杯茗藏香，君闻几何" class="headerlink" title="title:杯茗藏香，君闻几何"></a>title:杯茗藏香，君闻几何</h2><h2 id="“浅谈密码学”"><a href="#“浅谈密码学”" class="headerlink" title="“浅谈密码学”"></a>“浅谈密码学”</h2><blockquote><p>密文寥寥，清茶袅袅。</p><p>杯杯入境，字字明心。</p></blockquote><p>密码学是主要研究密码编码和解码的一种学科，主要目标是提供在不安全的信道上的安全通信机制1</p><p>根据OWASP上面的定义来开启我们的闲聊。“密码学是主要研究密码编码和解码的一种学科”，这里有两个比较关键的词汇。密码编码和解码，密码比较好理解。平时我们注册一个账户的时候通常就需要一个密码来进行登入，密码和账户构成了网络账户的基本符号。那么，编码和解码又该怎么理解呢？</p><p>编码是信息从一种形式或格式转换为另一种形式的过程，也称为计算机编程语言的代码简称编码。2</p><p>编码，简单来说就是对内容进行编制，来确保内容不会影响到互联网整体的传输过程。在互联网中，数据传输通常是采用http，ftp，https等协议进行传输的。这些协议中也会有些特殊的字符有特殊的功能性作用，如果不进行编码，可能会出现预期之外的事故。当然编码也有一些安全性的作用，可以确保数据传输过程中数据不是特别明显的暴露，有较大的截获风险。</p><p>编码是互联网中不可或缺的一种数据处理方式。</p><p>解码是一种用特定方法，把数码还原成它所代表的内容或将电脉冲信号、光信号、无线电波等转换成它所代表的信息、数据等的过程。解码是受传者将接受到的符号或代码还原为信息的过程，与编码过程相对应。3</p><p>解码，就是将编码的内容进行还原的过程。意思很明了，在互联网中一般会将解码后的信息展示给用户，在数据传输的过程中，将数据进行编码传输。为什么这样做？一方面是为了用户的使用体验，另一方面是为了数据传输的正常进行和安全性保障。</p><p>OWASP的密码学定义相对来说是比较狭义的，只对互联网中的简单过程进行了定义，将密码学研究的范围缩小了。</p><p>那么，密码学是什么呢？</p><p>密码学，就是将OWASP对于密码学的定义进行推广和扩充。编码不仅仅限制于互联网、计算机领域中，解码也不仅仅仅限于互联网、计算机领域方面。编码就变成了加密的一个子集，解码就变成了解密的一个子集。加密前的数据就有了一个比较完整的概念，即明文。加密后的数据也有了一个名字叫密文。进行加密的工具叫做密钥。这些是密码学的基础性的概念。这些概念和体系形成了密码学的大集体。</p><p>下面是百度百科给出的对于密码学的具体定义和描述。</p><p>密码学（在西欧语文中，源于希腊语kryptós“隐藏的”，和gráphein“书写”）是研究如何隐密地传递信息的学科。在现代特别指对信息以及其传输的数学性研究，常被认为是数学和计算机科学的分支，和信息论也密切相关。著名的密码学者Ron Rivest解释道：“密码学是关于如何在敌人存在的环境中通讯”，自工程学的角度，这相当于密码学与纯数学的异同。密码学是信息安全等相关议题，如认证、访问控制的核心。密码学的首要目的是隐藏信息的涵义，并不是隐藏信息的存在。密码学也促进了计算机科学，特别是在于电脑与网络安全所使用的技术，如访问控制与信息的机密性。密码学已被应用在日常生活：包括自动柜员机的芯片卡、电脑使用者存取密码、电子商务等等。4</p><p>密码学不仅仅只是计算机领域的内容，也是一种比较多元化的体系，但是主要应用于计算机领域。密码学会涉及到很多与数学相关联的知识体系，从微积分到线性代数、概率论以及离散数学，再从线性代数到抽象代数，再从抽象代数到数论。几乎数学方面比较难的模块都涉及到了密码学中，仿佛富有丰富的能量和特别的活力。</p><p>这回只是对密码学的初步探索和学习，有时候知识都是相通的，都是彼此有联系的存在。密码学何尝不是呢？喝杯茶其实也是种生活种的密码学。</p><p>密码学有密文和明文，茶叶中有遗传密码和表现型，有香气分子和味觉感受。密码学应该是和生物学一样，是非常beautiful的学科，一定非常好玩！</p><p>请君先闻龙井香，道出多少古时芳。</p><h2 id="参考："><a href="#参考：" class="headerlink" title="参考："></a>参考：</h2><ol><li>[<a href="http://www.owasp.org.cn/]">http://www.owasp.org.cn/]</a>(<a href="http://www.owasp.org.cn/">http://www.owasp.org.cn/</a> <a href="https://baike.baidu.com/item/%E7%BC%96%E7%A0%81/80092">https://baike.baidu.com/item/编码/80092</a> <a href="https://baike.baidu.com/item/%E8%A7%A3%E7%A0%81">https://baike.baidu.com/item/解码</a>)</li><li>[<a href="https://baike.baidu.com/item/%E7%BC%96%E7%A0%81/80092]">https://baike.baidu.com/item/%E7%BC%96%E7%A0%81/80092]</a>(<a href="http://www.owasp.org.cn/">http://www.owasp.org.cn/</a> <a href="https://baike.baidu.com/item/%E7%BC%96%E7%A0%81/80092">https://baike.baidu.com/item/编码/80092</a> <a href="https://baike.baidu.com/item/%E8%A7%A3%E7%A0%81">https://baike.baidu.com/item/解码</a>)</li><li>[<a href="https://baike.baidu.com/item/%E8%A7%A3%E7%A0%81]">https://baike.baidu.com/item/%E8%A7%A3%E7%A0%81]</a>(<a href="http://www.owasp.org.cn/">http://www.owasp.org.cn/</a> <a href="https://baike.baidu.com/item/%E7%BC%96%E7%A0%81/80092">https://baike.baidu.com/item/编码/80092</a> <a href="https://baike.baidu.com/item/%E8%A7%A3%E7%A0%81">https://baike.baidu.com/item/解码</a>)</li><li><a href="https://baike.baidu.com/item/%E5%AF%86%E7%A0%81%E5%AD%A6">https://baike.baidu.com/item/%E5%AF%86%E7%A0%81%E5%AD%A6</a></li></ol><p>闲聊到此为止，来喝杯茶可好？</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title></title>
    <link href="/2021/06/21/%E8%BF%90%E5%A3%B6%E9%A3%98%E9%A6%99%EF%BC%8C%E7%94%98%E9%9C%96%E5%9B%9B%E6%96%B9/"/>
    <url>/2021/06/21/%E8%BF%90%E5%A3%B6%E9%A3%98%E9%A6%99%EF%BC%8C%E7%94%98%E9%9C%96%E5%9B%9B%E6%96%B9/</url>
    
    <content type="html"><![CDATA[<hr><h2 id="title-运壶飘香，甘霖四方"><a href="#title-运壶飘香，甘霖四方" class="headerlink" title="title:运壶飘香，甘霖四方"></a>title:运壶飘香，甘霖四方</h2><h2 id="“浅谈渗透测试”"><a href="#“浅谈渗透测试”" class="headerlink" title="“浅谈渗透测试”"></a>“浅谈渗透测试”</h2><blockquote><p>谈到网络安全就不得不谈到渗透测试，如果把饮茶的平台作为目标，渗透测试就如盈满茶汤的紫砂壶，运壶飘香，甘霖四方。整个饮茶的平台被茶汤浸润，渗透到内部。</p></blockquote><p>渗透测试(penetration test)，模拟恶意黑客的攻击方法，来评估信息系统安全的一种评估方法。技术方面，在网络安全的红蓝对抗方面更偏向于红队的方式。</p><blockquote><p>红队蓝队对抗练习，源自其军事上的先例。概念很简单：一队安全人员——红队，攻击什么东西；另一队人员——蓝队，守护之。最初，这种操练是军队用来测试部队战备度的，也用于测试敏感地区的物理安全，比如核设施及能源部下属国家实验室和技术中心。90年代，专家开始采用红蓝对抗来测试信息安全系统。</p></blockquote><p>渗透测试本身就是一种运用攻击手段进行渗透测试的方法。</p><p>渗透测试一般而言，按照7个步骤进行渗透测试：</p><ol><li>明确需求(pre-engagement)</li><li>信息收集(information-gathering)</li><li>威胁建模(threat-modeling)</li><li>漏洞分析(vulnerability analysis)</li><li>漏洞验证(exploitation)</li><li>深度攻击(post-exploitation)</li><li>文书报告(reporting)</li></ol><p>这7个步骤可能乍一看，会感觉有些懵B，我会对这些步骤进行简单地解释说明，尽量不涉及太多代码。</p><h3 id="明确需求"><a href="#明确需求" class="headerlink" title="明确需求"></a>明确需求</h3><p>渗透测试本身就是一种测试性的工作，市场有需求，然后才会出现这样一个服务型的产品。渗透测试的核心产品就是进行渗透测试，而渗透测试是可以根据客户的需求进行个性化处理的。</p><p>明确客户的需求才可以正确并合理地进行渗透测试。</p><p>可能有些人有疑问，为什么要根据客户需求来进行渗透测试？</p><p>从产品角度来说，如果产品不能满足客户的需求，客户是不会进行资金的交付的。从国家法律角度来说，没有授权的渗透测试是违法的行为，大家都不喜欢蹲在铁窗里和监狱长喝茶聊人生。</p><p>明确需求简单来说，就是明确渗透测试工作的相关信息。具体都有些什么信息呢？</p><p>一般来说渗透测试工作者需要明确以下信息：</p><ul><li>项目范围</li><li>测试窗口</li><li>联系信息</li><li>”免罪“金牌</li><li>支付条款</li></ul><h3 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h3><p>信息收集是渗透测试非常关键的一步。信息收集一般来说就是字面意思，收集渗透测试项目的各种信息。信息收集一般来说分为主动信息收集和被动信息收集。</p><p>主动信息收集，就是通过接触项目目标进行主动扫描来获取到各种各样的信息。通常会采用nmap工具进行主动信息的收集。</p><p>被动信息收集，即公开信息收集，又称开源情报分析。从搜索引擎获取有关项目目标开源的信息内容，一般来说，可以通过被动信息收集获取备案信息，服务信息等各种各样的信息。通常会采用shadow搜索引擎进行被动信息收集。</p><p>信息收集，就是收集各种有利于渗透测试的各种信息。</p><h3 id="威胁建模"><a href="#威胁建模" class="headerlink" title="威胁建模"></a>威胁建模</h3><p>威胁建模就是利用以收集的信息进行资产分析。这一步是紧紧衔接着信息收集的，简单来说，就是对信息收集所收集到的信息进行整合分析。</p><p>项目目标一般而言都是企业资产的一部分，现在步入大数据时代，很多企业的重要数据都建立在服务器等项目目标上，项目目标就相当于企业的资产。</p><p>因而威胁建模就是利用收集到的信息对项目目标进行问题分析和可能存在的威胁进行评估。</p><h3 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h3><p>漏洞分析就是发现目标系统和应用中存在的漏洞。找出项目目标的缺陷，并且通过测试手段对漏洞进行分析和发现。漏洞分析是基于信息收集的一个步骤。可以分析并探测存在的漏洞。</p><p>漏洞分析，关键在于找到漏洞。什么是漏洞？可以理解成缺陷，如果把系统或应用比作茶壶，茶壶有壶首，壶口，壶把等。而漏洞就好比，在壶身出现的空隙，而知道这个漏洞的黑客就如同空气中的微生物，可以通过这个空隙自由进出。</p><p>漏洞分析，简单来说，就是寻找项目目标存在的缺陷。</p><h3 id="漏洞验证"><a href="#漏洞验证" class="headerlink" title="漏洞验证"></a>漏洞验证</h3><p>漏洞验证，即对已发现的漏洞使用攻击向量进行攻击。这一步的工作和上一步工作环环相扣。根据上一步所发现的漏洞，通过黑客渗透工具进行验证，或者也可以说是漏洞利用。</p><p>用上一步的比喻，漏洞验证就相当于空气中微生物进入到茶壶内部的方式或者说是通道，这个通道可以确保成功进入到内部。如果可以进入到内部，就可以验证漏洞确实存在。如果不能，则反之。</p><p>漏洞分析和漏洞验证其实就挺像对一个问题的证明，首先提出一个假设，然后对这个假设进行验证。可以类比孟德尔的演绎推理，假说-实验-结论。</p><p>漏洞验证，简单来说就是对发现的漏洞进行二次检查，确保问题真实存在。</p><h3 id="深度攻击"><a href="#深度攻击" class="headerlink" title="深度攻击"></a>深度攻击</h3><p>深度攻击是基于漏洞验证步骤的进一步渗透探测，应该是深度信息收集，利用漏洞验证步骤进入到内部，来收集更多的信息和更多的资产数据，以及内部可能存在的漏洞。</p><p>打个比方，如果把系统想象成很多盒子的包裹结构，每个盒子内部都存储着一部分信息。漏洞验证步骤可以建立通往内部盒子的通道，深度攻击就可以对内部的很多盒子中的信息进行收集和查找，并且可以发现其中的漏洞，进入到更内部的盒子里面进行收集和漏洞寻找。</p><p>深度攻击，简单来说，就是更深入的漏洞分析和信息收集。</p><h3 id="文书报告"><a href="#文书报告" class="headerlink" title="文书报告"></a>文书报告</h3><p>文书报告是对渗透测试的结果进行汇报并给出简单的安全性建议，提交给客户。</p><p>文书报告一般来说分成两个部分，执行摘要和技术报告。</p><p>执行摘得就是对整个渗透测试项目的高度总结和汇报。</p><p>技术报告技术对渗透测试过程中的操作细节进行汇报。</p><p><em>渗透测试就是一种安全性测试，是一种流程化的服务型产品，更是网络安全推进过程中不可或缺的一部分，希望大家从此文都能简单了解到什么是渗透测试。</em></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">闲聊到此为止，来喝杯茶可好？<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2021/06/21/hello-world/"/>
    <url>/2021/06/21/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
